{"version":3,"sources":["./src/app/pages/users/users.module.ts","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","./src/app/services/users.service.ts","./src/app/pages/users/users.component.ts","./src/app/pages/users/users.component.html","./src/app/pages/users/list/add-user-dialog/add-user-dialog.component.ts","./src/app/pages/users/list/add-user-dialog/add-user-dialog.component.html","./src/app/pages/users/list/list.component.ts","./src/app/pages/users/list/list.component.html"],"names":[],"mappings":"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","file":"users-users-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ListComponent } from './list/list.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { UsersComponent } from './users.component';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { GeneralModule } from 'src/app/_metronic/partials/content/general/general.module';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AddUserDialogComponent } from './list/add-user-dialog/add-user-dialog.component';\r\n\r\nimport {\r\n\tMatDialogModule,\r\n\tMAT_DIALOG_DEFAULT_OPTIONS,\r\n} from '@angular/material/dialog';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ImageCropperModule } from 'ngx-image-cropper';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n\r\nimport { ConfirmationDialogComponent } from '../_sharedComponents/confirmation-dialog/confirmation-dialog.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [UsersComponent, ListComponent, AddUserDialogComponent],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tMatButtonModule,\r\n\t\tMatTableModule,\r\n\t\tMatPaginatorModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tMatIconModule,\r\n\t\tGeneralModule,\r\n\t\tMatDialogModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatButtonModule,\r\n\t\tMatSelectModule,\r\n\t\tMatInputModule,\r\n\t\tNgSelectModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tImageCropperModule,\r\n\t\tRouterModule.forChild([\r\n\t\t\t{\r\n\t\t\t\tpath: '',\r\n\t\t\t\tcomponent: UsersComponent,\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '',\r\n\t\t\t\t\t\tredirectTo: 'list',\r\n\t\t\t\t\t\tpathMatch: 'full',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: 'list',\r\n\t\t\t\t\t\tcomponent: ListComponent,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t]),\r\n\t],\r\n\tproviders: [\r\n\t\t{\r\n\t\t\tprovide: MAT_DIALOG_DEFAULT_OPTIONS,\r\n\t\t\tuseValue: {\r\n\t\t\t\thasBackdrop: true,\r\n\t\t\t\tpanelClass: 'mat-dialog-container-wrapper',\r\n\t\t\t\theight: 'auto',\r\n\t\t\t\twidth: '900px',\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n\tentryComponents: [AddUserDialogComponent, ConfirmationDialogComponent],\r\n})\r\nexport class UsersModule {}\r\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class UsersService {\r\n\tconstructor(private httpClient: HttpClient) {}\r\n\r\n\tgetUsers(queryParams) {\r\n\t\tconst queryParamsString = new HttpParams({\r\n\t\t\tfromObject: queryParams,\r\n\t\t}).toString();\r\n\r\n\t\treturn this.httpClient.get(\r\n\t\t\tenvironment.apiUrl + 'users?' + queryParamsString\r\n\t\t);\r\n\t}\r\n\r\n\tgetCreateUserParams() {\r\n\t\treturn this.httpClient.get(environment.apiUrl + 'users/create');\r\n\t}\r\n\r\n\taddUser(user) {\r\n\t\treturn this.httpClient.post(`${environment.apiUrl}users`, user);\r\n\t}\r\n\r\n\tupdateUser(user) {\r\n\t\treturn this.httpClient.patch(`${environment.apiUrl}users/` + user.id, user);\r\n\t}\r\n\r\n\tdeleteUser(id) {\r\n\t\treturn this.httpClient.delete(`${environment.apiUrl}users/` + id);\r\n\t}\r\n}\r\n\r\nexport interface UserQuery {\r\n\tpage_index: number;\r\n\titems_per_page: number;\r\n\tsearch?: string;\r\n\trole_id?: number;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { UsersService } from 'src/app/services/users.service';\r\n\r\n@Component({\r\n\tselector: 'app-add-user-dialog',\r\n\ttemplateUrl: './add-user-dialog.component.html',\r\n\tstyleUrls: ['./add-user-dialog.component.scss'],\r\n})\r\nexport class AddUserDialogComponent implements OnInit {\r\n\tuser: any = {\r\n\t\trole_id: '',\r\n\t\tallowed_access: '',\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tphone: '',\r\n\t\tpassword: '',\r\n\t};\r\n\r\n\tpages: any = [\r\n\t\t{ value: 'users', name: 'Users' },\r\n\t\t{ value: 'brands', name: 'Brands' },\r\n\t\t{ value: 'categories', name: 'Categories' },\r\n\t\t{ value: 'products', name: 'Products' },\r\n\t\t{ value: 'sales', name: 'Sales' },\r\n\t\t{ value: 'purchases', name: 'Purchases' },\r\n\t\t{ value: 'orders', name: 'Orders' },\r\n\t];\r\n\r\n\tuserForm: FormGroup;\r\n\r\n\troles: any[];\r\n\tmode: string;\r\n\tpassChange = false;\r\n\tviewLoading = true;\r\n\tdisabled: boolean;\r\n\r\n\terrorMessage: string;\r\n\r\n\tconstructor(\r\n\t\tpublic dialogRef: MatDialogRef<AddUserDialogComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate usersService: UsersService,\r\n\t\tprivate commonService: CommonService\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.roles = this.data.paramsData.roles;\r\n\t\tif (this.data.user) {\r\n\t\t\tthis.user = this.data.user;\r\n\t\t\tthis.mode = 'edit';\r\n\t\t}\r\n\t\tthis.viewLoading = false;\r\n\t}\r\n\r\n\tgetTitle(): string {\r\n\t\tif (this.user.id) {\r\n\t\t\treturn `Edit User '${this.user.name}'`;\r\n\t\t}\r\n\r\n\t\treturn 'New User';\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tthis.disabled = true;\r\n\t\tif (this.mode === 'edit') {\r\n\t\t\tthis.usersService\r\n\t\t\t\t.updateUser(this.user)\r\n\t\t\t\t.pipe(finalize(() => (this.disabled = false)))\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\t({ message }: any) => {\r\n\t\t\t\t\t\tthis.commonService.openSnackBar(message);\r\n\t\t\t\t\t\tthis.dialogRef.close(message);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t({ error }) => {\r\n\t\t\t\t\t\tthis.commonService.openSnackBar(error.message, 4000);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.usersService\r\n\t\t\t\t.addUser(this.user)\r\n\t\t\t\t.pipe(finalize(() => (this.disabled = false)))\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\t({ message }: any) => {\r\n\t\t\t\t\t\tthis.commonService.openSnackBar(message);\r\n\t\t\t\t\t\tthis.dialogRef.close(message);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t({ error }) => {\r\n\t\t\t\t\t\tthis.commonService.openSnackBar(error.message, 4000);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n","<div\r\n\tclass=\"card card-custom\"\r\n\t[ngClass]=\"{ 'card-body-progress card-body-progress-overlay': viewLoading }\"\r\n>\r\n\t<div class=\"card-header\">\r\n\t\t<div class=\"card-title\">\r\n\t\t\t<h3 class=\"card-label\">{{ getTitle() }}</h3>\r\n\t\t</div>\r\n\t</div>\r\n\t<form class=\"form\" (ngSubmit)=\"onSubmit()\" #f=\"ngForm\">\r\n\t\t<div class=\"card-body\">\r\n\t\t\t<div class=\"card-body-progress\">\r\n\t\t\t\t<mat-spinner [diameter]=\"20\"></mat-spinner>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"form-group row\">\r\n\t\t\t\t<div class=\"col-lg-4 kt-margin-bottom-20-mobile my-2\">\r\n\t\t\t\t\t<mat-form-field class=\"mat-form-field-fluid\">\r\n\t\t\t\t\t\t<mat-select\r\n\t\t\t\t\t\t\tplaceholder=\"Select Role\"\r\n\t\t\t\t\t\t\tname=\"role\"\r\n\t\t\t\t\t\t\t[(ngModel)]=\"user.role_id\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let role of roles\" [value]=\"role.id\">\r\n\t\t\t\t\t\t\t\t{{ role.name }}\r\n\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t>Role is\r\n\t\t\t\t\t\t\t<strong>required</strong>\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\t*ngIf=\"user.role_id === 1 && !user.is_super_admin\"\r\n\t\t\t\t\tclass=\"col-lg-4 kt-margin-bottom-20-mobile my-2\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<mat-form-field class=\"mat-form-field-fluid\">\r\n\t\t\t\t\t\t<mat-select\r\n\t\t\t\t\t\t\tplaceholder=\"Grant Access\"\r\n\t\t\t\t\t\t\tname=\"access\"\r\n\t\t\t\t\t\t\t[(ngModel)]=\"user.allowed_access\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let page of pages\" [value]=\"page.value\">\r\n\t\t\t\t\t\t\t\t{{ page.name }}\r\n\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t<mat-error>\r\n\t\t\t\t\t\t\t<strong>required</strong>\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-4 kt-margin-bottom-20-mobile my-2\">\r\n\t\t\t\t\t<mat-form-field class=\"mat-form-field-fluid\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tmatInput\r\n\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t[(ngModel)]=\"user.name\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t>Name is\r\n\t\t\t\t\t\t\t<strong>required</strong>\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-4 kt-margin-bottom-20-mobile my-2\">\r\n\t\t\t\t\t<mat-form-field class=\"mat-form-field-fluid\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tmatInput\r\n\t\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t[(ngModel)]=\"user.email\"\r\n\t\t\t\t\t\t\temail\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-4 kt-margin-bottom-20-mobile my-2\">\r\n\t\t\t\t\t<mat-form-field class=\"mat-form-field-fluid\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tmatInput\r\n\t\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\t\tplaceholder=\"Phone\"\r\n\t\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\t\t[(ngModel)]=\"user.phone\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t>Phone is\r\n\t\t\t\t\t\t\t<strong>required</strong>\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\t*ngIf=\"mode == 'edit'\"\r\n\t\t\t\t\tclass=\"\r\n\t\t\t\t\t\tcol-lg-4\r\n\t\t\t\t\t\tkt-margin-bottom-20-mobile\r\n\t\t\t\t\t\tmy-2\r\n\t\t\t\t\t\td-flex\r\n\t\t\t\t\t\talign-items-center\r\n\t\t\t\t\t\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<span class=\"mx-3\">Change Password</span\r\n\t\t\t\t\t><mat-slide-toggle\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tname=\"passChange\"\r\n\t\t\t\t\t\t[(ngModel)]=\"passChange\"\r\n\t\t\t\t\t></mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"col-lg-4 kt-margin-bottom-20-mobile my-2\"\r\n\t\t\t\t\t*ngIf=\"mode !== 'edit' || (mode === 'edit' && passChange)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<mat-form-field class=\"mat-form-field-fluid\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tmatInput\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t[(ngModel)]=\"user.password\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t>Password is\r\n\t\t\t\t\t\t\t<strong>required</strong>\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"card-footer\">\r\n\t\t\t<div class=\"d-flex justify-content-between\">\r\n\t\t\t\t<div class=\"mr-2\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tmat-raised-button\r\n\t\t\t\t\t\tmat-dialog-close\r\n\t\t\t\t\t\tcdkFocusInitial\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCancel</button\r\n\t\t\t\t\t>&nbsp;\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tmat-raised-button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t(click)=\"onSubmit()\"\r\n\t\t\t\t\t\t[disabled]=\"viewLoading || f.invalid || f.pristine || disabled\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</form>\r\n</div>\r\n","import {\r\n\tAfterViewInit,\r\n\tChangeDetectorRef,\r\n\tComponent,\r\n\tOnDestroy,\r\n\tOnInit,\r\n\tViewChild,\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { debounceTime, startWith, switchMap } from 'rxjs/operators';\r\nimport { merge, Subscription } from 'rxjs';\r\n\r\nimport { CommonService } from 'src/app/services/common.service';\r\n\r\nimport { ConfirmationDialogComponent } from '../../_sharedComponents/confirmation-dialog/confirmation-dialog.component';\r\nimport { AddUserDialogComponent } from './add-user-dialog/add-user-dialog.component';\r\nimport { UserQuery, UsersService } from 'src/app/services/users.service';\r\nimport { AuthService } from 'src/app/modules/auth';\r\n\r\n@Component({\r\n\tselector: 'app-list',\r\n\ttemplateUrl: './list.component.html',\r\n\tstyleUrls: ['./list.component.scss'],\r\n})\r\nexport class ListComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\t@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n\tloaded = false;\r\n\tsubscriptions: Subscription[] = [];\r\n\tsearch = new FormControl('');\r\n\trole = new FormControl('');\r\n\tpageIndex = 0;\r\n\tpageSize = 20;\r\n\tusers: any[] = [];\r\n\troles: any[] = [];\r\n\ttotalUsers: number;\r\n\tuserData: any;\r\n\tqueryParams: UserQuery;\r\n\tcurrentUser = this.authService.currentUserValue;\r\n\r\n\tdisplayedColumns = ['name', 'email', 'phone', 'role', 'actions'];\r\n\r\n\tconstructor(\r\n\t\tprivate commonService: CommonService,\r\n\t\tprivate cdr: ChangeDetectorRef,\r\n\t\tprivate usersService: UsersService,\r\n\t\tpublic dialog: MatDialog,\r\n\t\tprivate authService: AuthService\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.usersService.getCreateUserParams().subscribe((response: any) => {\r\n\t\t\tthis.userData = response;\r\n\t\t\tthis.roles = response.roles;\r\n\t\t});\r\n\t}\r\n\r\n\tngAfterViewInit(): void {\r\n\t\tthis.search.valueChanges.subscribe(() => {\r\n\t\t\tthis.paginator.pageIndex = 0;\r\n\t\t});\r\n\t\tthis.role.valueChanges.subscribe(() => {\r\n\t\t\tthis.paginator.pageIndex = 0;\r\n\t\t});\r\n\r\n\t\tconst filterSubscription = merge(\r\n\t\t\tthis.role.valueChanges,\r\n\t\t\tthis.paginator.page\r\n\t\t)\r\n\t\t\t.pipe(startWith({}), switchMap(this.prepareQueryParams.bind(this)))\r\n\t\t\t.subscribe(this.handleResponse.bind(this));\r\n\r\n\t\tconst searchSubscription = this.search.valueChanges\r\n\t\t\t.pipe(debounceTime(1000), switchMap(this.prepareQueryParams.bind(this)))\r\n\t\t\t.subscribe(this.handleResponse.bind(this));\r\n\r\n\t\tthis.subscriptions.push(filterSubscription, searchSubscription);\r\n\t}\r\n\r\n\tprepareQueryParams() {\r\n\t\tthis.loaded = false;\r\n\r\n\t\tthis.queryParams = {\r\n\t\t\tpage_index: this.paginator.pageIndex,\r\n\t\t\tsearch: this.search.value,\r\n\t\t\titems_per_page: this.pageSize,\r\n\t\t\trole_id: this.role.value,\r\n\t\t};\r\n\r\n\t\treturn this.usersService.getUsers(this.queryParams);\r\n\t}\r\n\r\n\thandleResponse(response: any) {\r\n\t\tthis.totalUsers = response.total;\r\n\t\tthis.users = response.users;\r\n\t\tthis.loaded = true;\r\n\t\tthis.cdr.detectChanges();\r\n\t}\r\n\r\n\taddUser() {\r\n\t\tconst dialogRef = this.dialog.open(AddUserDialogComponent, {\r\n\t\t\tdata: { paramsData: this.userData },\r\n\t\t\tdisableClose: true,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((res) => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.usersService\r\n\t\t\t\t.getUsers(this.queryParams)\r\n\t\t\t\t.subscribe(this.handleResponse.bind(this));\r\n\t\t});\r\n\t}\r\n\r\n\teditUser(User) {\r\n\t\tconst dialogRef = this.dialog.open(AddUserDialogComponent, {\r\n\t\t\tdata: { paramsData: this.userData, user: User },\r\n\t\t\tdisableClose: true,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((res) => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.usersService\r\n\t\t\t\t.getUsers(this.queryParams)\r\n\t\t\t\t.subscribe(this.handleResponse.bind(this));\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteUser(id, index) {\r\n\t\tconst dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n\t\t\tdata: { title: 'Delete User', message: 'Are you sure?' },\r\n\t\t\twidth: '440px',\r\n\t\t\tdisableClose: true,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((res) => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (res.confirm) {\r\n\t\t\t\tthis.usersService.deleteUser(id).subscribe(\r\n\t\t\t\t\t(response: any) => {\r\n\t\t\t\t\t\tconst users = [...this.users];\r\n\t\t\t\t\t\tusers.splice(index, 1);\r\n\t\t\t\t\t\tthis.users = users;\r\n\t\t\t\t\t\tthis.cdr.detectChanges();\r\n\t\t\t\t\t\tthis.commonService.openSnackBar(response.message);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t({ error }) => {\r\n\t\t\t\t\t\tthis.commonService.openSnackBar(error.message, 4000);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy(): void {}\r\n}\r\n","<div class=\"card card-custom\">\r\n\t<div class=\"card-header\">\r\n\t\t<div class=\"card-title\">\r\n\t\t\t<h3>Users</h3>\r\n\t\t</div>\r\n\t\t<div class=\"card-toolbar\">\r\n\t\t\t<button class=\"btn btn-primary\" (click)=\"addUser()\" [disabled]=\"!loaded\">\r\n\t\t\t\tAdd User\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"card-body\">\r\n\t\t<!-- start::FILTERS & GROUP ACTIONS -->\r\n\t\t<div class=\"form mb-3\">\r\n\t\t\t<!-- start::FILTERS -->\r\n\t\t\t<div class=\"form-filtration\">\r\n\t\t\t\t<div class=\"row align-items-center\">\r\n\t\t\t\t\t<div class=\"col-lg-3 kt-margin-bottom-10-mobile\">\r\n\t\t\t\t\t\t<mat-form-field class=\"mat-form-field-fluid\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tmatInput\r\n\t\t\t\t\t\t\t\tplaceholder=\"Search user\"\r\n\t\t\t\t\t\t\t\t[formControl]=\"search\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<mat-hint align=\"start\"> <strong>Search</strong> Users </mat-hint>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-lg-3 kt-margin-bottom-10-mobile\">\r\n\t\t\t\t\t\t<mat-form-field class=\"mat-form-field-fluid\">\r\n\t\t\t\t\t\t\t<mat-label>Role</mat-label>\r\n\t\t\t\t\t\t\t<mat-select [formControl]=\"role\" placeholder=\"Role\">\r\n\t\t\t\t\t\t\t\t<mat-option value=\"\"> All </mat-option>\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let role of roles\" [value]=\"role.id\">\r\n\t\t\t\t\t\t\t\t\t{{ role.name }}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t<mat-hint align=\"start\">\r\n\t\t\t\t\t\t\t\t<strong>Filter</strong> by Role\r\n\t\t\t\t\t\t\t</mat-hint>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<!-- end::FILTERS & GROUP ACTIONS -->\r\n\t\t<div class=\"mat-table-wrapper\">\r\n\t\t\t<mat-table #table [dataSource]=\"users\">\r\n\t\t\t\t<!--- Note that these columns can be defined in any order.\r\n\t\t\t\tThe actual rendered columns are set as a property on the row definition\" -->\r\n\t\t\t\t<!-- Name Column -->\r\n\r\n\t\t\t\t<ng-container matColumnDef=\"name\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{ element.name }} </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t<ng-container matColumnDef=\"email\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let element\">\r\n\t\t\t\t\t\t{{ element.email }}\r\n\t\t\t\t\t</mat-cell>\r\n\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t<ng-container matColumnDef=\"phone\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Phone </mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let element\">\r\n\t\t\t\t\t\t{{ element.phone }}\r\n\t\t\t\t\t</mat-cell>\r\n\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t<ng-container matColumnDef=\"role\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Role </mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let element\">\r\n\t\t\t\t\t\t{{ element.role.name }}\r\n\t\t\t\t\t</mat-cell>\r\n\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t<!-- Actions Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"actions\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let user; let index = index\">\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t*ngIf=\"\r\n\t\t\t\t\t\t\t\t!user.is_super_admin || currentUser.id === user.id;\r\n\t\t\t\t\t\t\t\telse superAdmin\r\n\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<button mat-icon-button color=\"primary\" (click)=\"editUser(user)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>create</mat-icon></button\r\n\t\t\t\t\t\t\t>&nbsp;\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tmat-icon-button\r\n\t\t\t\t\t\t\t\tcolor=\"warn\"\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t(click)=\"deleteUser(user.id, index)\"\r\n\t\t\t\t\t\t\t\t[disabled]=\"currentUser.id === user.id\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ng-template #superAdmin> Super Admin </ng-template>\r\n\t\t\t\t\t</mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<!-- Symbol Column -->\r\n\t\t\t\t<mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n\t\t\t\t<mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n\t\t\t</mat-table>\r\n\r\n\t\t\t<!-- Message for empty data  -->\r\n\t\t\t<div class=\"mat-table-message\" *ngIf=\"loaded && users.length == 0\">\r\n\t\t\t\tNo records found\r\n\t\t\t</div>\r\n\t\t\t<div class=\"mat-table-message\" *ngIf=\"!loaded && !users.length\">\r\n\t\t\t\tPlease wait....\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- start: BOTTOM -->\r\n\t\t<div class=\"mat-table-bottom\">\r\n\t\t\t<!-- MATERIAL SPINNER | Url: 'https://material.angular.io/components/progress-spinner/overview' -->\r\n\t\t\t<mat-spinner [diameter]=\"20\" *ngIf=\"!loaded\"></mat-spinner>\r\n\t\t\t<!-- MATERIAL PAGINATOR | Binded to dasources -->\r\n\t\t\t<!-- See off.documentations 'https://material.angular.io/components/paginator/overview' -->\r\n\t\t\t<mat-paginator\r\n\t\t\t\t[pageSize]=\"pageSize\"\r\n\t\t\t\t[showFirstLastButtons]=\"true\"\r\n\t\t\t\t[length]=\"totalUsers\"\r\n\t\t\t></mat-paginator>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}
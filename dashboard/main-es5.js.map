{"version":3,"sources":["webpack:///src/app/modules/auth/_services/auth.service.ts","webpack:///src/app/modules/i18n/vocabs/fr.ts","webpack:///src/app/modules/i18n/vocabs/ch.ts","webpack:///src/app/_metronic/partials/layout/splash-screen/splash-screen.component.ts","webpack:///src/app/_metronic/partials/layout/splash-screen/splash-screen.component.html","webpack:///src/app/_metronic/shared/crud-table/components/paginator/ng-pagination/ng-pagination.config.ts","webpack:///src/environments/environment.ts","webpack:///src/app/_metronic/shared/crud-table/index.ts","webpack:///src/app/_metronic/shared/crud-table/services/table.extended.service.ts","webpack:///src/app/_metronic/core/services/intercept.service.ts","webpack:///src/app/modules/auth/_models/auth.model.ts","webpack:///src/app/modules/auth/_services/auth-http/index.ts","webpack:///src/app/_metronic/partials/layout/splash-screen/splash-screen.service.ts","webpack:///src/app/modules/i18n/vocabs/jp.ts","webpack:///src/app/_metronic/partials/layout/splash-screen/splash-screen.module.ts","webpack:///src/app/modules/auth/registration/confirm-password.validator.ts","webpack:///src/app/_metronic/shared/crud-table/crud-table.module.ts","webpack:///src/app/_metronic/shared/crud-table/components/paginator/ng-pagination/ng-pagination.component.ts","webpack:///src/app/_metronic/shared/crud-table/components/paginator/ng-pagination/ng-pagination.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/modules/i18n/vocabs/en.ts","webpack:///src/app/_metronic/shared/crud-table/models/grouping.model.ts","webpack:///src/app/app.module.ts","webpack:///src/app/_metronic/shared/crud-table/services/table.service.ts","webpack:///src/app/modules/i18n/translation.service.ts","webpack:///src/app/_metronic/shared/crud-table/models/paginator.model.ts","webpack:///src/app/_metronic/shared/crud-table/models/sort.model.ts","webpack:///src/app/_metronic/shared/crud-table/components/paginator/paginator.component.ts","webpack:///src/app/_metronic/shared/crud-table/components/paginator/paginator.component.html","webpack:///src/app/modules/auth/_services/auth-http/auth-http.service.ts","webpack:///src/app/modules/auth/_services/auth.guard.ts","webpack:///src/app/modules/auth/_models/user.model.ts","webpack:///src/app/modules/i18n/vocabs/de.ts","webpack:///src/app/modules/auth/index.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/_metronic/shared/crud-table/components/sort-icon/sort-icon.component.ts","webpack:///src/app/_metronic/shared/crud-table/components/sort-icon/sort-icon.component.html","webpack:///src/app/modules/i18n/vocabs/es.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AuthService","authHttpService","router","unsubscribe","authLocalStorageToken","appVersion","USERDATA_KEY","isLoadingSubject","currentUserSubject","undefined","currentUser$","asObservable","isLoading$","subscr","getUserByToken","subscribe","push","username","password","next","login","pipe","auth","result","setAuthFromLocalStorage","err","console","error","localStorage","removeItem","navigate","queryParams","getAuthFromLocalStorage","accessToken","user","logout","createUser","email","forgotPassword","setItem","JSON","stringify","authData","parse","getItem","forEach","sb","value","providedIn","locale","lang","data","TRANSLATOR","SELECT","MENU","NEW","ACTIONS","CREATE_POST","PAGES","FEATURES","APPS","DASHBOARD","AUTH","GENERAL","OR","SUBMIT_BUTTON","NO_ACCOUNT","SIGNUP_BUTTON","FORGOT_BUTTON","BACK_BUTTON","PRIVACY","LEGAL","CONTACT","LOGIN","TITLE","BUTTON","FORGOT","DESC","SUCCESS","REGISTER","INPUT","EMAIL","FULLNAME","PASSWORD","CONFIRM_PASSWORD","USERNAME","VALIDATION","INVALID","REQUIRED","MIN_LENGTH","AGREEMENT_REQUIRED","NOT_FOUND","INVALID_LOGIN","REQUIRED_FIELD","MIN_LENGTH_FIELD","MAX_LENGTH_FIELD","INVALID_FIELD","ECOMMERCE","COMMON","SELECTED_RECORDS_COUNT","ALL","SUSPENDED","ACTIVE","FILTER","BY_STATUS","BY_TYPE","BUSINESS","INDIVIDUAL","SEARCH","IN_ALL_FIELDS","CUSTOMERS","CUSTOMERS_LIST","NEW_CUSTOMER","DELETE_CUSTOMER_SIMPLE","DESCRIPTION","WAIT_DESCRIPTION","MESSAGE","DELETE_CUSTOMER_MULTY","UPDATE_STATUS","EDIT","UPDATE_MESSAGE","ADD_MESSAGE","SplashScreenComponent","el","splashScreenService","init","splashScreen","selector","templateUrl","styleUrls","NgPaginationConfig","disabled","boundaryLinks","directionLinks","ellipses","maxSize","pageSize","rotate","environment","production","apiUrl","TableExtendedService","http","InterceptService","injector","request","clone","setHeaders","Authorization","handle","event","status","authService","get","message","AuthModel","SplashScreenService","animationBuilder","element","stopped","player","build","opacity","create","nativeElement","onDone","remove","style","display","setTimeout","play","SplashScreenModule","declarations","imports","exports","ConfirmPasswordValidator","control","confirmPassword","setErrors","ConfirmPassword","CRUDTableModule","$event","preventDefault","getValueInRange","max","min","Math","isNumber","isNaN","toInteger","parseInt","NgPaginationEllipsis","templateRef","NgPaginationFirst","NgPaginationLast","NgPaginationNext","NgPaginationNumber","NgPaginationPrevious","NgPagination","config","pageCount","pages","page","pageChange","size","hasNext","hasPrevious","pageNumber","_updatePages","changes","start","end","unshift","leftOffset","floor","rightOffset","ceil","newPageNo","prevPageNo","collectionSize","emit","newPage","length","i","_setPageInRange","_applyRotation","_applyPagination","slice","_applyEllipses","changeDetection","OnPush","host","tplEllipsis","tplFirst","tplLast","tplNext","tplNumber","tplPrevious","AppComponent","translationService","tableService","loadTranslations","routerSubscription","events","setDefaults","hide","window","scrollTo","document","body","classList","add","GroupingState","selectedRowIds","Set","itemIds","id","has","_itemIds","areAllSelected","Array","from","appInitializer","Promise","resolve","AppModule","provide","useFactory","multi","deps","useClass","useValue","coreLibraryLoader","languages","xml","typescript","scss","json","forRoot","providers","bootstrap","DEFAULT_STATE","filter","paginator","sorting","searchTerm","grouping","entityId","TableService","_items$","_isLoading$","_isFirstLoading$","_tableState$","_errorMessage","_subscriptions","API_URL","item","post","tableState","url","items","total","put","ids","find","res","patchStateWithoutFetch","recalculatePaginator","map","clearRows","patch","fetch","newState","Object","assign","LOCALIZATION_LOCAL_STORAGE_KEY","TranslationService","translate","langIds","addLangs","setDefaultLang","args","locales","setTranslation","use","getDefaultLang","PageSizes","PaginatorState","pageSizes","SortState","column","direction","PaginatorComponent","paginate","num","sizeChange","isLoading","AuthHTTPService","role","AuthGuard","route","state","currentUser","currentUserValue","UserModel","name","pic","role_id","occupation","companyName","phone","routes","path","loadChildren","then","m","AuthModule","ErrorsModule","canActivate","LayoutModule","redirectTo","AppRoutingModule","SortIconComponent","sort","isActive","parent","parentElement","activeColumn","addEventListener","activeDirection","bootstrapModule","webpackEmptyAsyncContext","req","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Observable, BehaviorSubject, of, Subscription } from 'rxjs';\r\nimport { map, catchError, switchMap, finalize } from 'rxjs/operators';\r\nimport { UserModel } from '../_models/user.model';\r\nimport { AuthModel } from '../_models/auth.model';\r\nimport { AuthHTTPService } from './auth-http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class AuthService implements OnDestroy {\r\n\t// private fields\r\n\tprivate unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\tprivate authLocalStorageToken = `${environment.appVersion}-${environment.USERDATA_KEY}`;\r\n\r\n\t// public fields\r\n\tcurrentUser$: Observable<UserModel>;\r\n\tisLoading$: Observable<boolean>;\r\n\tcurrentUserSubject: BehaviorSubject<UserModel>;\r\n\tisLoadingSubject: BehaviorSubject<boolean>;\r\n\r\n\tget currentUserValue(): UserModel {\r\n\t\treturn this.currentUserSubject.value;\r\n\t}\r\n\r\n\tset currentUserValue(user: UserModel) {\r\n\t\tthis.currentUserSubject.next(user);\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tprivate authHttpService: AuthHTTPService,\r\n\t\tprivate router: Router\r\n\t) {\r\n\t\tthis.isLoadingSubject = new BehaviorSubject<boolean>(false);\r\n\t\tthis.currentUserSubject = new BehaviorSubject<UserModel>(undefined);\r\n\t\tthis.currentUser$ = this.currentUserSubject.asObservable();\r\n\t\tthis.isLoading$ = this.isLoadingSubject.asObservable();\r\n\t\tconst subscr = this.getUserByToken().subscribe();\r\n\t\tthis.unsubscribe.push(subscr);\r\n\t}\r\n\r\n\t// public methods\r\n\tlogin(username: string, password: string): Observable<UserModel> {\r\n\t\tthis.isLoadingSubject.next(true);\r\n\t\treturn this.authHttpService.login(username, password).pipe(\r\n\t\t\tmap((auth: AuthModel) => {\r\n\t\t\t\tconst result = this.setAuthFromLocalStorage(auth);\r\n\t\t\t\treturn result;\r\n\t\t\t}),\r\n\t\t\tswitchMap(() => this.getUserByToken()),\r\n\t\t\tcatchError((err) => {\r\n\t\t\t\tconsole.error('err', err);\r\n\t\t\t\treturn of(undefined);\r\n\t\t\t}),\r\n\t\t\tfinalize(() => this.isLoadingSubject.next(false))\r\n\t\t);\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tlocalStorage.removeItem(this.authLocalStorageToken);\r\n\t\tthis.router.navigate(['/auth/login'], {\r\n\t\t\tqueryParams: {},\r\n\t\t});\r\n\t}\r\n\r\n\tgetUserByToken(): Observable<UserModel> {\r\n\t\tconst auth = this.getAuthFromLocalStorage();\r\n\t\tif (!auth || !auth.accessToken) {\r\n\t\t\treturn of(undefined);\r\n\t\t}\r\n\r\n\t\tthis.isLoadingSubject.next(true);\r\n\t\treturn this.authHttpService.getUserByToken().pipe(\r\n\t\t\tmap((user: UserModel) => {\r\n\t\t\t\tif (user) {\r\n\t\t\t\t\tthis.currentUserSubject = new BehaviorSubject<UserModel>(user);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.logout();\r\n\t\t\t\t}\r\n\t\t\t\treturn user;\r\n\t\t\t}),\r\n\t\t\tfinalize(() => this.isLoadingSubject.next(false))\r\n\t\t);\r\n\t}\r\n\r\n\t// need create new user then login\r\n\tregistration(user: UserModel): Observable<any> {\r\n\t\tthis.isLoadingSubject.next(true);\r\n\t\treturn this.authHttpService.createUser(user).pipe(\r\n\t\t\tmap(() => {\r\n\t\t\t\tthis.isLoadingSubject.next(false);\r\n\t\t\t}),\r\n\t\t\tswitchMap(() => this.login(user.email, user.password)),\r\n\t\t\tcatchError((err) => {\r\n\t\t\t\tconsole.error('err', err);\r\n\t\t\t\treturn of(undefined);\r\n\t\t\t}),\r\n\t\t\tfinalize(() => this.isLoadingSubject.next(false))\r\n\t\t);\r\n\t}\r\n\r\n\tforgotPassword(email: string): Observable<boolean> {\r\n\t\tthis.isLoadingSubject.next(true);\r\n\t\treturn this.authHttpService\r\n\t\t\t.forgotPassword(email)\r\n\t\t\t.pipe(finalize(() => this.isLoadingSubject.next(false)));\r\n\t}\r\n\r\n\t// private methods\r\n\tprivate setAuthFromLocalStorage(auth: AuthModel): boolean {\r\n\t\t// store auth accessToken/refreshToken/epiresIn in local storage to keep user logged in between page refreshes\r\n\t\tif (auth && auth.accessToken) {\r\n\t\t\tlocalStorage.setItem(this.authLocalStorageToken, JSON.stringify(auth));\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate getAuthFromLocalStorage(): AuthModel {\r\n\t\ttry {\r\n\t\t\tconst authData = JSON.parse(\r\n\t\t\t\tlocalStorage.getItem(this.authLocalStorageToken)\r\n\t\t\t);\r\n\t\t\treturn authData;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n\t}\r\n}\r\n","// France\r\nexport const locale = {\r\n  lang: 'fr',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'choisissez votre langue',\r\n    },\r\n    MENU: {\r\n      NEW: 'Nouveau',\r\n      ACTIONS: 'Actes',\r\n      CREATE_POST: 'Créer un nouveau Post',\r\n      PAGES: 'Pages',\r\n      FEATURES: 'Fonctionnalités',\r\n      APPS: 'Applications',\r\n      DASHBOARD: 'Tableau de Bord',\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'Ou',\r\n        SUBMIT_BUTTON: 'Soumettre',\r\n        NO_ACCOUNT: 'Ne pas avoir de compte?',\r\n        SIGNUP_BUTTON: 'Registre',\r\n        FORGOT_BUTTON: 'Mot de passe oublié',\r\n        BACK_BUTTON: 'Back',\r\n        PRIVACY: 'Privacy',\r\n        LEGAL: 'Legal',\r\n        CONTACT: 'Contact',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Créer un compte',\r\n        BUTTON: 'Sign In',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Mot de passe',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'Nom d\\'utilisateur'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} n\\'est pas valide',\r\n        REQUIRED: '{{name}} est requis',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Nombre d\\'enregistrements sélectionnés: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'éCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Les clients',\r\n        CUSTOMERS_LIST: 'Liste des clients',\r\n        NEW_CUSTOMER: 'Nouveau client',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Suppression du client',\r\n          DESCRIPTION: 'Êtes-vous sûr de supprimer définitivement ce client?',\r\n          WAIT_DESCRIPTION: 'Le client est en train de supprimer ...',\r\n          MESSAGE: 'Le client a été supprimé'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Supprimer les clients',\r\n          DESCRIPTION: 'Êtes-vous sûr de supprimer définitivement les clients sélectionnés?',\r\n          WAIT_DESCRIPTION: 'Les clients suppriment ...',\r\n          MESSAGE: 'Les clients sélectionnés ont été supprimés'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Le statut a été mis à jour pour les clients sélectionnés',\r\n          MESSAGE: 'Le statut des clients sélectionnés a été mis à jour avec succès'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Le client a été mis à jour',\r\n          ADD_MESSAGE: 'Le client a été créé'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","// China\r\nexport const locale = {\r\n  lang: 'ch',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: '选择你的语言',\r\n    },\r\n    MENU: {\r\n      NEW: '新',\r\n      ACTIONS: '行动',\r\n      CREATE_POST: '创建新帖子',\r\n      PAGES: 'Pages',\r\n      FEATURES: '特征',\r\n      APPS: '应用',\r\n      DASHBOARD: '仪表板',\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: '要么',\r\n        SUBMIT_BUTTON: '提交',\r\n        NO_ACCOUNT: '没有账号？',\r\n        SIGNUP_BUTTON: '注册',\r\n        FORGOT_BUTTON: '忘记密码',\r\n        BACK_BUTTON: '背部',\r\n        PRIVACY: '隐私',\r\n        LEGAL: '法律',\r\n        CONTACT: '联系',\r\n      },\r\n      LOGIN: {\r\n        TITLE: '创建帐号',\r\n        BUTTON: '签到',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: '用戶名'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: '顾客',\r\n        CUSTOMERS_LIST: '客户名单',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { SplashScreenService } from './splash-screen.service';\r\n\r\n@Component({\r\n\tselector: 'app-splash-screen',\r\n\ttemplateUrl: './splash-screen.component.html',\r\n\tstyleUrls: ['./splash-screen.component.scss'],\r\n})\r\nexport class SplashScreenComponent implements OnInit {\r\n\t@ViewChild('splashScreen', { static: true }) splashScreen: ElementRef;\r\n\r\n\tconstructor(\r\n\t\tprivate el: ElementRef,\r\n\t\tprivate splashScreenService: SplashScreenService\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.splashScreenService.init(this.splashScreen);\r\n\t}\r\n}\r\n","<!-- splash screen -->\r\n<div #splashScreen id=\"splash-screen\">\r\n  <img src=\"./assets/media/logos/logo-dark.png\" alt=\"Logo\" />\r\n  <svg class=\"splash-spinner\" viewBox=\"0 0 50 50\">\r\n    <circle\r\n      class=\"path\"\r\n      cx=\"25\"\r\n      cy=\"25\"\r\n      r=\"20\"\r\n      fill=\"none\"\r\n      stroke-width=\"5\"\r\n    ></circle>\r\n  </svg>\r\n</div>\r\n","// Fork of https://github.com/ng-bootstrap/ng-bootstrap/blob/master/src/pagination/pagination-config.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { PageSizes } from '../../../models/paginator.model';\r\n\r\n/**\r\n * A configuration service for the [`NgPagination`](#/components/paginator/api#NgPagination) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the paginations used in the application.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class NgPaginationConfig {\r\n  disabled = false;\r\n  boundaryLinks = false;\r\n  directionLinks = true;\r\n  ellipses = true;\r\n  maxSize = 0;\r\n  pageSize = PageSizes[2];\r\n  rotate = false;\r\n  size: 'sm' | 'lg';\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n\tproduction: false,\r\n\tappVersion: 'v717demo1',\r\n\tUSERDATA_KEY: 'authf649fc9a5f55',\r\n\tapiUrl: 'http://localhost/capri-traders/api/public/api/',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","// Models\r\nexport * from './models/table.model';\r\nexport * from './models/sort.model';\r\nexport * from './models/paginator.model';\r\nexport * from './models/grouping.model';\r\nexport * from './models/search.model';\r\nexport * from './models/filter.model';\r\nexport { BaseModel } from './models/base.model';\r\n// Directives\r\n// Services\r\nexport * from './services/table.service';\r\nexport * from './services/table.extended.service';\r\n// Module\r\nexport { CRUDTableModule } from './crud-table.module';\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TableService } from './table.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TableExtendedService extends TableService<any> {\r\n  constructor(@Inject(HttpClient) http) {\r\n    super(http);\r\n  }\r\n}\r\n","import {\r\n\tHttpEvent,\r\n\tHttpHandler,\r\n\tHttpInterceptor,\r\n\tHttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/modules/auth';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class InterceptService implements HttpInterceptor {\r\n\tprivate authLocalStorageToken = `${environment.appVersion}-${environment.USERDATA_KEY}`;\r\n\tconstructor(private injector: Injector) {}\r\n\tintercept(\r\n\t\trequest: HttpRequest<any>,\r\n\t\tnext: HttpHandler\r\n\t): Observable<HttpEvent<any>> {\r\n\t\tconst auth = JSON.parse(localStorage.getItem(this.authLocalStorageToken));\r\n\r\n\t\tif (auth && auth.accessToken) {\r\n\t\t\trequest = request.clone({\r\n\t\t\t\tsetHeaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${auth.accessToken}`,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn next.handle(request).pipe(\r\n\t\t\ttap(\r\n\t\t\t\t(event) => {\r\n\t\t\t\t\treturn event;\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\t// http response status code\r\n\t\t\t\t\t// console.log('----response----');\r\n\t\t\t\t\t// console.error('status code:');\r\n\t\t\t\t\tif (error.status === 401) {\r\n\t\t\t\t\t\tconst authService = this.injector.get(AuthService);\r\n\t\t\t\t\t\tauthService.logout();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(error.status);\r\n\t\t\t\t\t\tconsole.error(error.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n","export class AuthModel {\r\n\taccessToken: string;\r\n\r\n\tsetAuth(auth: any) {\r\n\t\tthis.accessToken = auth.accessToken;\r\n\t}\r\n}\r\n","// #real-start#\r\nexport { AuthHTTPService } from './auth-http.service'; // You have to uncomment this, when your real back-end is done\r\n// #real-end#\r\n","import { ElementRef, Injectable } from '@angular/core';\r\nimport { animate, AnimationBuilder, style } from '@angular/animations';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SplashScreenService {\r\n  // Private properties\r\n  private el: ElementRef;\r\n  private stopped: boolean;\r\n\r\n  /**\r\n   * Service constructor\r\n   *\r\n   * @param animationBuilder: AnimationBuilder\r\n   */\r\n  constructor(private animationBuilder: AnimationBuilder) {}\r\n\r\n  /**\r\n   * Init\r\n   *\r\n   * @param element: ElementRef\r\n   */\r\n  init(element: ElementRef) {\r\n    this.el = element;\r\n  }\r\n\r\n  /**\r\n   * Hide\r\n   */\r\n  hide() {\r\n    if (this.stopped || !this.el) {\r\n      return;\r\n    }\r\n\r\n    const player = this.animationBuilder\r\n      .build([style({ opacity: '1' }), animate(800, style({ opacity: '0' }))])\r\n      .create(this.el.nativeElement);\r\n\r\n    player.onDone(() => {\r\n      if (typeof this.el.nativeElement.remove === 'function') {\r\n        this.el.nativeElement.remove();\r\n      } else {\r\n        this.el.nativeElement.style.display = 'none !important';\r\n      }\r\n      this.stopped = true;\r\n    });\r\n\r\n    setTimeout(() => player.play(), 100);\r\n  }\r\n}\r\n","// Japan\r\nexport const locale = {\r\n  lang: 'jp',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'あなたが使う言語を選んでください',\r\n    },\r\n    MENU: {\r\n      NEW: '新しい',\r\n      ACTIONS: '行動',\r\n      CREATE_POST: '新しい投稿を作成',\r\n      PAGES: 'Pages',\r\n      FEATURES: '特徴',\r\n      APPS: 'アプリ',\r\n      DASHBOARD: 'ダッシュボード',\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'または',\r\n        SUBMIT_BUTTON: '提出する',\r\n        NO_ACCOUNT: 'アカウントを持っていない？',\r\n        SIGNUP_BUTTON: 'サインアップ',\r\n        FORGOT_BUTTON: 'パスワードをお忘れですか',\r\n        BACK_BUTTON: 'バック',\r\n        PRIVACY: 'プライバシー',\r\n        LEGAL: '法的',\r\n        CONTACT: '接触',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Create Account',\r\n        BUTTON: 'Sign In',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'ユーザー名'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Customers',\r\n        CUSTOMERS_LIST: 'Customers list',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SplashScreenComponent } from './splash-screen.component';\r\n\r\n@NgModule({\r\n  declarations: [SplashScreenComponent],\r\n  imports: [CommonModule],\r\n  exports: [SplashScreenComponent],\r\n})\r\nexport class SplashScreenModule {}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class ConfirmPasswordValidator {\r\n  /**\r\n   * Check matching password with confirm password\r\n   * @param control AbstractControl\r\n   */\r\n  static MatchPassword(control: AbstractControl) {\r\n    const password = control.get('password').value;\r\n\r\n    const confirmPassword = control.get('cPassword').value;\r\n\r\n    if (password !== confirmPassword) {\r\n      control.get('cPassword').setErrors({ ConfirmPassword: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PaginatorComponent } from './components/paginator/paginator.component';\r\nimport { NgPagination } from './components/paginator/ng-pagination/ng-pagination.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SortIconComponent } from './components/sort-icon/sort-icon.component';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\n@NgModule({\r\n  declarations: [PaginatorComponent, NgPagination, SortIconComponent],\r\n  imports: [CommonModule, FormsModule, InlineSVGModule  ],\r\n  exports: [PaginatorComponent, NgPagination, SortIconComponent],\r\n})\r\nexport class CRUDTableModule { }\r\n","// tslint:disable:max-line-length component-class-suffix directive-selector directive-class-suffix component-selector no-host-metadata-property object-literal-key-quotes prefer-const\r\n// fork of https://github.com/ng-bootstrap/ng-bootstrap/blob/master/src/pagination/pagination.ts\r\nimport {\r\n  Component,\r\n  ContentChild,\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  SimpleChanges,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { NgPaginationConfig } from './ng-pagination.config';\r\n\r\nfunction getValueInRange(value: number, max: number, min = 0): number {\r\n  return Math.max(Math.min(value, max), min);\r\n}\r\n\r\nfunction isNumber(value: any): value is number {\r\n  return !isNaN(toInteger(value));\r\n}\r\n\r\nfunction toInteger(value: any): number {\r\n  return parseInt(`${value}`, 10);\r\n}\r\n\r\n/**\r\n * A context for the\r\n * * `NgPaginationFirst`\r\n * * `NgPaginationPrevious`\r\n * * `NgPaginationNext`\r\n * * `NgPaginationLast`\r\n * * `NgPaginationEllipsis`\r\n *\r\n * link templates in case you want to override one.\r\n *\r\n * @since 4.1.0\r\n */\r\nexport interface NgPaginationLinkContext {\r\n  /**\r\n   * The currently selected page number\r\n   */\r\n  currentPage: number;\r\n\r\n  /**\r\n   * If `true`, the current link is disabled\r\n   */\r\n  disabled: boolean;\r\n}\r\n\r\n/**\r\n * A context for the `NgPaginationNumber` link template in case you want to override one.\r\n *\r\n * Extends `NgPaginationLinkContext`.\r\n *\r\n * @since 4.1.0\r\n */\r\nexport interface NgPaginationNumberContext extends NgPaginationLinkContext {\r\n  /**\r\n   * The page number, displayed by the current page link.\r\n   */\r\n  $implicit: number;\r\n}\r\n\r\n/**\r\n * A directive to match the 'ellipsis' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({ selector: 'ng-template[ngPaginationEllipsis]' })\r\nexport class NgPaginationEllipsis {\r\n  constructor(public templateRef: TemplateRef<NgPaginationLinkContext>) { }\r\n}\r\n\r\n/**\r\n * A directive to match the 'first' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({ selector: 'ng-template[ngPaginationFirst]' })\r\nexport class NgPaginationFirst {\r\n  constructor(public templateRef: TemplateRef<NgPaginationLinkContext>) { }\r\n}\r\n\r\n/**\r\n * A directive to match the 'last' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({ selector: 'ng-template[ngPaginationLast]' })\r\nexport class NgPaginationLast {\r\n  constructor(public templateRef: TemplateRef<NgPaginationLinkContext>) { }\r\n}\r\n\r\n/**\r\n * A directive to match the 'next' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({ selector: 'ng-template[ngPaginationNext]' })\r\nexport class NgPaginationNext {\r\n  constructor(public templateRef: TemplateRef<NgPaginationLinkContext>) { }\r\n}\r\n\r\n/**\r\n * A directive to match the page 'number' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({ selector: 'ng-template[ngPaginationNumber]' })\r\nexport class NgPaginationNumber {\r\n  constructor(public templateRef: TemplateRef<NgPaginationNumberContext>) { }\r\n}\r\n\r\n/**\r\n * A directive to match the 'previous' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({ selector: 'ng-template[ngPaginationPrevious]' })\r\nexport class NgPaginationPrevious {\r\n  constructor(public templateRef: TemplateRef<NgPaginationLinkContext>) { }\r\n}\r\n\r\n/**\r\n * A component that displays page numbers and allows to customize them in several ways.\r\n */\r\n@Component({\r\n  selector: 'ng-pagination',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: { 'role': 'navigation' },\r\n  templateUrl: './ng-pagination.component.html',\r\n\r\n})\r\nexport class NgPagination implements OnChanges {\r\n  pageCount = 0;\r\n  pages: number[] = [];\r\n\r\n  @ContentChild(NgPaginationEllipsis, { static: false }) tplEllipsis: NgPaginationEllipsis;\r\n  @ContentChild(NgPaginationFirst, { static: false }) tplFirst: NgPaginationFirst;\r\n  @ContentChild(NgPaginationLast, { static: false }) tplLast: NgPaginationLast;\r\n  @ContentChild(NgPaginationNext, { static: false }) tplNext: NgPaginationNext;\r\n  @ContentChild(NgPaginationNumber, { static: false }) tplNumber: NgPaginationNumber;\r\n  @ContentChild(NgPaginationPrevious, { static: false }) tplPrevious: NgPaginationPrevious;\r\n\r\n  /**\r\n   * If `true`, pagination links will be disabled.\r\n   */\r\n  @Input() disabled: boolean;\r\n\r\n  /**\r\n   * If `true`, the \"First\" and \"Last\" page links are shown.\r\n   */\r\n  @Input() boundaryLinks: boolean;\r\n\r\n  /**\r\n   * If `true`, the \"Next\" and \"Previous\" page links are shown.\r\n   */\r\n  @Input() directionLinks: boolean;\r\n\r\n  /**\r\n   * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\r\n   */\r\n  @Input() ellipses: boolean;\r\n\r\n  /**\r\n   * Whether to rotate pages when `maxSize` > number of pages.\r\n   *\r\n   * The current page always stays in the middle if `true`.\r\n   */\r\n  @Input() rotate: boolean;\r\n\r\n  /**\r\n   *  The number of items in your paginated collection.\r\n   *\r\n   *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\r\n   *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\r\n   *  you'll end up with 5 pages.\r\n   */\r\n  @Input() collectionSize: number;\r\n\r\n  /**\r\n   *  The maximum number of pages to display.\r\n   */\r\n  @Input() maxSize: number;\r\n\r\n  /**\r\n   *  The current page.\r\n   *\r\n   *  Page numbers start with `1`.\r\n   */\r\n  @Input() page = 1;\r\n\r\n  /**\r\n   *  The number of items per page.\r\n   */\r\n  @Input() pageSize: number;\r\n\r\n  /**\r\n   *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\r\n   *\r\n   *  Event payload is the number of the newly selected page.\r\n   *\r\n   *  Page numbers start with `1`.\r\n   */\r\n  @Output() pageChange = new EventEmitter<number>(true);\r\n\r\n  /**\r\n   * The pagination display size.\r\n   *\r\n   * Bootstrap currently supports small and large sizes.\r\n   */\r\n  @Input() size: 'sm' | 'lg';\r\n\r\n  constructor(config: NgPaginationConfig) {\r\n    this.disabled = config.disabled;\r\n    this.boundaryLinks = config.boundaryLinks;\r\n    this.directionLinks = config.directionLinks;\r\n    this.ellipses = config.ellipses;\r\n    this.maxSize = config.maxSize;\r\n    this.pageSize = config.pageSize;\r\n    this.rotate = config.rotate;\r\n    this.size = config.size;\r\n  }\r\n\r\n  hasPrevious(): boolean { return this.page > 1; }\r\n\r\n  hasNext(): boolean { return this.page < this.pageCount; }\r\n\r\n  nextDisabled(): boolean { return !this.hasNext() || this.disabled; }\r\n\r\n  previousDisabled(): boolean { return !this.hasPrevious() || this.disabled; }\r\n\r\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\r\n\r\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\r\n\r\n  /**\r\n   * Appends ellipses and first/last page number to the displayed pages\r\n   */\r\n  private _applyEllipses(start: number, end: number) {\r\n    if (this.ellipses) {\r\n      if (start > 0) {\r\n        // The first page will always be included. If the displayed range\r\n        // starts after the third page, then add ellipsis. But if the range\r\n        // starts on the third page, then add the second page instead of\r\n        // an ellipsis, because the ellipsis would only hide a single page.\r\n        if (start > 2) {\r\n          this.pages.unshift(-1);\r\n        } else if (start === 2) {\r\n          this.pages.unshift(2);\r\n        }\r\n        this.pages.unshift(1);\r\n      }\r\n      if (end < this.pageCount) {\r\n        // The last page will always be included. If the displayed range\r\n        // ends before the third-last page, then add ellipsis. But if the range\r\n        // ends on third-last page, then add the second-last page instead of\r\n        // an ellipsis, because the ellipsis would only hide a single page.\r\n        if (end < (this.pageCount - 2)) {\r\n          this.pages.push(-1);\r\n        } else if (end === (this.pageCount - 2)) {\r\n          this.pages.push(this.pageCount - 1);\r\n        }\r\n        this.pages.push(this.pageCount);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Rotates page numbers based on maxSize items visible.\r\n   * Currently selected page stays in the middle:\r\n   *\r\n   * Ex. for selected page = 6:\r\n   * [5,*6*,7] for maxSize = 3\r\n   * [4,5,*6*,7] for maxSize = 4\r\n   */\r\n  private _applyRotation(): [number, number] {\r\n    let start = 0;\r\n    let end = this.pageCount;\r\n    let leftOffset = Math.floor(this.maxSize / 2);\r\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\r\n\r\n    if (this.page <= leftOffset) {\r\n      // very beginning, no rotation -> [0..maxSize]\r\n      end = this.maxSize;\r\n    } else if (this.pageCount - this.page < leftOffset) {\r\n      // very end, no rotation -> [len-maxSize..len]\r\n      start = this.pageCount - this.maxSize;\r\n    } else {\r\n      // rotate\r\n      start = this.page - leftOffset - 1;\r\n      end = this.page + rightOffset;\r\n    }\r\n\r\n    return [start, end];\r\n  }\r\n\r\n  /**\r\n   * Paginates page numbers based on maxSize items per page.\r\n   */\r\n  private _applyPagination(): [number, number] {\r\n    let page = Math.ceil(this.page / this.maxSize) - 1;\r\n    let start = page * this.maxSize;\r\n    let end = start + this.maxSize;\r\n\r\n    return [start, end];\r\n  }\r\n\r\n  private _setPageInRange(newPageNo) {\r\n    const prevPageNo = this.page;\r\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\r\n\r\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\r\n      this.pageChange.emit(this.page);\r\n    }\r\n  }\r\n\r\n  private _updatePages(newPage: number) {\r\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\r\n\r\n    if (!isNumber(this.pageCount)) {\r\n      this.pageCount = 0;\r\n    }\r\n\r\n    // fill-in model needed to render pages\r\n    this.pages.length = 0;\r\n    for (let i = 1; i <= this.pageCount; i++) {\r\n      this.pages.push(i);\r\n    }\r\n\r\n    // set page within 1..max range\r\n    this._setPageInRange(newPage);\r\n\r\n    // apply maxSize if necessary\r\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\r\n      let start = 0;\r\n      let end = this.pageCount;\r\n\r\n      // either paginating or rotating page numbers\r\n      if (this.rotate) {\r\n        [start, end] = this._applyRotation();\r\n      } else {\r\n        [start, end] = this._applyPagination();\r\n      }\r\n\r\n      this.pages = this.pages.slice(start, end);\r\n\r\n      // adding ellipses\r\n      this._applyEllipses(start, end);\r\n    }\r\n  }\r\n}\r\n","<ng-template #first>\r\n  <i\r\n    class=\"ki ki-bold-double-arrow-back icon-xs\"\r\n    aria-hidden=\"true\"\r\n    i18n=\"@@ng.pagination.first\"\r\n  ></i>\r\n</ng-template>\r\n<ng-template #previous>\r\n  <i\r\n    class=\"ki ki-bold-arrow-back icon-xs\"\r\n    aria-hidden=\"true\"\r\n    i18n=\"@@ng.pagination.previous\"\r\n  ></i>\r\n</ng-template>\r\n<ng-template #next>\r\n  <i\r\n    class=\"ki ki-bold-arrow-next icon-xs\"\r\n    aria-hidden=\"true\"\r\n    i18n=\"@@ng.pagination.next\"\r\n  ></i>\r\n</ng-template>\r\n<ng-template #last>\r\n  <i\r\n    aria-hidden=\"true\"\r\n    i18n=\"@@ng.pagination.last\"\r\n    class=\"ki ki-bold-double-arrow-next icon-xs\"\r\n  ></i>\r\n</ng-template>\r\n<ng-template #ellipsis>...</ng-template>\r\n<ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\r\n  {{ page }}\r\n  <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\r\n</ng-template>\r\n<a\r\n  *ngIf=\"boundaryLinks\"\r\n  [class.disabled]=\"previousDisabled()\"\r\n  aria-label=\"First\"\r\n  i18n-aria-label=\"@@ng.pagination.first-aria\"\r\n  class=\"btn btn-icon btn-sm btn-light btn-hover-primary mr-2 my-1\"\r\n  href\r\n  (click)=\"selectPage(1); $event.preventDefault()\"\r\n  [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\r\n  [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\r\n>\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\r\n    [ngTemplateOutletContext]=\"{\r\n      disabled: previousDisabled(),\r\n      currentPage: page\r\n    }\"\r\n  ></ng-template>\r\n</a>\r\n<a\r\n  *ngIf=\"directionLinks\"\r\n  [class.disabled]=\"previousDisabled()\"\r\n  aria-label=\"Previous\"\r\n  i18n-aria-label=\"@@ng.pagination.previous-aria\"\r\n  class=\"btn btn-icon btn-sm btn-light btn-hover-primary mr-2 my-1\"\r\n  href\r\n  (click)=\"selectPage(page - 1); $event.preventDefault()\"\r\n  [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\r\n  [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\r\n>\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\r\n    [ngTemplateOutletContext]=\"{ disabled: previousDisabled() }\"\r\n  ></ng-template>\r\n</a>\r\n<ng-container *ngFor=\"let pageNumber of pages\">\r\n  <a\r\n    *ngIf=\"isEllipsis(pageNumber)\"\r\n    class=\"btn btn-icon btn-sm border-0 btn-light btn-hover-primary mr-2 my-1\"\r\n    tabindex=\"-1\"\r\n    aria-disabled=\"true\"\r\n    [class.active]=\"pageNumber === page\"\r\n    [class.disabled]=\"isEllipsis(pageNumber) || disabled\"\r\n    [attr.aria-current]=\"pageNumber === page ? 'page' : null\"\r\n  >\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\r\n      [ngTemplateOutletContext]=\"{ disabled: true, currentPage: page }\"\r\n    ></ng-template>\r\n  </a>\r\n  <a\r\n    *ngIf=\"!isEllipsis(pageNumber)\"\r\n    class=\"btn btn-icon btn-sm border-0 btn-light btn-hover-primary mr-2 my-1\"\r\n    (click)=\"selectPage(pageNumber); $event.preventDefault()\"\r\n    [attr.tabindex]=\"disabled ? '-1' : null\"\r\n    [attr.aria-disabled]=\"disabled ? 'true' : null\"\r\n    [class.active]=\"pageNumber === page\"\r\n    [class.disabled]=\"isEllipsis(pageNumber) || disabled\"\r\n    [attr.aria-current]=\"pageNumber === page ? 'page' : null\"\r\n  >\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\r\n      [ngTemplateOutletContext]=\"{\r\n        disabled: disabled,\r\n        $implicit: pageNumber,\r\n        currentPage: page\r\n      }\"\r\n    ></ng-template>\r\n  </a>\r\n</ng-container>\r\n<a\r\n  aria-label=\"Next\"\r\n  i18n-aria-label=\"@@ng.pagination.next-aria\"\r\n  class=\"btn btn-icon btn-sm btn-light btn-hover-primary mr-2 my-1\"\r\n  (click)=\"selectPage(page + 1); $event.preventDefault()\"\r\n  [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\r\n  [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\r\n  *ngIf=\"directionLinks\"\r\n  [class.disabled]=\"nextDisabled()\"\r\n>\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\r\n    [ngTemplateOutletContext]=\"{\r\n      disabled: nextDisabled(),\r\n      currentPage: page\r\n    }\"\r\n  ></ng-template>\r\n</a>\r\n<a\r\n  aria-label=\"Last\"\r\n  i18n-aria-label=\"@@ng.pagination.last-aria\"\r\n  class=\"btn btn-icon btn-sm btn-light btn-hover-primary mr-2 my-1\"\r\n  (click)=\"selectPage(pageCount); $event.preventDefault()\"\r\n  [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\r\n  [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\r\n  *ngIf=\"boundaryLinks\"\r\n  [class.disabled]=\"nextDisabled()\"\r\n>\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\r\n    [ngTemplateOutletContext]=\"{\r\n      disabled: nextDisabled(),\r\n      currentPage: page\r\n    }\"\r\n  ></ng-template>\r\n</a>\r\n","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { TranslationService } from './modules/i18n/translation.service';\r\n// language list\r\nimport { locale as enLang } from './modules/i18n/vocabs/en';\r\nimport { locale as chLang } from './modules/i18n/vocabs/ch';\r\nimport { locale as esLang } from './modules/i18n/vocabs/es';\r\nimport { locale as jpLang } from './modules/i18n/vocabs/jp';\r\nimport { locale as deLang } from './modules/i18n/vocabs/de';\r\nimport { locale as frLang } from './modules/i18n/vocabs/fr';\r\nimport { SplashScreenService } from './_metronic/partials/layout/splash-screen/splash-screen.service';\r\nimport { Router, NavigationEnd, NavigationError } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { TableExtendedService } from './_metronic/shared/crud-table';\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'body[root]',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private translationService: TranslationService,\r\n    private splashScreenService: SplashScreenService,\r\n    private router: Router,\r\n    private tableService: TableExtendedService\r\n  ) {\r\n    // register translations\r\n    this.translationService.loadTranslations(\r\n      enLang,\r\n      chLang,\r\n      esLang,\r\n      jpLang,\r\n      deLang,\r\n      frLang\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    const routerSubscription = this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        // clear filtration paginations and others\r\n        this.tableService.setDefaults();\r\n        // hide splash screen\r\n        this.splashScreenService.hide();\r\n\r\n        // scroll to top on every route change\r\n        window.scrollTo(0, 0);\r\n\r\n        // to display back the body content\r\n        setTimeout(() => {\r\n          document.body.classList.add('page-loaded');\r\n        }, 500);\r\n      }\r\n    });\r\n    this.unsubscribe.push(routerSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n}\r\n","<app-splash-screen></app-splash-screen>\r\n<router-outlet></router-outlet>\r\n","// USA\r\nexport const locale = {\r\n  lang: 'en',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'Select your language',\r\n    },\r\n    MENU: {\r\n      NEW: 'new',\r\n      ACTIONS: 'Actions',\r\n      CREATE_POST: 'Create New Post',\r\n      PAGES: 'Pages',\r\n      FEATURES: 'Features',\r\n      APPS: 'Apps',\r\n      DASHBOARD: 'Dashboard',\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'Or',\r\n        SUBMIT_BUTTON: 'Submit',\r\n        NO_ACCOUNT: 'Don\\'t have an account?',\r\n        SIGNUP_BUTTON: 'Sign Up',\r\n        FORGOT_BUTTON: 'Forgot Password',\r\n        BACK_BUTTON: 'Back',\r\n        PRIVACY: 'Privacy',\r\n        LEGAL: 'Legal',\r\n        CONTACT: 'Contact',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Login Account',\r\n        BUTTON: 'Sign In',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'Username'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Customers',\r\n        CUSTOMERS_LIST: 'Customers list',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","export interface IGroupingState {\r\n  selectedRowIds: Set<number>;\r\n  itemIds: number[];\r\n  checkAreAllRowsSelected(): boolean;\r\n  selectRow(id: number): IGroupingState;\r\n  // tslint:disable-next-line:variable-name\r\n  clearRows(_itemIds: number[]): IGroupingState;\r\n  isRowSelected(id: number): boolean;\r\n  selectAllRows(): IGroupingState;\r\n  getSelectedRows(): number[];\r\n  getSelectedRowsCount(): number;\r\n}\r\n\r\nexport class GroupingState implements IGroupingState {\r\n  selectedRowIds: Set<number> = new Set<number>();\r\n  itemIds = [];\r\n\r\n\r\n  checkAreAllRowsSelected(): boolean {\r\n    if (this.itemIds.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    return this.selectedRowIds.size === this.itemIds.length;\r\n  }\r\n\r\n  selectRow(id: number): GroupingState {\r\n    if (this.selectedRowIds.has(id)) {\r\n      this.selectedRowIds.delete(id);\r\n    } else {\r\n      this.selectedRowIds.add(id);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  clearRows(_itemIds: number[]): GroupingState {\r\n    this.itemIds = _itemIds;\r\n    this.selectedRowIds = new Set<number>();\r\n    return this;\r\n  }\r\n\r\n  isRowSelected(id: number): boolean {\r\n    return this.selectedRowIds.has(id);\r\n  }\r\n\r\n  selectAllRows(): GroupingState {\r\n    const areAllSelected = this.itemIds.length === this.selectedRowIds.size;\r\n    if (areAllSelected) {\r\n      this.selectedRowIds = new Set<number>();\r\n    } else {\r\n      this.selectedRowIds = new Set<number>();\r\n      this.itemIds.forEach(id => this.selectedRowIds.add(id));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  getSelectedRows(): number[] {\r\n    return Array.from(this.selectedRowIds);\r\n  }\r\n\r\n  getSelectedRowsCount(): number {\r\n    return this.selectedRowIds.size;\r\n  }\r\n}\r\n\r\nexport interface IGroupingView  {\r\n  grouping: GroupingState;\r\n  ngOnInit(): void;\r\n}\r\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { ClipboardModule } from 'ngx-clipboard';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthService } from './modules/auth/_services/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n// Highlight JS\r\nimport { HighlightModule, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\r\nimport { SplashScreenModule } from './_metronic/partials/layout/splash-screen/splash-screen.module';\r\nimport { InterceptService } from './_metronic/core/services/intercept.service';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\n\r\nfunction appInitializer(authService: AuthService) {\r\n\treturn () => {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tauthService.getUserByToken().subscribe().add(resolve);\r\n\t\t});\r\n\t};\r\n}\r\n\r\n@NgModule({\r\n\tdeclarations: [AppComponent],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tMatSnackBarModule,\r\n\t\tSplashScreenModule,\r\n\t\tTranslateModule.forRoot(),\r\n\t\tHttpClientModule,\r\n\t\tHighlightModule,\r\n\t\tClipboardModule,\r\n\t\tAppRoutingModule,\r\n\t\tInlineSVGModule.forRoot(),\r\n\t\tNgbModule,\r\n\t],\r\n\tproviders: [\r\n\t\t{\r\n\t\t\tprovide: APP_INITIALIZER,\r\n\t\t\tuseFactory: appInitializer,\r\n\t\t\tmulti: true,\r\n\t\t\tdeps: [AuthService],\r\n\t\t},\r\n\t\tInterceptService,\r\n\t\t{\r\n\t\t\tprovide: HTTP_INTERCEPTORS,\r\n\t\t\tuseClass: InterceptService,\r\n\t\t\tmulti: true,\r\n\t\t},\r\n\t\t{ provide: LocationStrategy, useClass: HashLocationStrategy },\r\n\t\t{\r\n\t\t\tprovide: HIGHLIGHT_OPTIONS,\r\n\t\t\tuseValue: {\r\n\t\t\t\tcoreLibraryLoader: () => import('highlight.js/lib/core'),\r\n\t\t\t\tlanguages: {\r\n\t\t\t\t\txml: () => import('highlight.js/lib/languages/xml'),\r\n\t\t\t\t\ttypescript: () => import('highlight.js/lib/languages/typescript'),\r\n\t\t\t\t\tscss: () => import('highlight.js/lib/languages/scss'),\r\n\t\t\t\t\tjson: () => import('highlight.js/lib/languages/json'),\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n\tbootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","// tslint:disable:variable-name\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, finalize, tap } from 'rxjs/operators';\r\nimport { PaginatorState } from '../models/paginator.model';\r\nimport { ITableState, TableResponseModel } from '../models/table.model';\r\nimport { BaseModel } from '../models/base.model';\r\nimport { SortState } from '../models/sort.model';\r\nimport { GroupingState } from '../models/grouping.model';\r\nimport { environment } from '../../../../../environments/environment';\r\n\r\nconst DEFAULT_STATE: ITableState = {\r\n  filter: {},\r\n  paginator: new PaginatorState(),\r\n  sorting: new SortState(),\r\n  searchTerm: '',\r\n  grouping: new GroupingState(),\r\n  entityId: undefined\r\n};\r\n\r\nexport abstract class TableService<T> {\r\n  // Private fields\r\n  private _items$ = new BehaviorSubject<T[]>([]);\r\n  private _isLoading$ = new BehaviorSubject<boolean>(false);\r\n  private _isFirstLoading$ = new BehaviorSubject<boolean>(true);\r\n  private _tableState$ = new BehaviorSubject<ITableState>(DEFAULT_STATE);\r\n  private _errorMessage = new BehaviorSubject<string>('');\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n  // Getters\r\n  get items$() {\r\n    return this._items$.asObservable();\r\n  }\r\n  get isLoading$() {\r\n    return this._isLoading$.asObservable();\r\n  }\r\n  get isFirstLoading$() {\r\n    return this._isFirstLoading$.asObservable();\r\n  }\r\n  get errorMessage$() {\r\n    return this._errorMessage.asObservable();\r\n  }\r\n  get subscriptions() {\r\n    return this._subscriptions;\r\n  }\r\n  // State getters\r\n  get paginator() {\r\n    return this._tableState$.value.paginator;\r\n  }\r\n  get filter() {\r\n    return this._tableState$.value.filter;\r\n  }\r\n  get sorting() {\r\n    return this._tableState$.value.sorting;\r\n  }\r\n  get searchTerm() {\r\n    return this._tableState$.value.searchTerm;\r\n  }\r\n  get grouping() {\r\n    return this._tableState$.value.grouping;\r\n  }\r\n\r\n  protected http: HttpClient;\r\n  // API URL has to be overrided\r\n  API_URL = `${environment.apiUrl}/endpoint`;\r\n  constructor(http: HttpClient) {\r\n    this.http = http;\r\n  }\r\n\r\n  // CREATE\r\n  // server should return the object with ID\r\n  create(item: BaseModel): Observable<BaseModel> {\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    return this.http.post<BaseModel>(this.API_URL, item).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('CREATE ITEM', err);\r\n        return of({ id: undefined });\r\n      }),\r\n      finalize(() => this._isLoading$.next(false))\r\n    );\r\n  }\r\n\r\n  // READ (Returning filtered list of entities)\r\n  find(tableState: ITableState): Observable<TableResponseModel<T>> {\r\n    const url = this.API_URL + '/find';\r\n    this._errorMessage.next('');\r\n    return this.http.post<TableResponseModel<T>>(url, tableState).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('FIND ITEMS', err);\r\n        return of({ items: [], total: 0 });\r\n      })\r\n    );\r\n  }\r\n\r\n  getItemById(id: number): Observable<BaseModel> {\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    const url = `${this.API_URL}/${id}`;\r\n    return this.http.get<BaseModel>(url).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('GET ITEM BY IT', id, err);\r\n        return of({ id: undefined });\r\n      }),\r\n      finalize(() => this._isLoading$.next(false))\r\n    );\r\n  }\r\n\r\n  // UPDATE\r\n  update(item: BaseModel): Observable<any> {\r\n    const url = `${this.API_URL}/${item.id}`;\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    return this.http.put(url, item).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('UPDATE ITEM', item, err);\r\n        return of(item);\r\n      }),\r\n      finalize(() => this._isLoading$.next(false))\r\n    );\r\n  }\r\n\r\n  // UPDATE Status\r\n  updateStatusForItems(ids: number[], status: number): Observable<any> {\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    const body = { ids, status };\r\n    const url = this.API_URL + '/updateStatus';\r\n    return this.http.put(url, body).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('UPDATE STATUS FOR SELECTED ITEMS', ids, status, err);\r\n        return of([]);\r\n      }),\r\n      finalize(() => this._isLoading$.next(false))\r\n    );\r\n  }\r\n\r\n  // DELETE\r\n  delete(id: any): Observable<any> {\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    const url = `${this.API_URL}/${id}`;\r\n    return this.http.delete(url).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('DELETE ITEM', id, err);\r\n        return of({});\r\n      }),\r\n      finalize(() => this._isLoading$.next(false))\r\n    );\r\n  }\r\n\r\n  // delete list of items\r\n  deleteItems(ids: number[] = []): Observable<any> {\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    const url = this.API_URL + '/deleteItems';\r\n    const body = { ids };\r\n    return this.http.put(url, body).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('DELETE SELECTED ITEMS', ids, err);\r\n        return of([]);\r\n      }),\r\n      finalize(() => this._isLoading$.next(false))\r\n    );\r\n  }\r\n\r\n  public fetch() {\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    const request = this.find(this._tableState$.value)\r\n      .pipe(\r\n        tap((res: TableResponseModel<T>) => {\r\n          this._items$.next(res.items);\r\n          this.patchStateWithoutFetch({\r\n            paginator: this._tableState$.value.paginator.recalculatePaginator(\r\n              res.total\r\n            ),\r\n          });\r\n        }),\r\n        catchError((err) => {\r\n          this._errorMessage.next(err);\r\n          return of({\r\n            items: [],\r\n            total: 0\r\n          });\r\n        }),\r\n        finalize(() => {\r\n          this._isLoading$.next(false);\r\n          const itemIds = this._items$.value.map((el: T) => {\r\n            const item = (el as unknown) as BaseModel;\r\n            return item.id;\r\n          });\r\n          this.patchStateWithoutFetch({\r\n            grouping: this._tableState$.value.grouping.clearRows(itemIds),\r\n          });\r\n        })\r\n      )\r\n      .subscribe();\r\n    this._subscriptions.push(request);\r\n  }\r\n\r\n  public setDefaults() {\r\n    this.patchStateWithoutFetch({ filter: {} });\r\n    this.patchStateWithoutFetch({ sorting: new SortState() });\r\n    this.patchStateWithoutFetch({ grouping: new GroupingState() });\r\n    this.patchStateWithoutFetch({ searchTerm: '' });\r\n    this.patchStateWithoutFetch({\r\n      paginator: new PaginatorState()\r\n    });\r\n    this._isFirstLoading$.next(true);\r\n    this._isLoading$.next(true);\r\n    this._tableState$.next(DEFAULT_STATE);\r\n    this._errorMessage.next('');\r\n  }\r\n\r\n  // Base Methods\r\n  public patchState(patch: Partial<ITableState>) {\r\n    this.patchStateWithoutFetch(patch);\r\n    this.fetch();\r\n  }\r\n\r\n  public patchStateWithoutFetch(patch: Partial<ITableState>) {\r\n    const newState = Object.assign(this._tableState$.value, patch);\r\n    this._tableState$.next(newState);\r\n  }\r\n}\r\n","// Localization is based on '@ngx-translate/core';\r\n// Please be familiar with official documentations first => https://github.com/ngx-translate/core\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nexport interface Locale {\r\n  lang: string;\r\n  data: any;\r\n}\r\n\r\nconst LOCALIZATION_LOCAL_STORAGE_KEY = 'language';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TranslationService {\r\n  // Private properties\r\n  private langIds: any = [];\r\n\r\n  constructor(private translate: TranslateService) {\r\n    // add new langIds to the list\r\n    this.translate.addLangs(['en']);\r\n\r\n    // this language will be used as a fallback when a translation isn't found in the current language\r\n    this.translate.setDefaultLang('en');\r\n  }\r\n\r\n  loadTranslations(...args: Locale[]): void {\r\n    const locales = [...args];\r\n\r\n    locales.forEach((locale) => {\r\n      // use setTranslation() with the third argument set to true\r\n      // to append translations instead of replacing them\r\n      this.translate.setTranslation(locale.lang, locale.data, true);\r\n\r\n      this.langIds.push(locale.lang);\r\n    });\r\n\r\n    // add new languages to the list\r\n    this.translate.addLangs(this.langIds);\r\n  }\r\n\r\n  setLanguage(lang) {\r\n    if (lang) {\r\n      this.translate.use(this.translate.getDefaultLang());\r\n      this.translate.use(lang);\r\n      localStorage.setItem(LOCALIZATION_LOCAL_STORAGE_KEY, lang);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns selected language\r\n   */\r\n  getSelectedLanguage(): any {\r\n    return (\r\n      localStorage.getItem(LOCALIZATION_LOCAL_STORAGE_KEY) ||\r\n      this.translate.getDefaultLang()\r\n    );\r\n  }\r\n}\r\n","export const PageSizes = [3, 5, 10, 15, 50, 100];\r\n\r\nexport interface IPaginatorState {\r\n  page: number;\r\n  pageSize: number;\r\n  total: number;\r\n  recalculatePaginator(total: number): IPaginatorState;\r\n}\r\n\r\nexport class PaginatorState implements IPaginatorState {\r\n  page = 1;\r\n  pageSize = PageSizes[2];\r\n  total = 0;\r\n  pageSizes: number[] = [];\r\n\r\n  recalculatePaginator(total: number): PaginatorState {\r\n    this.total = total;\r\n    return this;\r\n  }\r\n}\r\n\r\nexport interface IPaginatorView {\r\n  paginator: PaginatorState;\r\n  ngOnInit(): void;\r\n  paginate(paginator: PaginatorState): void;\r\n}\r\n","export type SortDirection = 'asc' | 'desc' | '';\r\n\r\nexport interface ISortState {\r\n  column: string;\r\n  direction: SortDirection;\r\n}\r\n\r\nexport class SortState implements ISortState {\r\n  column = 'id'; // Id by default\r\n  direction: SortDirection = 'asc'; // asc by default;\r\n}\r\n\r\nexport interface ISortView {\r\n  sorting: SortState;\r\n  ngOnInit(): void;\r\n  sort(column: string): void;\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { PageSizes, PaginatorState } from '../../models/paginator.model';\r\n\r\n@Component({\r\n  selector: 'app-paginator',\r\n  templateUrl: './paginator.component.html',\r\n  styleUrls: ['./paginator.component.scss']\r\n})\r\nexport class PaginatorComponent implements OnInit {\r\n  @Input() paginator: PaginatorState;\r\n  @Input() isLoading;\r\n  @Output() paginate: EventEmitter<PaginatorState> = new EventEmitter();\r\n  pageSizes: number[] = PageSizes;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  pageChange(num: number) {\r\n    this.paginator.page = num;\r\n    this.paginate.emit(this.paginator);\r\n  }\r\n\r\n  sizeChange() {\r\n    this.paginator.pageSize = +this.paginator.pageSize;\r\n    this.paginator.page = 1;\r\n    this.paginate.emit(this.paginator);\r\n  }\r\n}\r\n","<!-- start: Paginator -->\r\n<div class=\"d-flex flex-wrap py-2 mr-3\">\r\n  <ng-pagination\r\n    [collectionSize]=\"paginator.total\"\r\n    [(page)]=\"paginator.page\"\r\n    [maxSize]=\"4\"\r\n    [rotate]=\"true\"\r\n    [boundaryLinks]=\"true\"\r\n    [pageSize]=\"paginator.pageSize\"\r\n    (pageChange)=\"pageChange($event)\"\r\n  ></ng-pagination>\r\n</div>\r\n<div class=\"d-flex align-items-center py-3\">\r\n  <!-- begin: loading -->\r\n  <div class=\"d-flex align-items-center\" *ngIf=\"isLoading\">\r\n    <div class=\"mr-2 text-muted\">Loading...</div>\r\n    <div class=\"spinner spinner-primary mr-10\"></div>\r\n  </div>\r\n  <!-- end: loading -->\r\n\r\n  <!-- begin: pageSize -->\r\n  <select\r\n    class=\"form-control form-control-sm font-weight-bold mr-4 border-0 bg-light false\"\r\n    style=\"width: 75px\"\r\n    [(ngModel)]=\"paginator.pageSize\"\r\n    (change)=\"sizeChange()\"\r\n  >\r\n    <option class=\"btn\" *ngFor=\"let ps of pageSizes\">\r\n      {{ ps }}\r\n    </option></select\r\n  ><span class=\"react-bootstrap-table-pagin ation-total\"\r\n    >&nbsp;Showing rows {{ paginator.page }} to&nbsp;{{\r\n      paginator.pageSize\r\n    }}\r\n    of&nbsp;{{ paginator.total }}</span\r\n  >\r\n  <!-- end: pageSize -->\r\n</div>\r\n<!-- end: Paginator -->\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { UserModel } from '../../_models/user.model';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { AuthModel } from '../../_models/auth.model';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class AuthHTTPService {\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\t// public methods\r\n\tlogin(username: string, password: string, role = 'admin'): Observable<any> {\r\n\t\treturn this.http.post<AuthModel>(`${environment.apiUrl}auth/login`, {\r\n\t\t\tusername,\r\n\t\t\tpassword,\r\n\t\t\trole,\r\n\t\t});\r\n\t}\r\n\r\n\t// CREATE =>  POST: add a new user to the server\r\n\tcreateUser(user: UserModel): Observable<UserModel> {\r\n\t\treturn this.http.post<UserModel>(`${environment.apiUrl}user/create`, user);\r\n\t}\r\n\r\n\t// Your server should check email => If email exists send link to the user and return true | If email doesn't exist return false\r\n\tforgotPassword(email: string): Observable<boolean> {\r\n\t\treturn this.http.post<boolean>(\r\n\t\t\t`${environment.apiUrl}auth/forgot-password`,\r\n\t\t\t{\r\n\t\t\t\temail,\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tgetUserByToken(): Observable<UserModel> {\r\n\t\treturn this.http.get<UserModel>(`${environment.apiUrl}authenticated-user`);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n\tRouter,\r\n\tCanActivate,\r\n\tActivatedRouteSnapshot,\r\n\tRouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n\tconstructor(private authService: AuthService) {}\r\n\r\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\t\tconst currentUser = this.authService.currentUserValue;\r\n\t\tif (currentUser) {\r\n\t\t\t// logged in so return true\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// not logged in so redirect to login page with the return url\r\n\t\tthis.authService.logout();\r\n\t\treturn false;\r\n\t}\r\n}\r\n","import { AuthModel } from './auth.model';\r\n\r\nexport class UserModel extends AuthModel {\r\n\tid: number;\r\n\tname: string;\r\n\temail: string;\r\n\tpassword: string;\r\n\t// tslint:disable-next-line: variable-name\r\n\trole_id: number;\r\n\tis_super_admin: boolean;\r\n\tallowed_access: any;\r\n\toccupation: string;\r\n\tcompanyName: string;\r\n\tphone: string;\r\n\tpic: string;\r\n\t// email settings\r\n\temailSettings: {\r\n\t\temailNotification: boolean;\r\n\t\tsendCopyToPersonalEmail: boolean;\r\n\t\tactivityRelatesEmail: {\r\n\t\t\tyouHaveNewNotifications: boolean;\r\n\t\t\tyouAreSentADirectMessage: boolean;\r\n\t\t\tsomeoneAddsYouAsAsAConnection: boolean;\r\n\t\t\tuponNewOrder: boolean;\r\n\t\t\tnewMembershipApproval: boolean;\r\n\t\t\tmemberRegistration: boolean;\r\n\t\t};\r\n\t\tupdatesFromKeenthemes: {\r\n\t\t\tnewsAboutKeenthemesProductsAndFeatureUpdates: boolean;\r\n\t\t\ttipsOnGettingMoreOutOfKeen: boolean;\r\n\t\t\tthingsYouMissedSindeYouLastLoggedIntoKeen: boolean;\r\n\t\t\tnewsAboutMetronicOnPartnerProductsAndOtherServices: boolean;\r\n\t\t\ttipsOnMetronicBusinessProducts: boolean;\r\n\t\t};\r\n\t};\r\n\r\n\tsetUser(user: any) {\r\n\t\tthis.id = user.id;\r\n\t\tthis.name = user.name || '';\r\n\t\tthis.email = user.email || '';\r\n\t\tthis.pic = user.pic || './assets/media/users/default.jpg';\r\n\t\tthis.role_id = user.role_id || '';\r\n\t\tthis.occupation = user.occupation || '';\r\n\t\tthis.companyName = user.companyName || '';\r\n\t\tthis.phone = user.phone || '';\r\n\t}\r\n}\r\n","// Germany\r\nexport const locale = {\r\n  lang: 'de',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'Wähle deine Sprache',\r\n    },\r\n    MENU: {\r\n      NEW: 'Neu',\r\n      ACTIONS: 'Aktionen',\r\n      CREATE_POST: 'Erstellen Sie einen neuen Beitrag',\r\n      PAGES: 'Pages',\r\n      FEATURES: 'Eigenschaften',\r\n      APPS: 'Apps',\r\n      DASHBOARD: 'Instrumententafel'\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'Oder',\r\n        SUBMIT_BUTTON: 'einreichen',\r\n        NO_ACCOUNT: 'Hast du kein Konto?',\r\n        SIGNUP_BUTTON: 'Anmelden',\r\n        FORGOT_BUTTON: 'Passwort vergessen',\r\n        BACK_BUTTON: 'Zurück',\r\n        PRIVACY: 'Privatsphäre',\r\n        LEGAL: 'Legal',\r\n        CONTACT: 'Kontakt',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Create Account',\r\n        BUTTON: 'Sign In',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'Nutzername'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Customers',\r\n        CUSTOMERS_LIST: 'Customers list',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","// models\r\nexport * from './_models/user.model';\r\n// services\r\nexport * from './_services/auth.service';\r\n// validators\r\nexport * from './registration/confirm-password.validator';\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './modules/auth/_services/auth.guard';\r\n\r\nexport const routes: Routes = [\r\n\t{\r\n\t\tpath: 'auth',\r\n\t\tloadChildren: () =>\r\n\t\t\timport('./modules/auth/auth.module').then((m) => m.AuthModule),\r\n\t},\r\n\t{\r\n\t\tpath: 'error',\r\n\t\tloadChildren: () =>\r\n\t\t\timport('./modules/errors/errors.module').then((m) => m.ErrorsModule),\r\n\t},\r\n\t{\r\n\t\tpath: '',\r\n\t\tcanActivate: [AuthGuard],\r\n\t\tloadChildren: () =>\r\n\t\t\timport('./pages/layout.module').then((m) => m.LayoutModule),\r\n\t},\r\n\t{ path: '**', redirectTo: 'error/404' },\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit, Input, OnChanges, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { SortDirection } from '../../models/sort.model';\r\n\r\n@Component({\r\n  selector: 'app-sort-icon',\r\n  templateUrl: './sort-icon.component.html',\r\n  styleUrls: ['./sort-icon.component.scss']\r\n})\r\nexport class SortIconComponent implements OnInit, OnChanges {\r\n  @Input() column: string;\r\n  @Input() activeColumn: string;\r\n  @Input() activeDirection: SortDirection;\r\n  @Output() sort: EventEmitter<string> = new EventEmitter<string>();\r\n  isActive = false;\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnChanges(): void {\r\n    const parent = this.el.nativeElement.parentElement;\r\n    if (!parent) {\r\n      return;\r\n    }\r\n\r\n    // Load css classes\r\n    parent.classList.add('sortable');\r\n    parent.classList.remove('sortable-active');\r\n    if (this.column === this.activeColumn) {\r\n      parent.classList.add('sortable-active');\r\n    }\r\n\r\n    // load icons\r\n    this.isActive = this.column === this.activeColumn;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const parent = this.el.nativeElement.parentElement as Element;\r\n    if (!parent) {\r\n      return;\r\n    }\r\n\r\n    parent.addEventListener('click', () => {\r\n      this.sort.emit(this.column);\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"isActive\">\r\n  <ng-container *ngIf=\"activeDirection === 'asc'\">\r\n    <span [inlineSVG]=\"'./assets/media/svg/icons/Navigation/Up-2.svg'\"\r\n      cacheSVG=\"true\"\r\n      class=\"svg-icon svg-icon-sm svg-icon-primary ml-1\">\r\n    </span>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"activeDirection === 'desc'\">\r\n    <span [inlineSVG]=\"'./assets/media/svg/icons/Navigation/Down-2.svg'\"\r\n      cacheSVG=\"true\"\r\n      class=\"svg-icon svg-icon-sm svg-icon-primary ml-1\">\r\n  </span>\r\n  </ng-container>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"!isActive\">\r\n  <span [inlineSVG]=\"'./assets/media/svg/icons/Shopping/Sort1.svg'\"\r\n    cacheSVG=\"true\"\r\n    class=\"svg-icon svg-icon-sm svg-icon-primary ml-1 svg-icon-sort\">\r\n  </span>\r\n</ng-container>\r\n","// Spain\r\nexport const locale = {\r\n  lang: 'es',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'Elige tu idioma',\r\n    },\r\n    MENU: {\r\n      NEW: 'nuevo',\r\n      ACTIONS: 'Comportamiento',\r\n      CREATE_POST: 'Crear nueva publicación',\r\n      PAGES: 'Pages',\r\n      FEATURES: 'Caracteristicas',\r\n      APPS: 'Aplicaciones',\r\n      DASHBOARD: 'Tablero'\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'O',\r\n        SUBMIT_BUTTON: 'Enviar',\r\n        NO_ACCOUNT: 'No tienes una cuenta?',\r\n        SIGNUP_BUTTON: 'Regístrate',\r\n        FORGOT_BUTTON: 'Se te olvidó tu contraseña',\r\n        BACK_BUTTON: 'Espalda',\r\n        PRIVACY: 'Intimidad',\r\n        LEGAL: 'Legal',\r\n        CONTACT: 'Contacto',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Crear una cuenta',\r\n        BUTTON: 'Registrarse',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Contraseña olvidada?',\r\n        DESC: 'Ingrese su correo electrónico para restablecer su contraseña',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'Usuario'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Customers',\r\n        CUSTOMERS_LIST: 'Customers list',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}
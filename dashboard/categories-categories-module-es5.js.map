{"version":3,"sources":["webpack:///src/app/pages/categories/categories.component.ts","webpack:///src/app/pages/categories/categories.component.html","webpack:///src/app/pages/categories/categories.module.ts","webpack:///src/app/pages/categories/add/add.component.ts","webpack:///src/app/pages/categories/add/add.component.html","webpack:///src/app/services/categories.service.ts"],"names":["CategoriesComponent","categoriesService","commonService","cdr","dialog","loaded","displayedColumns","categories","getCategories","subscribe","response","renderCategories","detectChanges","dataSource","paginator","dialogRef","open","width","disableClose","afterClosed","res","addCategory","category","push","openSnackBar","message","error","errors","name","Category","data","updateCategory","id","index","title","confirm","deleteCategory","splice","selector","templateUrl","styleUrls","CategoriesModule","forChild","path","component","declarations","imports","entryComponents","AddComponent","mode","close","isEdit","onSubmit","CategoriesService","httpClient","get","apiUrl","post","patch","providedIn"],"mappings":"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","file":"categories-categories-module-es5.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CategoriesService } from 'src/app/services/categories.service';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { ConfirmationDialogComponent } from '../_sharedComponents/confirmation-dialog/confirmation-dialog.component';\r\nimport { AddComponent } from './add/add.component';\r\n\r\n@Component({\r\n\tselector: 'app-categories',\r\n\ttemplateUrl: './categories.component.html',\r\n\tstyleUrls: ['./categories.component.scss'],\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n\t@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n\tdataSource: any;\r\n\tloaded = false;\r\n\tdisplayedColumns = ['name', 'actions'];\r\n\tcategories: any[] = [];\r\n\tconstructor(\r\n\t\tprivate categoriesService: CategoriesService,\r\n\t\tprivate commonService: CommonService,\r\n\t\tprivate cdr: ChangeDetectorRef,\r\n\t\tpublic dialog: MatDialog\r\n\t) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.categoriesService.getCategories().subscribe((response: any) => {\r\n\t\t\tthis.categories = response.categories;\r\n\t\t\tthis.renderCategories();\r\n\t\t\tthis.loaded = true;\r\n\t\t\tthis.cdr.detectChanges();\r\n\t\t});\r\n\t}\r\n\r\n\trenderCategories() {\r\n\t\tthis.dataSource = new MatTableDataSource<any>(this.categories);\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t}\r\n\r\n\taddCategory() {\r\n\t\tconst dialogRef = this.dialog.open(AddComponent, {\r\n\t\t\twidth: '440px',\r\n\t\t\tdisableClose: true,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((res) => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.categoriesService.addCategory(res.category).subscribe(\r\n\t\t\t\t(response: any) => {\r\n\t\t\t\t\tthis.categories.push(response.category);\r\n\t\t\t\t\tthis.commonService.openSnackBar(response.message);\r\n\t\t\t\t\tthis.renderCategories();\r\n\t\t\t\t},\r\n\t\t\t\t({ error }) => {\r\n\t\t\t\t\tthis.commonService.openSnackBar(error.errors.name[0], 4000);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\teditCategory(Category) {\r\n\t\tconst dialogRef = this.dialog.open(AddComponent, {\r\n\t\t\tdata: { category: Category },\r\n\t\t\twidth: '440px',\r\n\t\t\tdisableClose: true,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((res) => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.categoriesService.updateCategory(res.category).subscribe(\r\n\t\t\t\t(response: any) => {\r\n\t\t\t\t\tCategory = res.category;\r\n\t\t\t\t\tthis.commonService.openSnackBar(response.message);\r\n\t\t\t\t},\r\n\t\t\t\t({ error }) => {\r\n\t\t\t\t\tthis.commonService.openSnackBar(error.errors.name[0], 4000);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteCategory(id, index) {\r\n\t\tconst dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n\t\t\tdata: { title: 'Delete category', message: 'Are you sure?' },\r\n\t\t\twidth: '440px',\r\n\t\t\tdisableClose: true,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((res) => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (res.confirm) {\r\n\t\t\t\tthis.categoriesService.deleteCategory(id).subscribe(\r\n\t\t\t\t\t(response: any) => {\r\n\t\t\t\t\t\tthis.categories.splice(index, 1);\r\n\t\t\t\t\t\tthis.renderCategories();\r\n\t\t\t\t\t\tthis.commonService.openSnackBar(response.message);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t({ error }) => {\r\n\t\t\t\t\t\tthis.commonService.openSnackBar(error.message, 4000);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","<div class=\"card card-custom\">\r\n\t<div class=\"card-header\">\r\n\t\t<div class=\"card-title\">\r\n\t\t\t<h3>Categories</h3>\r\n\t\t</div>\r\n\t\t<div class=\"card-toolbar\">\r\n\t\t\t<button class=\"btn btn-primary\" (click)=\"addCategory()\">\r\n\t\t\t\tAdd Category\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"card-body\">\r\n\t\t<div class=\"mat-table-wrapper\">\r\n\t\t\t<mat-table #table [dataSource]=\"dataSource\">\r\n\t\t\t\t<!--- Note that these columns can be defined in any order.\r\n\t\t\t\tThe actual rendered columns are set as a property on the row definition\" -->\r\n\t\t\t\t<!-- Name Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"name\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{ element.name }} </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<!-- Weight Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"actions\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let category; let index = index\"\r\n\t\t\t\t\t\t><button\r\n\t\t\t\t\t\t\tmat-icon-button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Edit user\"\r\n\t\t\t\t\t\t\t(click)=\"editCategory(category)\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<mat-icon>create</mat-icon></button\r\n\t\t\t\t\t\t>&nbsp;\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tmat-icon-button\r\n\t\t\t\t\t\t\tcolor=\"warn\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Delete user\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t(click)=\"deleteCategory(category.id, index)\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<!-- Symbol Column -->\r\n\t\t\t\t<mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n\t\t\t\t<mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n\t\t\t</mat-table>\r\n\r\n\t\t\t<!-- Message for empty data  -->\r\n\t\t\t<div class=\"mat-table-message\" *ngIf=\"loaded && categories.length == 0\">\r\n\t\t\t\tNo records found\r\n\t\t\t</div>\r\n\t\t\t<div class=\"mat-table-message\" *ngIf=\"!loaded\">Please wait....</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- start: BOTTOM -->\r\n\t\t<div class=\"mat-table-bottom\">\r\n\t\t\t<!-- MATERIAL SPINNER | Url: 'https://material.angular.io/components/progress-spinner/overview' -->\r\n\t\t\t<mat-spinner [diameter]=\"20\" *ngIf=\"!loaded\"></mat-spinner>\r\n\t\t\t<!-- MATERIAL PAGINATOR | Binded to dasources -->\r\n\t\t\t<!-- See off.documentations 'https://material.angular.io/components/paginator/overview' -->\r\n\t\t\t<mat-paginator\r\n\t\t\t\t[pageSize]=\"10\"\r\n\t\t\t\t[pageSizeOptions]=\"[5, 10, 20]\"\r\n\t\t\t\t[showFirstLastButtons]=\"true\"\r\n\t\t\t></mat-paginator>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CategoriesComponent } from './categories.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { GeneralModule } from 'src/app/_metronic/partials/content/general/general.module';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ConfirmationDialogComponent } from '../_sharedComponents/confirmation-dialog/confirmation-dialog.component';\r\nimport { AddComponent } from './add/add.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [AddComponent, CategoriesComponent],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tGeneralModule,\r\n\t\tMatButtonModule,\r\n\t\tMatTableModule,\r\n\t\tMatPaginatorModule,\r\n\t\tMatIconModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tFormsModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatDialogModule,\r\n\t\tRouterModule.forChild([\r\n\t\t\t{\r\n\t\t\t\tpath: '',\r\n\t\t\t\tcomponent: CategoriesComponent,\r\n\t\t\t},\r\n\t\t]),\r\n\t],\r\n\tentryComponents: [AddComponent, ConfirmationDialogComponent],\r\n})\r\nexport class CategoriesModule {}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n\tselector: 'app-add',\r\n\ttemplateUrl: './add.component.html',\r\n\tstyleUrls: ['./add.component.scss'],\r\n})\r\nexport class AddComponent implements OnInit {\r\n\ttitle: string;\r\n\tmode: string;\r\n\tcategory = { name: '', id: '' };\r\n\r\n\tconstructor(\r\n\t\tpublic dialogRef: MatDialogRef<AddComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tif (this.data && this.data.category) {\r\n\t\t\tthis.category = this.data.category;\r\n\t\t\tthis.title = 'Update category';\r\n\t\t\tthis.mode = 'Update';\r\n\t\t} else {\r\n\t\t\tthis.title = 'Add category';\r\n\t\t\tthis.mode = 'Add';\r\n\t\t}\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tthis.dialogRef.close({ category: this.category, isEdit: false });\r\n\t}\r\n}\r\n","<form (ngSubmit)=\"onSubmit()\" #f=\"ngForm\">\r\n\t<div class=\"card card-custom\">\r\n\t\t<div class=\"card-header\">\r\n\t\t\t<div class=\"card-title\">{{ title }}</div>\r\n\t\t</div>\r\n\t\t<div class=\"card-body\">\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t[(ngModel)]=\"category.name\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"card-footer\">\r\n\t\t\t<button type=\"button\" mat-raised-button mat-dialog-close cdkFocusInitial>\r\n\t\t\t\tCancel</button\r\n\t\t\t>&nbsp;\r\n\t\t\t<button\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tmat-raised-button\r\n\t\t\t\tclass=\"mr-2\"\r\n\t\t\t\t[disabled]=\"f.invalid\"\r\n\t\t\t>\r\n\t\t\t\t{{ mode }}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n</form>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class CategoriesService {\r\n\tconstructor(private httpClient: HttpClient) {}\r\n\r\n\tgetCategories() {\r\n\t\treturn this.httpClient.get(`${environment.apiUrl}categories`);\r\n\t}\r\n\r\n\taddCategory(category) {\r\n\t\treturn this.httpClient.post(`${environment.apiUrl}categories`, category);\r\n\t}\r\n\r\n\tupdateCategory(category) {\r\n\t\treturn this.httpClient.patch(\r\n\t\t\t`${environment.apiUrl}categories/` + category.id,\r\n\t\t\tcategory\r\n\t\t);\r\n\t}\r\n\r\n\tdeleteCategory(id) {\r\n\t\treturn this.httpClient.delete(`${environment.apiUrl}categories/` + id);\r\n\t}\r\n}\r\n"]}
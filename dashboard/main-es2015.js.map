{"version":3,"sources":["./src/app/modules/auth/_services/auth.service.ts","./src/app/modules/i18n/vocabs/fr.ts","./src/app/modules/i18n/vocabs/ch.ts","./src/app/_metronic/partials/layout/splash-screen/splash-screen.component.ts","./src/app/_metronic/partials/layout/splash-screen/splash-screen.component.html","./src/app/_metronic/shared/crud-table/components/paginator/ng-pagination/ng-pagination.config.ts","./src/environments/environment.ts","./src/app/_metronic/shared/crud-table/index.ts","./src/app/_metronic/shared/crud-table/services/table.extended.service.ts","./src/app/_metronic/core/services/intercept.service.ts","./src/app/modules/auth/_models/auth.model.ts","./src/app/modules/auth/_services/auth-http/index.ts","./src/app/_metronic/partials/layout/splash-screen/splash-screen.service.ts","./src/app/modules/i18n/vocabs/jp.ts","./src/app/_metronic/partials/layout/splash-screen/splash-screen.module.ts","./src/app/modules/auth/registration/confirm-password.validator.ts","./src/app/_metronic/shared/crud-table/crud-table.module.ts","./src/app/_metronic/shared/crud-table/components/paginator/ng-pagination/ng-pagination.component.ts","./src/app/_metronic/shared/crud-table/components/paginator/ng-pagination/ng-pagination.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/i18n/vocabs/en.ts","./src/app/_metronic/shared/crud-table/models/grouping.model.ts","./src/app/app.module.ts","./src/app/_metronic/shared/crud-table/services/table.service.ts","./src/app/modules/i18n/translation.service.ts","./src/app/_metronic/shared/crud-table/models/paginator.model.ts","./src/app/_metronic/shared/crud-table/models/sort.model.ts","./src/app/_metronic/shared/crud-table/components/paginator/paginator.component.ts","./src/app/_metronic/shared/crud-table/components/paginator/paginator.component.html","./src/app/modules/auth/_services/auth-http/auth-http.service.ts","./src/app/modules/auth/_services/auth.guard.ts","./src/app/modules/auth/_models/user.model.ts","./src/app/modules/i18n/vocabs/de.ts","./src/app/modules/auth/index.ts","./src/app/app-routing.module.ts","./src/app/_metronic/shared/crud-table/components/sort-icon/sort-icon.component.ts","./src/app/_metronic/shared/crud-table/components/sort-icon/sort-icon.component.html","./src/app/modules/i18n/vocabs/es.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Observable, BehaviorSubject, of, Subscription } from 'rxjs';\r\nimport { map, catchError, switchMap, finalize } from 'rxjs/operators';\r\nimport { UserModel } from '../_models/user.model';\r\nimport { AuthModel } from '../_models/auth.model';\r\nimport { AuthHTTPService } from './auth-http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class AuthService implements OnDestroy {\r\n\t// private fields\r\n\tprivate unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\tprivate authLocalStorageToken = `${environment.appVersion}-${environment.USERDATA_KEY}`;\r\n\r\n\t// public fields\r\n\tcurrentUser$: Observable<UserModel>;\r\n\tisLoading$: Observable<boolean>;\r\n\tcurrentUserSubject: BehaviorSubject<UserModel>;\r\n\tisLoadingSubject: BehaviorSubject<boolean>;\r\n\r\n\tget currentUserValue(): UserModel {\r\n\t\treturn this.currentUserSubject.value;\r\n\t}\r\n\r\n\tset currentUserValue(user: UserModel) {\r\n\t\tthis.currentUserSubject.next(user);\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tprivate authHttpService: AuthHTTPService,\r\n\t\tprivate router: Router\r\n\t) {\r\n\t\tthis.isLoadingSubject = new BehaviorSubject<boolean>(false);\r\n\t\tthis.currentUserSubject = new BehaviorSubject<UserModel>(undefined);\r\n\t\tthis.currentUser$ = this.currentUserSubject.asObservable();\r\n\t\tthis.isLoading$ = this.isLoadingSubject.asObservable();\r\n\t\tconst subscr = this.getUserByToken().subscribe();\r\n\t\tthis.unsubscribe.push(subscr);\r\n\t}\r\n\r\n\t// public methods\r\n\tlogin(username: string, password: string): Observable<UserModel> {\r\n\t\tthis.isLoadingSubject.next(true);\r\n\t\treturn this.authHttpService.login(username, password).pipe(\r\n\t\t\tmap((auth: AuthModel) => {\r\n\t\t\t\tconst result = this.setAuthFromLocalStorage(auth);\r\n\t\t\t\treturn result;\r\n\t\t\t}),\r\n\t\t\tswitchMap(() => this.getUserByToken()),\r\n\t\t\tcatchError((err) => {\r\n\t\t\t\tconsole.error('err', err);\r\n\t\t\t\treturn of(undefined);\r\n\t\t\t}),\r\n\t\t\tfinalize(() => this.isLoadingSubject.next(false))\r\n\t\t);\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tlocalStorage.removeItem(this.authLocalStorageToken);\r\n\t\tthis.router.navigate(['/auth/login'], {\r\n\t\t\tqueryParams: {},\r\n\t\t});\r\n\t}\r\n\r\n\tgetUserByToken(): Observable<UserModel> {\r\n\t\tconst auth = this.getAuthFromLocalStorage();\r\n\t\tif (!auth || !auth.accessToken) {\r\n\t\t\treturn of(undefined);\r\n\t\t}\r\n\r\n\t\tthis.isLoadingSubject.next(true);\r\n\t\treturn this.authHttpService.getUserByToken().pipe(\r\n\t\t\tmap((user: UserModel) => {\r\n\t\t\t\tif (user) {\r\n\t\t\t\t\tthis.currentUserSubject = new BehaviorSubject<UserModel>(user);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.logout();\r\n\t\t\t\t}\r\n\t\t\t\treturn user;\r\n\t\t\t}),\r\n\t\t\tfinalize(() => this.isLoadingSubject.next(false))\r\n\t\t);\r\n\t}\r\n\r\n\t// need create new user then login\r\n\tregistration(user: UserModel): Observable<any> {\r\n\t\tthis.isLoadingSubject.next(true);\r\n\t\treturn this.authHttpService.createUser(user).pipe(\r\n\t\t\tmap(() => {\r\n\t\t\t\tthis.isLoadingSubject.next(false);\r\n\t\t\t}),\r\n\t\t\tswitchMap(() => this.login(user.email, user.password)),\r\n\t\t\tcatchError((err) => {\r\n\t\t\t\tconsole.error('err', err);\r\n\t\t\t\treturn of(undefined);\r\n\t\t\t}),\r\n\t\t\tfinalize(() => this.isLoadingSubject.next(false))\r\n\t\t);\r\n\t}\r\n\r\n\tforgotPassword(email: string): Observable<boolean> {\r\n\t\tthis.isLoadingSubject.next(true);\r\n\t\treturn this.authHttpService\r\n\t\t\t.forgotPassword(email)\r\n\t\t\t.pipe(finalize(() => this.isLoadingSubject.next(false)));\r\n\t}\r\n\r\n\t// private methods\r\n\tprivate setAuthFromLocalStorage(auth: AuthModel): boolean {\r\n\t\t// store auth accessToken/refreshToken/epiresIn in local storage to keep user logged in between page refreshes\r\n\t\tif (auth && auth.accessToken) {\r\n\t\t\tlocalStorage.setItem(this.authLocalStorageToken, JSON.stringify(auth));\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate getAuthFromLocalStorage(): AuthModel {\r\n\t\ttry {\r\n\t\t\tconst authData = JSON.parse(\r\n\t\t\t\tlocalStorage.getItem(this.authLocalStorageToken)\r\n\t\t\t);\r\n\t\t\treturn authData;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n\t}\r\n}\r\n","// France\r\nexport const locale = {\r\n  lang: 'fr',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'choisissez votre langue',\r\n    },\r\n    MENU: {\r\n      NEW: 'Nouveau',\r\n      ACTIONS: 'Actes',\r\n      CREATE_POST: 'Créer un nouveau Post',\r\n      PAGES: 'Pages',\r\n      FEATURES: 'Fonctionnalités',\r\n      APPS: 'Applications',\r\n      DASHBOARD: 'Tableau de Bord',\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'Ou',\r\n        SUBMIT_BUTTON: 'Soumettre',\r\n        NO_ACCOUNT: 'Ne pas avoir de compte?',\r\n        SIGNUP_BUTTON: 'Registre',\r\n        FORGOT_BUTTON: 'Mot de passe oublié',\r\n        BACK_BUTTON: 'Back',\r\n        PRIVACY: 'Privacy',\r\n        LEGAL: 'Legal',\r\n        CONTACT: 'Contact',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Créer un compte',\r\n        BUTTON: 'Sign In',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Mot de passe',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'Nom d\\'utilisateur'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} n\\'est pas valide',\r\n        REQUIRED: '{{name}} est requis',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Nombre d\\'enregistrements sélectionnés: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'éCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Les clients',\r\n        CUSTOMERS_LIST: 'Liste des clients',\r\n        NEW_CUSTOMER: 'Nouveau client',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Suppression du client',\r\n          DESCRIPTION: 'Êtes-vous sûr de supprimer définitivement ce client?',\r\n          WAIT_DESCRIPTION: 'Le client est en train de supprimer ...',\r\n          MESSAGE: 'Le client a été supprimé'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Supprimer les clients',\r\n          DESCRIPTION: 'Êtes-vous sûr de supprimer définitivement les clients sélectionnés?',\r\n          WAIT_DESCRIPTION: 'Les clients suppriment ...',\r\n          MESSAGE: 'Les clients sélectionnés ont été supprimés'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Le statut a été mis à jour pour les clients sélectionnés',\r\n          MESSAGE: 'Le statut des clients sélectionnés a été mis à jour avec succès'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Le client a été mis à jour',\r\n          ADD_MESSAGE: 'Le client a été créé'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","// China\r\nexport const locale = {\r\n  lang: 'ch',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: '选择你的语言',\r\n    },\r\n    MENU: {\r\n      NEW: '新',\r\n      ACTIONS: '行动',\r\n      CREATE_POST: '创建新帖子',\r\n      PAGES: 'Pages',\r\n      FEATURES: '特征',\r\n      APPS: '应用',\r\n      DASHBOARD: '仪表板',\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: '要么',\r\n        SUBMIT_BUTTON: '提交',\r\n        NO_ACCOUNT: '没有账号？',\r\n        SIGNUP_BUTTON: '注册',\r\n        FORGOT_BUTTON: '忘记密码',\r\n        BACK_BUTTON: '背部',\r\n        PRIVACY: '隐私',\r\n        LEGAL: '法律',\r\n        CONTACT: '联系',\r\n      },\r\n      LOGIN: {\r\n        TITLE: '创建帐号',\r\n        BUTTON: '签到',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: '用戶名'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: '顾客',\r\n        CUSTOMERS_LIST: '客户名单',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { SplashScreenService } from './splash-screen.service';\r\n\r\n@Component({\r\n\tselector: 'app-splash-screen',\r\n\ttemplateUrl: './splash-screen.component.html',\r\n\tstyleUrls: ['./splash-screen.component.scss'],\r\n})\r\nexport class SplashScreenComponent implements OnInit {\r\n\t@ViewChild('splashScreen', { static: true }) splashScreen: ElementRef;\r\n\r\n\tconstructor(\r\n\t\tprivate el: ElementRef,\r\n\t\tprivate splashScreenService: SplashScreenService\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.splashScreenService.init(this.splashScreen);\r\n\t}\r\n}\r\n","<!-- splash screen -->\r\n<div #splashScreen id=\"splash-screen\">\r\n  <img src=\"./assets/media/logos/logo-dark.png\" alt=\"Logo\" />\r\n  <svg class=\"splash-spinner\" viewBox=\"0 0 50 50\">\r\n    <circle\r\n      class=\"path\"\r\n      cx=\"25\"\r\n      cy=\"25\"\r\n      r=\"20\"\r\n      fill=\"none\"\r\n      stroke-width=\"5\"\r\n    ></circle>\r\n  </svg>\r\n</div>\r\n","// Fork of https://github.com/ng-bootstrap/ng-bootstrap/blob/master/src/pagination/pagination-config.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { PageSizes } from '../../../models/paginator.model';\r\n\r\n/**\r\n * A configuration service for the [`NgPagination`](#/components/paginator/api#NgPagination) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the paginations used in the application.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class NgPaginationConfig {\r\n  disabled = false;\r\n  boundaryLinks = false;\r\n  directionLinks = true;\r\n  ellipses = true;\r\n  maxSize = 0;\r\n  pageSize = PageSizes[2];\r\n  rotate = false;\r\n  size: 'sm' | 'lg';\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n\tproduction: false,\r\n\tappVersion: 'v717demo1',\r\n\tUSERDATA_KEY: 'authf649fc9a5f55',\r\n\tapiUrl: 'http://localhost/capri-traders/api/public/api/',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","// Models\r\nexport * from './models/table.model';\r\nexport * from './models/sort.model';\r\nexport * from './models/paginator.model';\r\nexport * from './models/grouping.model';\r\nexport * from './models/search.model';\r\nexport * from './models/filter.model';\r\nexport { BaseModel } from './models/base.model';\r\n// Directives\r\n// Services\r\nexport * from './services/table.service';\r\nexport * from './services/table.extended.service';\r\n// Module\r\nexport { CRUDTableModule } from './crud-table.module';\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TableService } from './table.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TableExtendedService extends TableService<any> {\r\n  constructor(@Inject(HttpClient) http) {\r\n    super(http);\r\n  }\r\n}\r\n","import {\r\n\tHttpEvent,\r\n\tHttpHandler,\r\n\tHttpInterceptor,\r\n\tHttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/modules/auth';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class InterceptService implements HttpInterceptor {\r\n\tprivate authLocalStorageToken = `${environment.appVersion}-${environment.USERDATA_KEY}`;\r\n\tconstructor(private injector: Injector) {}\r\n\tintercept(\r\n\t\trequest: HttpRequest<any>,\r\n\t\tnext: HttpHandler\r\n\t): Observable<HttpEvent<any>> {\r\n\t\tconst auth = JSON.parse(localStorage.getItem(this.authLocalStorageToken));\r\n\r\n\t\tif (auth && auth.accessToken) {\r\n\t\t\trequest = request.clone({\r\n\t\t\t\tsetHeaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${auth.accessToken}`,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn next.handle(request).pipe(\r\n\t\t\ttap(\r\n\t\t\t\t(event) => {\r\n\t\t\t\t\treturn event;\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\t// http response status code\r\n\t\t\t\t\t// console.log('----response----');\r\n\t\t\t\t\t// console.error('status code:');\r\n\t\t\t\t\tif (error.status === 401) {\r\n\t\t\t\t\t\tconst authService = this.injector.get(AuthService);\r\n\t\t\t\t\t\tauthService.logout();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(error.status);\r\n\t\t\t\t\t\tconsole.error(error.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n","export class AuthModel {\r\n\taccessToken: string;\r\n\r\n\tsetAuth(auth: any) {\r\n\t\tthis.accessToken = auth.accessToken;\r\n\t}\r\n}\r\n","// #real-start#\r\nexport { AuthHTTPService } from './auth-http.service'; // You have to uncomment this, when your real back-end is done\r\n// #real-end#\r\n","import { ElementRef, Injectable } from '@angular/core';\r\nimport { animate, AnimationBuilder, style } from '@angular/animations';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SplashScreenService {\r\n  // Private properties\r\n  private el: ElementRef;\r\n  private stopped: boolean;\r\n\r\n  /**\r\n   * Service constructor\r\n   *\r\n   * @param animationBuilder: AnimationBuilder\r\n   */\r\n  constructor(private animationBuilder: AnimationBuilder) {}\r\n\r\n  /**\r\n   * Init\r\n   *\r\n   * @param element: ElementRef\r\n   */\r\n  init(element: ElementRef) {\r\n    this.el = element;\r\n  }\r\n\r\n  /**\r\n   * Hide\r\n   */\r\n  hide() {\r\n    if (this.stopped || !this.el) {\r\n      return;\r\n    }\r\n\r\n    const player = this.animationBuilder\r\n      .build([style({ opacity: '1' }), animate(800, style({ opacity: '0' }))])\r\n      .create(this.el.nativeElement);\r\n\r\n    player.onDone(() => {\r\n      if (typeof this.el.nativeElement.remove === 'function') {\r\n        this.el.nativeElement.remove();\r\n      } else {\r\n        this.el.nativeElement.style.display = 'none !important';\r\n      }\r\n      this.stopped = true;\r\n    });\r\n\r\n    setTimeout(() => player.play(), 100);\r\n  }\r\n}\r\n","// Japan\r\nexport const locale = {\r\n  lang: 'jp',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'あなたが使う言語を選んでください',\r\n    },\r\n    MENU: {\r\n      NEW: '新しい',\r\n      ACTIONS: '行動',\r\n      CREATE_POST: '新しい投稿を作成',\r\n      PAGES: 'Pages',\r\n      FEATURES: '特徴',\r\n      APPS: 'アプリ',\r\n      DASHBOARD: 'ダッシュボード',\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'または',\r\n        SUBMIT_BUTTON: '提出する',\r\n        NO_ACCOUNT: 'アカウントを持っていない？',\r\n        SIGNUP_BUTTON: 'サインアップ',\r\n        FORGOT_BUTTON: 'パスワードをお忘れですか',\r\n        BACK_BUTTON: 'バック',\r\n        PRIVACY: 'プライバシー',\r\n        LEGAL: '法的',\r\n        CONTACT: '接触',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Create Account',\r\n        BUTTON: 'Sign In',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'ユーザー名'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Customers',\r\n        CUSTOMERS_LIST: 'Customers list',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SplashScreenComponent } from './splash-screen.component';\r\n\r\n@NgModule({\r\n  declarations: [SplashScreenComponent],\r\n  imports: [CommonModule],\r\n  exports: [SplashScreenComponent],\r\n})\r\nexport class SplashScreenModule {}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class ConfirmPasswordValidator {\r\n  /**\r\n   * Check matching password with confirm password\r\n   * @param control AbstractControl\r\n   */\r\n  static MatchPassword(control: AbstractControl) {\r\n    const password = control.get('password').value;\r\n\r\n    const confirmPassword = control.get('cPassword').value;\r\n\r\n    if (password !== confirmPassword) {\r\n      control.get('cPassword').setErrors({ ConfirmPassword: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PaginatorComponent } from './components/paginator/paginator.component';\r\nimport { NgPagination } from './components/paginator/ng-pagination/ng-pagination.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SortIconComponent } from './components/sort-icon/sort-icon.component';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\n@NgModule({\r\n  declarations: [PaginatorComponent, NgPagination, SortIconComponent],\r\n  imports: [CommonModule, FormsModule, InlineSVGModule  ],\r\n  exports: [PaginatorComponent, NgPagination, SortIconComponent],\r\n})\r\nexport class CRUDTableModule { }\r\n","// tslint:disable:max-line-length component-class-suffix directive-selector directive-class-suffix component-selector no-host-metadata-property object-literal-key-quotes prefer-const\r\n// fork of https://github.com/ng-bootstrap/ng-bootstrap/blob/master/src/pagination/pagination.ts\r\nimport {\r\n  Component,\r\n  ContentChild,\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  SimpleChanges,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { NgPaginationConfig } from './ng-pagination.config';\r\n\r\nfunction getValueInRange(value: number, max: number, min = 0): number {\r\n  return Math.max(Math.min(value, max), min);\r\n}\r\n\r\nfunction isNumber(value: any): value is number {\r\n  return !isNaN(toInteger(value));\r\n}\r\n\r\nfunction toInteger(value: any): number {\r\n  return parseInt(`${value}`, 10);\r\n}\r\n\r\n/**\r\n * A context for the\r\n * * `NgPaginationFirst`\r\n * * `NgPaginationPrevious`\r\n * * `NgPaginationNext`\r\n * * `NgPaginationLast`\r\n * * `NgPaginationEllipsis`\r\n *\r\n * link templates in case you want to override one.\r\n *\r\n * @since 4.1.0\r\n */\r\nexport interface NgPaginationLinkContext {\r\n  /**\r\n   * The currently selected page number\r\n   */\r\n  currentPage: number;\r\n\r\n  /**\r\n   * If `true`, the current link is disabled\r\n   */\r\n  disabled: boolean;\r\n}\r\n\r\n/**\r\n * A context for the `NgPaginationNumber` link template in case you want to override one.\r\n *\r\n * Extends `NgPaginationLinkContext`.\r\n *\r\n * @since 4.1.0\r\n */\r\nexport interface NgPaginationNumberContext extends NgPaginationLinkContext {\r\n  /**\r\n   * The page number, displayed by the current page link.\r\n   */\r\n  $implicit: number;\r\n}\r\n\r\n/**\r\n * A directive to match the 'ellipsis' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({ selector: 'ng-template[ngPaginationEllipsis]' })\r\nexport class NgPaginationEllipsis {\r\n  constructor(public templateRef: TemplateRef<NgPaginationLinkContext>) { }\r\n}\r\n\r\n/**\r\n * A directive to match the 'first' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({ selector: 'ng-template[ngPaginationFirst]' })\r\nexport class NgPaginationFirst {\r\n  constructor(public templateRef: TemplateRef<NgPaginationLinkContext>) { }\r\n}\r\n\r\n/**\r\n * A directive to match the 'last' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({ selector: 'ng-template[ngPaginationLast]' })\r\nexport class NgPaginationLast {\r\n  constructor(public templateRef: TemplateRef<NgPaginationLinkContext>) { }\r\n}\r\n\r\n/**\r\n * A directive to match the 'next' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({ selector: 'ng-template[ngPaginationNext]' })\r\nexport class NgPaginationNext {\r\n  constructor(public templateRef: TemplateRef<NgPaginationLinkContext>) { }\r\n}\r\n\r\n/**\r\n * A directive to match the page 'number' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({ selector: 'ng-template[ngPaginationNumber]' })\r\nexport class NgPaginationNumber {\r\n  constructor(public templateRef: TemplateRef<NgPaginationNumberContext>) { }\r\n}\r\n\r\n/**\r\n * A directive to match the 'previous' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({ selector: 'ng-template[ngPaginationPrevious]' })\r\nexport class NgPaginationPrevious {\r\n  constructor(public templateRef: TemplateRef<NgPaginationLinkContext>) { }\r\n}\r\n\r\n/**\r\n * A component that displays page numbers and allows to customize them in several ways.\r\n */\r\n@Component({\r\n  selector: 'ng-pagination',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: { 'role': 'navigation' },\r\n  templateUrl: './ng-pagination.component.html',\r\n\r\n})\r\nexport class NgPagination implements OnChanges {\r\n  pageCount = 0;\r\n  pages: number[] = [];\r\n\r\n  @ContentChild(NgPaginationEllipsis, { static: false }) tplEllipsis: NgPaginationEllipsis;\r\n  @ContentChild(NgPaginationFirst, { static: false }) tplFirst: NgPaginationFirst;\r\n  @ContentChild(NgPaginationLast, { static: false }) tplLast: NgPaginationLast;\r\n  @ContentChild(NgPaginationNext, { static: false }) tplNext: NgPaginationNext;\r\n  @ContentChild(NgPaginationNumber, { static: false }) tplNumber: NgPaginationNumber;\r\n  @ContentChild(NgPaginationPrevious, { static: false }) tplPrevious: NgPaginationPrevious;\r\n\r\n  /**\r\n   * If `true`, pagination links will be disabled.\r\n   */\r\n  @Input() disabled: boolean;\r\n\r\n  /**\r\n   * If `true`, the \"First\" and \"Last\" page links are shown.\r\n   */\r\n  @Input() boundaryLinks: boolean;\r\n\r\n  /**\r\n   * If `true`, the \"Next\" and \"Previous\" page links are shown.\r\n   */\r\n  @Input() directionLinks: boolean;\r\n\r\n  /**\r\n   * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\r\n   */\r\n  @Input() ellipses: boolean;\r\n\r\n  /**\r\n   * Whether to rotate pages when `maxSize` > number of pages.\r\n   *\r\n   * The current page always stays in the middle if `true`.\r\n   */\r\n  @Input() rotate: boolean;\r\n\r\n  /**\r\n   *  The number of items in your paginated collection.\r\n   *\r\n   *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\r\n   *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\r\n   *  you'll end up with 5 pages.\r\n   */\r\n  @Input() collectionSize: number;\r\n\r\n  /**\r\n   *  The maximum number of pages to display.\r\n   */\r\n  @Input() maxSize: number;\r\n\r\n  /**\r\n   *  The current page.\r\n   *\r\n   *  Page numbers start with `1`.\r\n   */\r\n  @Input() page = 1;\r\n\r\n  /**\r\n   *  The number of items per page.\r\n   */\r\n  @Input() pageSize: number;\r\n\r\n  /**\r\n   *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\r\n   *\r\n   *  Event payload is the number of the newly selected page.\r\n   *\r\n   *  Page numbers start with `1`.\r\n   */\r\n  @Output() pageChange = new EventEmitter<number>(true);\r\n\r\n  /**\r\n   * The pagination display size.\r\n   *\r\n   * Bootstrap currently supports small and large sizes.\r\n   */\r\n  @Input() size: 'sm' | 'lg';\r\n\r\n  constructor(config: NgPaginationConfig) {\r\n    this.disabled = config.disabled;\r\n    this.boundaryLinks = config.boundaryLinks;\r\n    this.directionLinks = config.directionLinks;\r\n    this.ellipses = config.ellipses;\r\n    this.maxSize = config.maxSize;\r\n    this.pageSize = config.pageSize;\r\n    this.rotate = config.rotate;\r\n    this.size = config.size;\r\n  }\r\n\r\n  hasPrevious(): boolean { return this.page > 1; }\r\n\r\n  hasNext(): boolean { return this.page < this.pageCount; }\r\n\r\n  nextDisabled(): boolean { return !this.hasNext() || this.disabled; }\r\n\r\n  previousDisabled(): boolean { return !this.hasPrevious() || this.disabled; }\r\n\r\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\r\n\r\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\r\n\r\n  /**\r\n   * Appends ellipses and first/last page number to the displayed pages\r\n   */\r\n  private _applyEllipses(start: number, end: number) {\r\n    if (this.ellipses) {\r\n      if (start > 0) {\r\n        // The first page will always be included. If the displayed range\r\n        // starts after the third page, then add ellipsis. But if the range\r\n        // starts on the third page, then add the second page instead of\r\n        // an ellipsis, because the ellipsis would only hide a single page.\r\n        if (start > 2) {\r\n          this.pages.unshift(-1);\r\n        } else if (start === 2) {\r\n          this.pages.unshift(2);\r\n        }\r\n        this.pages.unshift(1);\r\n      }\r\n      if (end < this.pageCount) {\r\n        // The last page will always be included. If the displayed range\r\n        // ends before the third-last page, then add ellipsis. But if the range\r\n        // ends on third-last page, then add the second-last page instead of\r\n        // an ellipsis, because the ellipsis would only hide a single page.\r\n        if (end < (this.pageCount - 2)) {\r\n          this.pages.push(-1);\r\n        } else if (end === (this.pageCount - 2)) {\r\n          this.pages.push(this.pageCount - 1);\r\n        }\r\n        this.pages.push(this.pageCount);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Rotates page numbers based on maxSize items visible.\r\n   * Currently selected page stays in the middle:\r\n   *\r\n   * Ex. for selected page = 6:\r\n   * [5,*6*,7] for maxSize = 3\r\n   * [4,5,*6*,7] for maxSize = 4\r\n   */\r\n  private _applyRotation(): [number, number] {\r\n    let start = 0;\r\n    let end = this.pageCount;\r\n    let leftOffset = Math.floor(this.maxSize / 2);\r\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\r\n\r\n    if (this.page <= leftOffset) {\r\n      // very beginning, no rotation -> [0..maxSize]\r\n      end = this.maxSize;\r\n    } else if (this.pageCount - this.page < leftOffset) {\r\n      // very end, no rotation -> [len-maxSize..len]\r\n      start = this.pageCount - this.maxSize;\r\n    } else {\r\n      // rotate\r\n      start = this.page - leftOffset - 1;\r\n      end = this.page + rightOffset;\r\n    }\r\n\r\n    return [start, end];\r\n  }\r\n\r\n  /**\r\n   * Paginates page numbers based on maxSize items per page.\r\n   */\r\n  private _applyPagination(): [number, number] {\r\n    let page = Math.ceil(this.page / this.maxSize) - 1;\r\n    let start = page * this.maxSize;\r\n    let end = start + this.maxSize;\r\n\r\n    return [start, end];\r\n  }\r\n\r\n  private _setPageInRange(newPageNo) {\r\n    const prevPageNo = this.page;\r\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\r\n\r\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\r\n      this.pageChange.emit(this.page);\r\n    }\r\n  }\r\n\r\n  private _updatePages(newPage: number) {\r\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\r\n\r\n    if (!isNumber(this.pageCount)) {\r\n      this.pageCount = 0;\r\n    }\r\n\r\n    // fill-in model needed to render pages\r\n    this.pages.length = 0;\r\n    for (let i = 1; i <= this.pageCount; i++) {\r\n      this.pages.push(i);\r\n    }\r\n\r\n    // set page within 1..max range\r\n    this._setPageInRange(newPage);\r\n\r\n    // apply maxSize if necessary\r\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\r\n      let start = 0;\r\n      let end = this.pageCount;\r\n\r\n      // either paginating or rotating page numbers\r\n      if (this.rotate) {\r\n        [start, end] = this._applyRotation();\r\n      } else {\r\n        [start, end] = this._applyPagination();\r\n      }\r\n\r\n      this.pages = this.pages.slice(start, end);\r\n\r\n      // adding ellipses\r\n      this._applyEllipses(start, end);\r\n    }\r\n  }\r\n}\r\n","<ng-template #first>\r\n  <i\r\n    class=\"ki ki-bold-double-arrow-back icon-xs\"\r\n    aria-hidden=\"true\"\r\n    i18n=\"@@ng.pagination.first\"\r\n  ></i>\r\n</ng-template>\r\n<ng-template #previous>\r\n  <i\r\n    class=\"ki ki-bold-arrow-back icon-xs\"\r\n    aria-hidden=\"true\"\r\n    i18n=\"@@ng.pagination.previous\"\r\n  ></i>\r\n</ng-template>\r\n<ng-template #next>\r\n  <i\r\n    class=\"ki ki-bold-arrow-next icon-xs\"\r\n    aria-hidden=\"true\"\r\n    i18n=\"@@ng.pagination.next\"\r\n  ></i>\r\n</ng-template>\r\n<ng-template #last>\r\n  <i\r\n    aria-hidden=\"true\"\r\n    i18n=\"@@ng.pagination.last\"\r\n    class=\"ki ki-bold-double-arrow-next icon-xs\"\r\n  ></i>\r\n</ng-template>\r\n<ng-template #ellipsis>...</ng-template>\r\n<ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\r\n  {{ page }}\r\n  <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\r\n</ng-template>\r\n<a\r\n  *ngIf=\"boundaryLinks\"\r\n  [class.disabled]=\"previousDisabled()\"\r\n  aria-label=\"First\"\r\n  i18n-aria-label=\"@@ng.pagination.first-aria\"\r\n  class=\"btn btn-icon btn-sm btn-light btn-hover-primary mr-2 my-1\"\r\n  href\r\n  (click)=\"selectPage(1); $event.preventDefault()\"\r\n  [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\r\n  [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\r\n>\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\r\n    [ngTemplateOutletContext]=\"{\r\n      disabled: previousDisabled(),\r\n      currentPage: page\r\n    }\"\r\n  ></ng-template>\r\n</a>\r\n<a\r\n  *ngIf=\"directionLinks\"\r\n  [class.disabled]=\"previousDisabled()\"\r\n  aria-label=\"Previous\"\r\n  i18n-aria-label=\"@@ng.pagination.previous-aria\"\r\n  class=\"btn btn-icon btn-sm btn-light btn-hover-primary mr-2 my-1\"\r\n  href\r\n  (click)=\"selectPage(page - 1); $event.preventDefault()\"\r\n  [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\r\n  [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\r\n>\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\r\n    [ngTemplateOutletContext]=\"{ disabled: previousDisabled() }\"\r\n  ></ng-template>\r\n</a>\r\n<ng-container *ngFor=\"let pageNumber of pages\">\r\n  <a\r\n    *ngIf=\"isEllipsis(pageNumber)\"\r\n    class=\"btn btn-icon btn-sm border-0 btn-light btn-hover-primary mr-2 my-1\"\r\n    tabindex=\"-1\"\r\n    aria-disabled=\"true\"\r\n    [class.active]=\"pageNumber === page\"\r\n    [class.disabled]=\"isEllipsis(pageNumber) || disabled\"\r\n    [attr.aria-current]=\"pageNumber === page ? 'page' : null\"\r\n  >\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\r\n      [ngTemplateOutletContext]=\"{ disabled: true, currentPage: page }\"\r\n    ></ng-template>\r\n  </a>\r\n  <a\r\n    *ngIf=\"!isEllipsis(pageNumber)\"\r\n    class=\"btn btn-icon btn-sm border-0 btn-light btn-hover-primary mr-2 my-1\"\r\n    (click)=\"selectPage(pageNumber); $event.preventDefault()\"\r\n    [attr.tabindex]=\"disabled ? '-1' : null\"\r\n    [attr.aria-disabled]=\"disabled ? 'true' : null\"\r\n    [class.active]=\"pageNumber === page\"\r\n    [class.disabled]=\"isEllipsis(pageNumber) || disabled\"\r\n    [attr.aria-current]=\"pageNumber === page ? 'page' : null\"\r\n  >\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\r\n      [ngTemplateOutletContext]=\"{\r\n        disabled: disabled,\r\n        $implicit: pageNumber,\r\n        currentPage: page\r\n      }\"\r\n    ></ng-template>\r\n  </a>\r\n</ng-container>\r\n<a\r\n  aria-label=\"Next\"\r\n  i18n-aria-label=\"@@ng.pagination.next-aria\"\r\n  class=\"btn btn-icon btn-sm btn-light btn-hover-primary mr-2 my-1\"\r\n  (click)=\"selectPage(page + 1); $event.preventDefault()\"\r\n  [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\r\n  [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\r\n  *ngIf=\"directionLinks\"\r\n  [class.disabled]=\"nextDisabled()\"\r\n>\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\r\n    [ngTemplateOutletContext]=\"{\r\n      disabled: nextDisabled(),\r\n      currentPage: page\r\n    }\"\r\n  ></ng-template>\r\n</a>\r\n<a\r\n  aria-label=\"Last\"\r\n  i18n-aria-label=\"@@ng.pagination.last-aria\"\r\n  class=\"btn btn-icon btn-sm btn-light btn-hover-primary mr-2 my-1\"\r\n  (click)=\"selectPage(pageCount); $event.preventDefault()\"\r\n  [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\r\n  [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\r\n  *ngIf=\"boundaryLinks\"\r\n  [class.disabled]=\"nextDisabled()\"\r\n>\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\r\n    [ngTemplateOutletContext]=\"{\r\n      disabled: nextDisabled(),\r\n      currentPage: page\r\n    }\"\r\n  ></ng-template>\r\n</a>\r\n","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { TranslationService } from './modules/i18n/translation.service';\r\n// language list\r\nimport { locale as enLang } from './modules/i18n/vocabs/en';\r\nimport { locale as chLang } from './modules/i18n/vocabs/ch';\r\nimport { locale as esLang } from './modules/i18n/vocabs/es';\r\nimport { locale as jpLang } from './modules/i18n/vocabs/jp';\r\nimport { locale as deLang } from './modules/i18n/vocabs/de';\r\nimport { locale as frLang } from './modules/i18n/vocabs/fr';\r\nimport { SplashScreenService } from './_metronic/partials/layout/splash-screen/splash-screen.service';\r\nimport { Router, NavigationEnd, NavigationError } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { TableExtendedService } from './_metronic/shared/crud-table';\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'body[root]',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private translationService: TranslationService,\r\n    private splashScreenService: SplashScreenService,\r\n    private router: Router,\r\n    private tableService: TableExtendedService\r\n  ) {\r\n    // register translations\r\n    this.translationService.loadTranslations(\r\n      enLang,\r\n      chLang,\r\n      esLang,\r\n      jpLang,\r\n      deLang,\r\n      frLang\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    const routerSubscription = this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        // clear filtration paginations and others\r\n        this.tableService.setDefaults();\r\n        // hide splash screen\r\n        this.splashScreenService.hide();\r\n\r\n        // scroll to top on every route change\r\n        window.scrollTo(0, 0);\r\n\r\n        // to display back the body content\r\n        setTimeout(() => {\r\n          document.body.classList.add('page-loaded');\r\n        }, 500);\r\n      }\r\n    });\r\n    this.unsubscribe.push(routerSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n}\r\n","<app-splash-screen></app-splash-screen>\r\n<router-outlet></router-outlet>\r\n","// USA\r\nexport const locale = {\r\n  lang: 'en',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'Select your language',\r\n    },\r\n    MENU: {\r\n      NEW: 'new',\r\n      ACTIONS: 'Actions',\r\n      CREATE_POST: 'Create New Post',\r\n      PAGES: 'Pages',\r\n      FEATURES: 'Features',\r\n      APPS: 'Apps',\r\n      DASHBOARD: 'Dashboard',\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'Or',\r\n        SUBMIT_BUTTON: 'Submit',\r\n        NO_ACCOUNT: 'Don\\'t have an account?',\r\n        SIGNUP_BUTTON: 'Sign Up',\r\n        FORGOT_BUTTON: 'Forgot Password',\r\n        BACK_BUTTON: 'Back',\r\n        PRIVACY: 'Privacy',\r\n        LEGAL: 'Legal',\r\n        CONTACT: 'Contact',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Login Account',\r\n        BUTTON: 'Sign In',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'Username'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Customers',\r\n        CUSTOMERS_LIST: 'Customers list',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","export interface IGroupingState {\r\n  selectedRowIds: Set<number>;\r\n  itemIds: number[];\r\n  checkAreAllRowsSelected(): boolean;\r\n  selectRow(id: number): IGroupingState;\r\n  // tslint:disable-next-line:variable-name\r\n  clearRows(_itemIds: number[]): IGroupingState;\r\n  isRowSelected(id: number): boolean;\r\n  selectAllRows(): IGroupingState;\r\n  getSelectedRows(): number[];\r\n  getSelectedRowsCount(): number;\r\n}\r\n\r\nexport class GroupingState implements IGroupingState {\r\n  selectedRowIds: Set<number> = new Set<number>();\r\n  itemIds = [];\r\n\r\n\r\n  checkAreAllRowsSelected(): boolean {\r\n    if (this.itemIds.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    return this.selectedRowIds.size === this.itemIds.length;\r\n  }\r\n\r\n  selectRow(id: number): GroupingState {\r\n    if (this.selectedRowIds.has(id)) {\r\n      this.selectedRowIds.delete(id);\r\n    } else {\r\n      this.selectedRowIds.add(id);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  clearRows(_itemIds: number[]): GroupingState {\r\n    this.itemIds = _itemIds;\r\n    this.selectedRowIds = new Set<number>();\r\n    return this;\r\n  }\r\n\r\n  isRowSelected(id: number): boolean {\r\n    return this.selectedRowIds.has(id);\r\n  }\r\n\r\n  selectAllRows(): GroupingState {\r\n    const areAllSelected = this.itemIds.length === this.selectedRowIds.size;\r\n    if (areAllSelected) {\r\n      this.selectedRowIds = new Set<number>();\r\n    } else {\r\n      this.selectedRowIds = new Set<number>();\r\n      this.itemIds.forEach(id => this.selectedRowIds.add(id));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  getSelectedRows(): number[] {\r\n    return Array.from(this.selectedRowIds);\r\n  }\r\n\r\n  getSelectedRowsCount(): number {\r\n    return this.selectedRowIds.size;\r\n  }\r\n}\r\n\r\nexport interface IGroupingView  {\r\n  grouping: GroupingState;\r\n  ngOnInit(): void;\r\n}\r\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { ClipboardModule } from 'ngx-clipboard';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthService } from './modules/auth/_services/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n// Highlight JS\r\nimport { HighlightModule, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\r\nimport { SplashScreenModule } from './_metronic/partials/layout/splash-screen/splash-screen.module';\r\nimport { InterceptService } from './_metronic/core/services/intercept.service';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\n\r\nfunction appInitializer(authService: AuthService) {\r\n\treturn () => {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tauthService.getUserByToken().subscribe().add(resolve);\r\n\t\t});\r\n\t};\r\n}\r\n\r\n@NgModule({\r\n\tdeclarations: [AppComponent],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tMatSnackBarModule,\r\n\t\tSplashScreenModule,\r\n\t\tTranslateModule.forRoot(),\r\n\t\tHttpClientModule,\r\n\t\tHighlightModule,\r\n\t\tClipboardModule,\r\n\t\tAppRoutingModule,\r\n\t\tInlineSVGModule.forRoot(),\r\n\t\tNgbModule,\r\n\t],\r\n\tproviders: [\r\n\t\t{\r\n\t\t\tprovide: APP_INITIALIZER,\r\n\t\t\tuseFactory: appInitializer,\r\n\t\t\tmulti: true,\r\n\t\t\tdeps: [AuthService],\r\n\t\t},\r\n\t\tInterceptService,\r\n\t\t{\r\n\t\t\tprovide: HTTP_INTERCEPTORS,\r\n\t\t\tuseClass: InterceptService,\r\n\t\t\tmulti: true,\r\n\t\t},\r\n\t\t{ provide: LocationStrategy, useClass: HashLocationStrategy },\r\n\t\t{\r\n\t\t\tprovide: HIGHLIGHT_OPTIONS,\r\n\t\t\tuseValue: {\r\n\t\t\t\tcoreLibraryLoader: () => import('highlight.js/lib/core'),\r\n\t\t\t\tlanguages: {\r\n\t\t\t\t\txml: () => import('highlight.js/lib/languages/xml'),\r\n\t\t\t\t\ttypescript: () => import('highlight.js/lib/languages/typescript'),\r\n\t\t\t\t\tscss: () => import('highlight.js/lib/languages/scss'),\r\n\t\t\t\t\tjson: () => import('highlight.js/lib/languages/json'),\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n\tbootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","// tslint:disable:variable-name\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, finalize, tap } from 'rxjs/operators';\r\nimport { PaginatorState } from '../models/paginator.model';\r\nimport { ITableState, TableResponseModel } from '../models/table.model';\r\nimport { BaseModel } from '../models/base.model';\r\nimport { SortState } from '../models/sort.model';\r\nimport { GroupingState } from '../models/grouping.model';\r\nimport { environment } from '../../../../../environments/environment';\r\n\r\nconst DEFAULT_STATE: ITableState = {\r\n  filter: {},\r\n  paginator: new PaginatorState(),\r\n  sorting: new SortState(),\r\n  searchTerm: '',\r\n  grouping: new GroupingState(),\r\n  entityId: undefined\r\n};\r\n\r\nexport abstract class TableService<T> {\r\n  // Private fields\r\n  private _items$ = new BehaviorSubject<T[]>([]);\r\n  private _isLoading$ = new BehaviorSubject<boolean>(false);\r\n  private _isFirstLoading$ = new BehaviorSubject<boolean>(true);\r\n  private _tableState$ = new BehaviorSubject<ITableState>(DEFAULT_STATE);\r\n  private _errorMessage = new BehaviorSubject<string>('');\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n  // Getters\r\n  get items$() {\r\n    return this._items$.asObservable();\r\n  }\r\n  get isLoading$() {\r\n    return this._isLoading$.asObservable();\r\n  }\r\n  get isFirstLoading$() {\r\n    return this._isFirstLoading$.asObservable();\r\n  }\r\n  get errorMessage$() {\r\n    return this._errorMessage.asObservable();\r\n  }\r\n  get subscriptions() {\r\n    return this._subscriptions;\r\n  }\r\n  // State getters\r\n  get paginator() {\r\n    return this._tableState$.value.paginator;\r\n  }\r\n  get filter() {\r\n    return this._tableState$.value.filter;\r\n  }\r\n  get sorting() {\r\n    return this._tableState$.value.sorting;\r\n  }\r\n  get searchTerm() {\r\n    return this._tableState$.value.searchTerm;\r\n  }\r\n  get grouping() {\r\n    return this._tableState$.value.grouping;\r\n  }\r\n\r\n  protected http: HttpClient;\r\n  // API URL has to be overrided\r\n  API_URL = `${environment.apiUrl}/endpoint`;\r\n  constructor(http: HttpClient) {\r\n    this.http = http;\r\n  }\r\n\r\n  // CREATE\r\n  // server should return the object with ID\r\n  create(item: BaseModel): Observable<BaseModel> {\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    return this.http.post<BaseModel>(this.API_URL, item).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('CREATE ITEM', err);\r\n        return of({ id: undefined });\r\n      }),\r\n      finalize(() => this._isLoading$.next(false))\r\n    );\r\n  }\r\n\r\n  // READ (Returning filtered list of entities)\r\n  find(tableState: ITableState): Observable<TableResponseModel<T>> {\r\n    const url = this.API_URL + '/find';\r\n    this._errorMessage.next('');\r\n    return this.http.post<TableResponseModel<T>>(url, tableState).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('FIND ITEMS', err);\r\n        return of({ items: [], total: 0 });\r\n      })\r\n    );\r\n  }\r\n\r\n  getItemById(id: number): Observable<BaseModel> {\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    const url = `${this.API_URL}/${id}`;\r\n    return this.http.get<BaseModel>(url).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('GET ITEM BY IT', id, err);\r\n        return of({ id: undefined });\r\n      }),\r\n      finalize(() => this._isLoading$.next(false))\r\n    );\r\n  }\r\n\r\n  // UPDATE\r\n  update(item: BaseModel): Observable<any> {\r\n    const url = `${this.API_URL}/${item.id}`;\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    return this.http.put(url, item).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('UPDATE ITEM', item, err);\r\n        return of(item);\r\n      }),\r\n      finalize(() => this._isLoading$.next(false))\r\n    );\r\n  }\r\n\r\n  // UPDATE Status\r\n  updateStatusForItems(ids: number[], status: number): Observable<any> {\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    const body = { ids, status };\r\n    const url = this.API_URL + '/updateStatus';\r\n    return this.http.put(url, body).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('UPDATE STATUS FOR SELECTED ITEMS', ids, status, err);\r\n        return of([]);\r\n      }),\r\n      finalize(() => this._isLoading$.next(false))\r\n    );\r\n  }\r\n\r\n  // DELETE\r\n  delete(id: any): Observable<any> {\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    const url = `${this.API_URL}/${id}`;\r\n    return this.http.delete(url).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('DELETE ITEM', id, err);\r\n        return of({});\r\n      }),\r\n      finalize(() => this._isLoading$.next(false))\r\n    );\r\n  }\r\n\r\n  // delete list of items\r\n  deleteItems(ids: number[] = []): Observable<any> {\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    const url = this.API_URL + '/deleteItems';\r\n    const body = { ids };\r\n    return this.http.put(url, body).pipe(\r\n      catchError(err => {\r\n        this._errorMessage.next(err);\r\n        console.error('DELETE SELECTED ITEMS', ids, err);\r\n        return of([]);\r\n      }),\r\n      finalize(() => this._isLoading$.next(false))\r\n    );\r\n  }\r\n\r\n  public fetch() {\r\n    this._isLoading$.next(true);\r\n    this._errorMessage.next('');\r\n    const request = this.find(this._tableState$.value)\r\n      .pipe(\r\n        tap((res: TableResponseModel<T>) => {\r\n          this._items$.next(res.items);\r\n          this.patchStateWithoutFetch({\r\n            paginator: this._tableState$.value.paginator.recalculatePaginator(\r\n              res.total\r\n            ),\r\n          });\r\n        }),\r\n        catchError((err) => {\r\n          this._errorMessage.next(err);\r\n          return of({\r\n            items: [],\r\n            total: 0\r\n          });\r\n        }),\r\n        finalize(() => {\r\n          this._isLoading$.next(false);\r\n          const itemIds = this._items$.value.map((el: T) => {\r\n            const item = (el as unknown) as BaseModel;\r\n            return item.id;\r\n          });\r\n          this.patchStateWithoutFetch({\r\n            grouping: this._tableState$.value.grouping.clearRows(itemIds),\r\n          });\r\n        })\r\n      )\r\n      .subscribe();\r\n    this._subscriptions.push(request);\r\n  }\r\n\r\n  public setDefaults() {\r\n    this.patchStateWithoutFetch({ filter: {} });\r\n    this.patchStateWithoutFetch({ sorting: new SortState() });\r\n    this.patchStateWithoutFetch({ grouping: new GroupingState() });\r\n    this.patchStateWithoutFetch({ searchTerm: '' });\r\n    this.patchStateWithoutFetch({\r\n      paginator: new PaginatorState()\r\n    });\r\n    this._isFirstLoading$.next(true);\r\n    this._isLoading$.next(true);\r\n    this._tableState$.next(DEFAULT_STATE);\r\n    this._errorMessage.next('');\r\n  }\r\n\r\n  // Base Methods\r\n  public patchState(patch: Partial<ITableState>) {\r\n    this.patchStateWithoutFetch(patch);\r\n    this.fetch();\r\n  }\r\n\r\n  public patchStateWithoutFetch(patch: Partial<ITableState>) {\r\n    const newState = Object.assign(this._tableState$.value, patch);\r\n    this._tableState$.next(newState);\r\n  }\r\n}\r\n","// Localization is based on '@ngx-translate/core';\r\n// Please be familiar with official documentations first => https://github.com/ngx-translate/core\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nexport interface Locale {\r\n  lang: string;\r\n  data: any;\r\n}\r\n\r\nconst LOCALIZATION_LOCAL_STORAGE_KEY = 'language';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TranslationService {\r\n  // Private properties\r\n  private langIds: any = [];\r\n\r\n  constructor(private translate: TranslateService) {\r\n    // add new langIds to the list\r\n    this.translate.addLangs(['en']);\r\n\r\n    // this language will be used as a fallback when a translation isn't found in the current language\r\n    this.translate.setDefaultLang('en');\r\n  }\r\n\r\n  loadTranslations(...args: Locale[]): void {\r\n    const locales = [...args];\r\n\r\n    locales.forEach((locale) => {\r\n      // use setTranslation() with the third argument set to true\r\n      // to append translations instead of replacing them\r\n      this.translate.setTranslation(locale.lang, locale.data, true);\r\n\r\n      this.langIds.push(locale.lang);\r\n    });\r\n\r\n    // add new languages to the list\r\n    this.translate.addLangs(this.langIds);\r\n  }\r\n\r\n  setLanguage(lang) {\r\n    if (lang) {\r\n      this.translate.use(this.translate.getDefaultLang());\r\n      this.translate.use(lang);\r\n      localStorage.setItem(LOCALIZATION_LOCAL_STORAGE_KEY, lang);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns selected language\r\n   */\r\n  getSelectedLanguage(): any {\r\n    return (\r\n      localStorage.getItem(LOCALIZATION_LOCAL_STORAGE_KEY) ||\r\n      this.translate.getDefaultLang()\r\n    );\r\n  }\r\n}\r\n","export const PageSizes = [3, 5, 10, 15, 50, 100];\r\n\r\nexport interface IPaginatorState {\r\n  page: number;\r\n  pageSize: number;\r\n  total: number;\r\n  recalculatePaginator(total: number): IPaginatorState;\r\n}\r\n\r\nexport class PaginatorState implements IPaginatorState {\r\n  page = 1;\r\n  pageSize = PageSizes[2];\r\n  total = 0;\r\n  pageSizes: number[] = [];\r\n\r\n  recalculatePaginator(total: number): PaginatorState {\r\n    this.total = total;\r\n    return this;\r\n  }\r\n}\r\n\r\nexport interface IPaginatorView {\r\n  paginator: PaginatorState;\r\n  ngOnInit(): void;\r\n  paginate(paginator: PaginatorState): void;\r\n}\r\n","export type SortDirection = 'asc' | 'desc' | '';\r\n\r\nexport interface ISortState {\r\n  column: string;\r\n  direction: SortDirection;\r\n}\r\n\r\nexport class SortState implements ISortState {\r\n  column = 'id'; // Id by default\r\n  direction: SortDirection = 'asc'; // asc by default;\r\n}\r\n\r\nexport interface ISortView {\r\n  sorting: SortState;\r\n  ngOnInit(): void;\r\n  sort(column: string): void;\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { PageSizes, PaginatorState } from '../../models/paginator.model';\r\n\r\n@Component({\r\n  selector: 'app-paginator',\r\n  templateUrl: './paginator.component.html',\r\n  styleUrls: ['./paginator.component.scss']\r\n})\r\nexport class PaginatorComponent implements OnInit {\r\n  @Input() paginator: PaginatorState;\r\n  @Input() isLoading;\r\n  @Output() paginate: EventEmitter<PaginatorState> = new EventEmitter();\r\n  pageSizes: number[] = PageSizes;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  pageChange(num: number) {\r\n    this.paginator.page = num;\r\n    this.paginate.emit(this.paginator);\r\n  }\r\n\r\n  sizeChange() {\r\n    this.paginator.pageSize = +this.paginator.pageSize;\r\n    this.paginator.page = 1;\r\n    this.paginate.emit(this.paginator);\r\n  }\r\n}\r\n","<!-- start: Paginator -->\r\n<div class=\"d-flex flex-wrap py-2 mr-3\">\r\n  <ng-pagination\r\n    [collectionSize]=\"paginator.total\"\r\n    [(page)]=\"paginator.page\"\r\n    [maxSize]=\"4\"\r\n    [rotate]=\"true\"\r\n    [boundaryLinks]=\"true\"\r\n    [pageSize]=\"paginator.pageSize\"\r\n    (pageChange)=\"pageChange($event)\"\r\n  ></ng-pagination>\r\n</div>\r\n<div class=\"d-flex align-items-center py-3\">\r\n  <!-- begin: loading -->\r\n  <div class=\"d-flex align-items-center\" *ngIf=\"isLoading\">\r\n    <div class=\"mr-2 text-muted\">Loading...</div>\r\n    <div class=\"spinner spinner-primary mr-10\"></div>\r\n  </div>\r\n  <!-- end: loading -->\r\n\r\n  <!-- begin: pageSize -->\r\n  <select\r\n    class=\"form-control form-control-sm font-weight-bold mr-4 border-0 bg-light false\"\r\n    style=\"width: 75px\"\r\n    [(ngModel)]=\"paginator.pageSize\"\r\n    (change)=\"sizeChange()\"\r\n  >\r\n    <option class=\"btn\" *ngFor=\"let ps of pageSizes\">\r\n      {{ ps }}\r\n    </option></select\r\n  ><span class=\"react-bootstrap-table-pagin ation-total\"\r\n    >&nbsp;Showing rows {{ paginator.page }} to&nbsp;{{\r\n      paginator.pageSize\r\n    }}\r\n    of&nbsp;{{ paginator.total }}</span\r\n  >\r\n  <!-- end: pageSize -->\r\n</div>\r\n<!-- end: Paginator -->\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { UserModel } from '../../_models/user.model';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { AuthModel } from '../../_models/auth.model';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class AuthHTTPService {\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\t// public methods\r\n\tlogin(username: string, password: string, role = 'admin'): Observable<any> {\r\n\t\treturn this.http.post<AuthModel>(`${environment.apiUrl}auth/login`, {\r\n\t\t\tusername,\r\n\t\t\tpassword,\r\n\t\t\trole,\r\n\t\t});\r\n\t}\r\n\r\n\t// CREATE =>  POST: add a new user to the server\r\n\tcreateUser(user: UserModel): Observable<UserModel> {\r\n\t\treturn this.http.post<UserModel>(`${environment.apiUrl}user/create`, user);\r\n\t}\r\n\r\n\t// Your server should check email => If email exists send link to the user and return true | If email doesn't exist return false\r\n\tforgotPassword(email: string): Observable<boolean> {\r\n\t\treturn this.http.post<boolean>(\r\n\t\t\t`${environment.apiUrl}auth/forgot-password`,\r\n\t\t\t{\r\n\t\t\t\temail,\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tgetUserByToken(): Observable<UserModel> {\r\n\t\treturn this.http.get<UserModel>(`${environment.apiUrl}authenticated-user`);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n\tRouter,\r\n\tCanActivate,\r\n\tActivatedRouteSnapshot,\r\n\tRouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n\tconstructor(private authService: AuthService) {}\r\n\r\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\t\tconst currentUser = this.authService.currentUserValue;\r\n\t\tif (currentUser) {\r\n\t\t\t// logged in so return true\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// not logged in so redirect to login page with the return url\r\n\t\tthis.authService.logout();\r\n\t\treturn false;\r\n\t}\r\n}\r\n","import { AuthModel } from './auth.model';\r\n\r\nexport class UserModel extends AuthModel {\r\n\tid: number;\r\n\tname: string;\r\n\temail: string;\r\n\tpassword: string;\r\n\t// tslint:disable-next-line: variable-name\r\n\trole_id: number;\r\n\tis_super_admin: boolean;\r\n\tallowed_access: any;\r\n\toccupation: string;\r\n\tcompanyName: string;\r\n\tphone: string;\r\n\tpic: string;\r\n\t// email settings\r\n\temailSettings: {\r\n\t\temailNotification: boolean;\r\n\t\tsendCopyToPersonalEmail: boolean;\r\n\t\tactivityRelatesEmail: {\r\n\t\t\tyouHaveNewNotifications: boolean;\r\n\t\t\tyouAreSentADirectMessage: boolean;\r\n\t\t\tsomeoneAddsYouAsAsAConnection: boolean;\r\n\t\t\tuponNewOrder: boolean;\r\n\t\t\tnewMembershipApproval: boolean;\r\n\t\t\tmemberRegistration: boolean;\r\n\t\t};\r\n\t\tupdatesFromKeenthemes: {\r\n\t\t\tnewsAboutKeenthemesProductsAndFeatureUpdates: boolean;\r\n\t\t\ttipsOnGettingMoreOutOfKeen: boolean;\r\n\t\t\tthingsYouMissedSindeYouLastLoggedIntoKeen: boolean;\r\n\t\t\tnewsAboutMetronicOnPartnerProductsAndOtherServices: boolean;\r\n\t\t\ttipsOnMetronicBusinessProducts: boolean;\r\n\t\t};\r\n\t};\r\n\r\n\tsetUser(user: any) {\r\n\t\tthis.id = user.id;\r\n\t\tthis.name = user.name || '';\r\n\t\tthis.email = user.email || '';\r\n\t\tthis.pic = user.pic || './assets/media/users/default.jpg';\r\n\t\tthis.role_id = user.role_id || '';\r\n\t\tthis.occupation = user.occupation || '';\r\n\t\tthis.companyName = user.companyName || '';\r\n\t\tthis.phone = user.phone || '';\r\n\t}\r\n}\r\n","// Germany\r\nexport const locale = {\r\n  lang: 'de',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'Wähle deine Sprache',\r\n    },\r\n    MENU: {\r\n      NEW: 'Neu',\r\n      ACTIONS: 'Aktionen',\r\n      CREATE_POST: 'Erstellen Sie einen neuen Beitrag',\r\n      PAGES: 'Pages',\r\n      FEATURES: 'Eigenschaften',\r\n      APPS: 'Apps',\r\n      DASHBOARD: 'Instrumententafel'\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'Oder',\r\n        SUBMIT_BUTTON: 'einreichen',\r\n        NO_ACCOUNT: 'Hast du kein Konto?',\r\n        SIGNUP_BUTTON: 'Anmelden',\r\n        FORGOT_BUTTON: 'Passwort vergessen',\r\n        BACK_BUTTON: 'Zurück',\r\n        PRIVACY: 'Privatsphäre',\r\n        LEGAL: 'Legal',\r\n        CONTACT: 'Kontakt',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Create Account',\r\n        BUTTON: 'Sign In',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Forgotten Password?',\r\n        DESC: 'Enter your email to reset your password',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'Nutzername'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Customers',\r\n        CUSTOMERS_LIST: 'Customers list',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","// models\r\nexport * from './_models/user.model';\r\n// services\r\nexport * from './_services/auth.service';\r\n// validators\r\nexport * from './registration/confirm-password.validator';\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './modules/auth/_services/auth.guard';\r\n\r\nexport const routes: Routes = [\r\n\t{\r\n\t\tpath: 'auth',\r\n\t\tloadChildren: () =>\r\n\t\t\timport('./modules/auth/auth.module').then((m) => m.AuthModule),\r\n\t},\r\n\t{\r\n\t\tpath: 'error',\r\n\t\tloadChildren: () =>\r\n\t\t\timport('./modules/errors/errors.module').then((m) => m.ErrorsModule),\r\n\t},\r\n\t{\r\n\t\tpath: '',\r\n\t\tcanActivate: [AuthGuard],\r\n\t\tloadChildren: () =>\r\n\t\t\timport('./pages/layout.module').then((m) => m.LayoutModule),\r\n\t},\r\n\t{ path: '**', redirectTo: 'error/404' },\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit, Input, OnChanges, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { SortDirection } from '../../models/sort.model';\r\n\r\n@Component({\r\n  selector: 'app-sort-icon',\r\n  templateUrl: './sort-icon.component.html',\r\n  styleUrls: ['./sort-icon.component.scss']\r\n})\r\nexport class SortIconComponent implements OnInit, OnChanges {\r\n  @Input() column: string;\r\n  @Input() activeColumn: string;\r\n  @Input() activeDirection: SortDirection;\r\n  @Output() sort: EventEmitter<string> = new EventEmitter<string>();\r\n  isActive = false;\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnChanges(): void {\r\n    const parent = this.el.nativeElement.parentElement;\r\n    if (!parent) {\r\n      return;\r\n    }\r\n\r\n    // Load css classes\r\n    parent.classList.add('sortable');\r\n    parent.classList.remove('sortable-active');\r\n    if (this.column === this.activeColumn) {\r\n      parent.classList.add('sortable-active');\r\n    }\r\n\r\n    // load icons\r\n    this.isActive = this.column === this.activeColumn;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const parent = this.el.nativeElement.parentElement as Element;\r\n    if (!parent) {\r\n      return;\r\n    }\r\n\r\n    parent.addEventListener('click', () => {\r\n      this.sort.emit(this.column);\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"isActive\">\r\n  <ng-container *ngIf=\"activeDirection === 'asc'\">\r\n    <span [inlineSVG]=\"'./assets/media/svg/icons/Navigation/Up-2.svg'\"\r\n      cacheSVG=\"true\"\r\n      class=\"svg-icon svg-icon-sm svg-icon-primary ml-1\">\r\n    </span>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"activeDirection === 'desc'\">\r\n    <span [inlineSVG]=\"'./assets/media/svg/icons/Navigation/Down-2.svg'\"\r\n      cacheSVG=\"true\"\r\n      class=\"svg-icon svg-icon-sm svg-icon-primary ml-1\">\r\n  </span>\r\n  </ng-container>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"!isActive\">\r\n  <span [inlineSVG]=\"'./assets/media/svg/icons/Shopping/Sort1.svg'\"\r\n    cacheSVG=\"true\"\r\n    class=\"svg-icon svg-icon-sm svg-icon-primary ml-1 svg-icon-sort\">\r\n  </span>\r\n</ng-container>\r\n","// Spain\r\nexport const locale = {\r\n  lang: 'es',\r\n  data: {\r\n    TRANSLATOR: {\r\n      SELECT: 'Elige tu idioma',\r\n    },\r\n    MENU: {\r\n      NEW: 'nuevo',\r\n      ACTIONS: 'Comportamiento',\r\n      CREATE_POST: 'Crear nueva publicación',\r\n      PAGES: 'Pages',\r\n      FEATURES: 'Caracteristicas',\r\n      APPS: 'Aplicaciones',\r\n      DASHBOARD: 'Tablero'\r\n    },\r\n    AUTH: {\r\n      GENERAL: {\r\n        OR: 'O',\r\n        SUBMIT_BUTTON: 'Enviar',\r\n        NO_ACCOUNT: 'No tienes una cuenta?',\r\n        SIGNUP_BUTTON: 'Regístrate',\r\n        FORGOT_BUTTON: 'Se te olvidó tu contraseña',\r\n        BACK_BUTTON: 'Espalda',\r\n        PRIVACY: 'Intimidad',\r\n        LEGAL: 'Legal',\r\n        CONTACT: 'Contacto',\r\n      },\r\n      LOGIN: {\r\n        TITLE: 'Crear una cuenta',\r\n        BUTTON: 'Registrarse',\r\n      },\r\n      FORGOT: {\r\n        TITLE: 'Contraseña olvidada?',\r\n        DESC: 'Ingrese su correo electrónico para restablecer su contraseña',\r\n        SUCCESS: 'Your account has been successfully reset.'\r\n      },\r\n      REGISTER: {\r\n        TITLE: 'Sign Up',\r\n        DESC: 'Enter your details to create your account',\r\n        SUCCESS: 'Your account has been successfuly registered.'\r\n      },\r\n      INPUT: {\r\n        EMAIL: 'Email',\r\n        FULLNAME: 'Fullname',\r\n        PASSWORD: 'Password',\r\n        CONFIRM_PASSWORD: 'Confirm Password',\r\n        USERNAME: 'Usuario'\r\n      },\r\n      VALIDATION: {\r\n        INVALID: '{{name}} is not valid',\r\n        REQUIRED: '{{name}} is required',\r\n        MIN_LENGTH: '{{name}} minimum length is {{min}}',\r\n        AGREEMENT_REQUIRED: 'Accepting terms & conditions are required',\r\n        NOT_FOUND: 'The requested {{name}} is not found',\r\n        INVALID_LOGIN: 'The login detail is incorrect',\r\n        REQUIRED_FIELD: 'Required field',\r\n        MIN_LENGTH_FIELD: 'Minimum field length:',\r\n        MAX_LENGTH_FIELD: 'Maximum field length:',\r\n        INVALID_FIELD: 'Field is not valid',\r\n      }\r\n    },\r\n    ECOMMERCE: {\r\n      COMMON: {\r\n        SELECTED_RECORDS_COUNT: 'Selected records count: ',\r\n        ALL: 'All',\r\n        SUSPENDED: 'Suspended',\r\n        ACTIVE: 'Active',\r\n        FILTER: 'Filter',\r\n        BY_STATUS: 'by Status',\r\n        BY_TYPE: 'by Type',\r\n        BUSINESS: 'Business',\r\n        INDIVIDUAL: 'Individual',\r\n        SEARCH: 'Search',\r\n        IN_ALL_FIELDS: 'in all fields'\r\n      },\r\n      ECOMMERCE: 'eCommerce',\r\n      CUSTOMERS: {\r\n        CUSTOMERS: 'Customers',\r\n        CUSTOMERS_LIST: 'Customers list',\r\n        NEW_CUSTOMER: 'New Customer',\r\n        DELETE_CUSTOMER_SIMPLE: {\r\n          TITLE: 'Customer Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete this customer?',\r\n          WAIT_DESCRIPTION: 'Customer is deleting...',\r\n          MESSAGE: 'Customer has been deleted'\r\n        },\r\n        DELETE_CUSTOMER_MULTY: {\r\n          TITLE: 'Customers Delete',\r\n          DESCRIPTION: 'Are you sure to permanently delete selected customers?',\r\n          WAIT_DESCRIPTION: 'Customers are deleting...',\r\n          MESSAGE: 'Selected customers have been deleted'\r\n        },\r\n        UPDATE_STATUS: {\r\n          TITLE: 'Status has been updated for selected customers',\r\n          MESSAGE: 'Selected customers status have successfully been updated'\r\n        },\r\n        EDIT: {\r\n          UPDATE_MESSAGE: 'Customer has been updated',\r\n          ADD_MESSAGE: 'Customer has been created'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
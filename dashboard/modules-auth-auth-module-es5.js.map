{"version":3,"sources":["webpack:///src/app/modules/auth/auth.module.ts","webpack:///src/app/modules/auth/registration/registration.component.ts","webpack:///src/app/modules/auth/registration/registration.component.html","webpack:///src/app/modules/auth/login/login.component.ts","webpack:///src/app/modules/auth/login/login.component.html","webpack:///src/app/modules/auth/logout/logout.component.ts","webpack:///src/app/modules/auth/logout/logout.component.html","webpack:///src/app/modules/auth/auth.component.ts","webpack:///src/app/modules/auth/auth.component.html","webpack:///src/app/modules/auth/forgot-password/forgot-password.component.ts","webpack:///src/app/modules/auth/forgot-password/forgot-password.component.html","webpack:///src/app/modules/auth/auth-routing.module.ts"],"names":["AuthModule","declarations","imports","RegistrationComponent","fb","authService","router","unsubscribe","isLoading$","currentUserValue","navigate","initForm","registrationForm","group","fullname","compose","required","minLength","maxLength","email","phone","password","cPassword","agree","validator","MatchPassword","hasError","result","Object","keys","f","forEach","key","value","newUser","setUser","registrationSubscr","registration","pipe","subscribe","user","push","sb","controls","submit","selector","templateUrl","styleUrls","LoginComponent","route","defaultAuth","username","returnUrl","snapshot","queryParams","toString","loginForm","pattern","loginSubscr","login","LogoutComponent","logout","AuthComponent","today","Date","ErrorStates","ForgotPasswordComponent","errorState","NotSubmitted","errorStates","forgotPasswordForm","forgotPasswordSubscr","forgotPassword","NoError","HasError","routes","path","component","children","redirectTo","pathMatch","data","window","location","pathname","AuthRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA6BaA,U;;;;;cAAAA;;;;2BAAAA,U;AAAU,S;AAAA,kBATZ,CACP,4DADO,EAEP,2EAFO,EAGP,sEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,qEANO,CASY;;;;4HAAVA,U,EAAU;AAAA,yBAfnB,qEAemB,EAdnB,0FAcmB,EAbnB,kGAamB,EAZnB,wEAYmB,EAXnB,6DAWmB;AAXN,oBAGb,4DAHa,EAIb,2EAJa,EAKb,sEALa,EAMb,0DANa,EAOb,kEAPa,EAQb,qEARa;AAWM,S;AAHH,O;;;;;wEAGPA,U,EAAU;gBAjBtB,sDAiBsB;iBAjBb;AACRC,wBAAY,EAAE,CACZ,qEADY,EAEZ,0FAFY,EAGZ,kGAHY,EAIZ,wEAJY,EAKZ,6DALY,CADN;AAQRC,mBAAO,EAAE,CACP,4DADO,EAEP,2EAFO,EAGP,sEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,qEANO;AARD,W;AAiBa,U;;;;;;;;;;;;;;;;;;AC7BvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsBE;;AACC;;AAGC;;AAAwB;;AAAsC;;AAC/D;;AACD;;;;;;AAgPC;;AAMC;;AACC;;AACC;;AACD;;AACD;;AACD;;;;;;AAoDA;;AACC;;AACD;;;;;;AAcF;;AAGC;;AACC;;AACC;;AACD;;AACD;;AACD;;;;;;AAHG;;AAAA;;;;;;AALH;;;;;;;AACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UD9UUC,qB;AAQZ,uCACSC,EADT,EAESC,WAFT,EAGSC,MAHT,EAGuB;AAAA;;AAFd,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA,CAAc,CANvB;;AACQ,eAAAC,WAAA,GAA8B,EAA9B,CAKe,CALmB;;AAOzC,eAAKC,UAAL,GAAkB,KAAKH,WAAL,CAAiBG,UAAnC,CAFsB,CAGtB;;AACA,cAAI,KAAKH,WAAL,CAAiBI,gBAArB,EAAuC;AACtC,iBAAKH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACA;AACD;;;;qCAEO;AACP,iBAAKC,QAAL;AACA,W,CAED;;;;qCAKW;AACV,iBAAKC,gBAAL,GAAwB,KAAKR,EAAL,CAAQS,KAAR,CACvB;AACCC,sBAAQ,EAAE,CACT,EADS,EAET,0DAAWC,OAAX,CAAmB,CAClB,0DAAWC,QADO,EAElB,0DAAWC,SAAX,CAAqB,CAArB,CAFkB,EAGlB,0DAAWC,SAAX,CAAqB,GAArB,CAHkB,CAAnB,CAFS,CADX;AASCC,mBAAK,EAAE,CACN,aADM,EAEN,0DAAWJ,OAAX,CAAmB,CAClB,0DAAWC,QADO,EAElB,0DAAWG,KAFO,EAGlB,0DAAWF,SAAX,CAAqB,CAArB,CAHkB,EAIlB,0DAAWC,SAAX,CAAqB,GAArB,CAJkB,CAAnB,CAFM,CATR;AAkBCE,mBAAK,EAAE,CACN,0DAAWL,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,EAArB,CAAtB,CAAnB,CADM,CAlBR;AAqBCI,sBAAQ,EAAE,CACT,EADS,EAET,0DAAWN,OAAX,CAAmB,CAClB,0DAAWC,QADO,EAElB,0DAAWC,SAAX,CAAqB,CAArB,CAFkB,EAGlB,0DAAWC,SAAX,CAAqB,GAArB,CAHkB,CAAnB,CAFS,CArBX;AA6BCI,uBAAS,EAAE,CACV,EADU,EAEV,0DAAWP,OAAX,CAAmB,CAClB,0DAAWC,QADO,EAElB,0DAAWC,SAAX,CAAqB,CAArB,CAFkB,EAGlB,0DAAWC,SAAX,CAAqB,GAArB,CAHkB,CAAnB,CAFU,CA7BZ;AAqCCK,mBAAK,EAAE,CAAC,KAAD,EAAQ,0DAAWR,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAR;AArCR,aADuB,EAwCvB;AACCQ,uBAAS,EAAE,qFAAyBC;AADrC,aAxCuB,CAAxB;AA4CA;;;mCAEQ;AAAA;;AACR,iBAAKC,QAAL,GAAgB,KAAhB;AACA,gBAAMC,MAAM,GAAG,EAAf;AACAC,kBAAM,CAACC,IAAP,CAAY,KAAKC,CAAjB,EAAoBC,OAApB,CAA4B,UAACC,GAAD,EAAS;AACpCL,oBAAM,CAACK,GAAD,CAAN,GAAc,KAAI,CAACF,CAAL,CAAOE,GAAP,EAAYC,KAA1B;AACA,aAFD;AAGA,gBAAMC,OAAO,GAAG,IAAI,4DAAJ,EAAhB;AACAA,mBAAO,CAACC,OAAR,CAAgBR,MAAhB;AACA,gBAAMS,kBAAkB,GAAG,KAAK/B,WAAL,CACzBgC,YADyB,CACZH,OADY,EAEzBI,IAFyB,CAEpB,8DAFoB,EAGzBC,SAHyB,CAGf,UAACC,IAAD,EAAqB;AAC/B,kBAAIA,IAAJ,EAAU;AACT,qBAAI,CAAClC,MAAL,CAAYI,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACA,eAFD,MAEO;AACN,qBAAI,CAACgB,QAAL,GAAgB,IAAhB;AACA;AACD,aATyB,CAA3B;AAUA,iBAAKnB,WAAL,CAAiBkC,IAAjB,CAAsBL,kBAAtB;AACA;;;wCAEa;AACb,iBAAK7B,WAAL,CAAiBwB,OAAjB,CAAyB,UAACW,EAAD;AAAA,qBAAQA,EAAE,CAACnC,WAAH,EAAR;AAAA,aAAzB;AACA;;;8BA1EO;AACP,mBAAO,KAAKK,gBAAL,CAAsB+B,QAA7B;AACA;;;;;;;yBA3BWxC,qB,EAAqB,2H,EAAA,mI,EAAA,uH;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA,iB;AAAA,gB;AAAA,q5E;AAAA;AAAA;ACblC;;AAEC;;AAKC;AAAA,qBAAY,IAAAyC,MAAA,EAAZ;AAAoB,aAApB;;AAGA;;AACC;;AACC;;AACD;;AACA;;AACC;;AACD;;AACD;;AAIA;;AAUA;;AACC;;AAAyD;;AAAQ;;AACjE;;AAkBA;;AAQA;;AAQA;;AAQD;;AAIA;;AACC;;AAAyD;;AAAK;;AAC9D;;AAgBA;;AAQA;;AAQA;;AAQD;;AAIA;;AACC;;AAAyD;;AAAK;;AAC9D;;AAgBA;;AAQA;;AAQA;;AAQD;;AAIA;;AACC;;AACE;;AAAQ;;AAEV;;AAkBA;;AAQA;;AAQA;;AAQD;;AAIA;;AACC;;AACE;;AAAgB;;AAElB;;AAkBA;;AAQA;;AAQA;;AAQA;;AAYD;;AAIA;;AACC;;AACC;;AAA8D;;AAC/C;;AAGb;;AAAoB;;AACrB;;AACD;;AACD;;AACD;;AAIA;;AACC;;AAeC;;AACD;;AACA;;AAYC;;AACD;;AAEA;;;;AAGD;;AAED;;AAED;;AAGA;;;;;;AA9UE;;AAAA;;AAee;;AAAA;;AA0Bb;;AAAA;;AAKA;;AAAA,8FAA8B,yBAA9B,EAA8B,iHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,iHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,iHAA9B;;AA2BA;;AAAA;;AAGA;;AAAA,8FAA8B,yBAA9B,EAA8B,8GAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,8GAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,8GAA9B;;AA2BA;;AAAA;;AAGA;;AAAA,8FAA8B,yBAA9B,EAA8B,8GAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,8GAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,8GAA9B;;AA6BA;;AAAA;;AAKA;;AAAA,8FAA8B,yBAA9B,EAA8B,kHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,kHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,kHAA9B;;AA6BA;;AAAA;;AAKA;;AAAA,8FAA8B,yBAA9B,EAA8B,mHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,mHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,mHAA9B;;AAQC;;AAAA;;AAiCD;;AAAA;;AA6Bc;;AAAA;;;;;;;;;;wED7TLzC,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACV0C,oBAAQ,EAAE,kBADA;AAEVC,uBAAW,EAAE,+BAFH;AAGVC,qBAAS,EAAE,CAAC,+BAAD;AAHD,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEdlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmBE;;AACC;;AAGC;;AAAwB;;AAA+B;;AACxD;;AACD;;;;;;AAwFC;;AACC;;AACD;;;;;;AAcF;;AAGC;;AACC;;AACC;;AACD;;AACD;;AACD;;;;;;AAHG;;AAAA;;;;;;AALH;;;;;;;AACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UDrHUC,c;AAaZ,gCACS5C,EADT,EAESC,WAFT,EAGS4C,KAHT,EAIS3C,MAJT,EAIuB;AAAA;;AAHd,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAA4C,KAAA,GAAAA,KAAA;AACA,eAAA3C,MAAA,GAAAA,MAAA;AAhBT,eAAA4C,WAAA,GAAc;AACbC,oBAAQ,EAAE,EADG;AAEb9B,oBAAQ,EAAE;AAFG,WAAd,CAgBuB,CAPvB;;AACQ,eAAAd,WAAA,GAA8B,EAA9B,CAMe,CANmB;;AAQzC,eAAKC,UAAL,GAAkB,KAAKH,WAAL,CAAiBG,UAAnC,CAFsB,CAGtB;;AACA,cAAI,KAAKH,WAAL,CAAiBI,gBAArB,EAAuC;AACtC,iBAAKH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACA;AACD;;;;qCAEO;AACP,iBAAKC,QAAL,GADO,CAEP;;AACA,iBAAKyC,SAAL,GACC,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,WAApB,CAAgC,YAAYC,QAAZ,EAAhC,KAA2D,GAD5D;AAEA,W,CAED;;;;qCAKW;AACV,iBAAKC,SAAL,GAAiB,KAAKpD,EAAL,CAAQS,KAAR,CAAc;AAC9BsC,sBAAQ,EAAE,CACT,KAAKD,WAAL,CAAiBC,QADR,EAET,0DAAWpC,OAAX,CAAmB,CAClB,0DAAWC,QADO,EAElB,0DAAWyC,OAAX,CACC,6DADD,CAFkB,CAAnB,CAFS,CADoB;AAU9BpC,sBAAQ,EAAE,CACT,KAAK6B,WAAL,CAAiB7B,QADR,EAET,0DAAWN,OAAX,CAAmB,CAClB,0DAAWC,QADO,EAElB,0DAAWC,SAAX,CAAqB,CAArB,CAFkB,EAGlB,0DAAWC,SAAX,CAAqB,GAArB,CAHkB,CAAnB,CAFS;AAVoB,aAAd,CAAjB;AAmBA;;;mCAEQ;AAAA;;AACR,iBAAKQ,QAAL,GAAgB,KAAhB;AACA,gBAAMgC,WAAW,GAAG,KAAKrD,WAAL,CAClBsD,KADkB,CACZ,KAAK7B,CAAL,CAAOqB,QAAP,CAAgBlB,KADJ,EACW,KAAKH,CAAL,CAAOT,QAAP,CAAgBY,KAD3B,EAElBK,IAFkB,CAEb,8DAFa,EAGlBC,SAHkB,CAGR,UAACC,IAAD,EAAqB;AAC/B,kBAAIA,IAAJ,EAAU;AACT,sBAAI,CAAClC,MAAL,CAAYI,QAAZ,CAAqB,CAAC,MAAI,CAAC0C,SAAN,CAArB;AACA,eAFD,MAEO;AACN,sBAAI,CAAC1B,QAAL,GAAgB,IAAhB;AACA;AACD,aATkB,CAApB;AAUA,iBAAKnB,WAAL,CAAiBkC,IAAjB,CAAsBiB,WAAtB;AACA;;;wCAEa;AACb,iBAAKnD,WAAL,CAAiBwB,OAAjB,CAAyB,UAACW,EAAD;AAAA,qBAAQA,EAAE,CAACnC,WAAH,EAAR;AAAA,aAAzB;AACA;;;8BA3CO;AACP,mBAAO,KAAKiD,SAAL,CAAeb,QAAtB;AACA;;;;;;;yBApCWK,c,EAAc,2H,EAAA,mI,EAAA,+H,EAAA,uH;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,iB;AAAA,gB;AAAA,mxC;AAAA;AAAA;ACZ3B;;AAEC;;AAKC;AAAA,qBAAY,IAAAJ,MAAA,EAAZ;AAAoB,aAApB;;AAGA;;AACC;;AACC;;AACD;;AACD;;AAIA;;AAUA;;AACC;;AACE;;AAAc;;AAEhB;;AAQA;;AAQD;;AAIA;;AACC;;AACC;;AACE;;AAAQ;;AAEX;;AAEA;;AAQA;;AAQA;;AAQA;;AAQD;;AAIA;;AACC;;AAaC;;AACD;;AAEA;;;;AAGD;;AAED;;AAED;;AAGA;;;;;;AAtHE;;AAAA;;AAce;;AAAA;;AAoBb;;AAAA;;AAGA;;AAAA,8FAA8B,yBAA9B,EAA8B,0GAA9B;;AAwBA;;AAAA;;AAGA;;AAAA,8FAA8B,yBAA9B,EAA8B,0GAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,0GAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,0GAA9B;;AAuBA;;AAAA;;AAKc;;AAAA;;;;;;;;;;wEDpGLI,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACVH,oBAAQ,EAAE,WADA;AAEVC,uBAAW,EAAE,wBAFH;AAGVC,qBAAS,EAAE,CAAC,wBAAD;AAHD,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaa,e;AACZ,iCAAoBvD,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AACnB,eAAKA,WAAL,CAAiBwD,MAAjB;AACA;;;;qCAEO,CAAW;;;;;;;yBALPD,e,EAAe,mI;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA;AAAA;ACR5B;;AAAG;;AAAa;;;;;;;;wEDQHA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACVf,oBAAQ,EAAE,YADA;AAEVC,uBAAW,EAAE,yBAFH;AAGVC,qBAAS,EAAE,CAAC,yBAAD;AAHD,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOae,a;AAGZ,iCAAc;AAAA;;AAFd,eAAAC,KAAA,GAAc,IAAIC,IAAJ,EAAd;AAEgB;;;;qCAER,CAAW;;;;;;;yBALPF,a;AAAa,O;;;cAAbA,a;AAAa,iC;AAAA,iB;AAAA,e;AAAA,spC;AAAA;AAAA;ACP1B;;AAEC;;AAKC;;AAKC;;AAEC;;AACC;;AAKD;;AAIA;;AAIC;;AACD;;AAED;;AAIA;;AAOD;;AAIA;;AAIC;;AACC;;AACD;;AAIA;;AAGC;;AACE;;AAAa;;AAEhB;;AAED;;AAED;;AAED;;;;;;;;;wED7DaA,a,EAAa;gBALzB,uDAKyB;iBALf;AACVjB,oBAAQ,EAAE,UADA;AAEVC,uBAAW,EAAE,uBAFH;AAGVC,qBAAS,EAAE,CAAC,uBAAD;AAHD,W;AAKe,U;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBI;;AACE;;AAGE;;AAAwB;;AAA6B;;AACvD;;AACF;;;;;;AAoEE;;AACE;;AACF;;;;;;AAOJ;;AACE;;AAWE;;AACE;;AACE;;AAA+C;;AAAiB;;AAChE;;AACE;;AAAmC;;AACnC;;AAAa;;AACf;;AACA;;AAIE;;AACF;;AACF;;AACF;;AAEF;;AACF;;;;;;AASA;;AAGE;;AACE;;AACE;;AACF;;AACF;;AACF;;;;;;AAHM;;AAAA;;;;;;AALN;;;;;;;AACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AD5IL,UAAKkB,WAAL;;AAAA,iBAAKA,WAAL,EAAgB;AACd;AACA;AACA;AACD,OAJD,EAAKA,WAAW,KAAXA,WAAW,MAAhB;;UAWaC,uB;AAQX,yCACU9D,EADV,EAEUC,WAFV,EAEkC;AAAA;;AADxB,eAAAD,EAAA,GAAAA,EAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AARV,eAAA8D,UAAA,GAA0BF,WAAW,CAACG,YAAtC;AACA,eAAAC,WAAA,GAAcJ,WAAd,CAOkC,CAJlC;;AACQ,eAAA1D,WAAA,GAA8B,EAA9B,CAG0B,CAHQ;;AAKxC,eAAKC,UAAL,GAAkB,KAAKH,WAAL,CAAiBG,UAAnC;AACD;;;;qCAEO;AACN,iBAAKG,QAAL;AACD,W,CAED;;;;qCAKW;AACT,iBAAK2D,kBAAL,GAA0B,KAAKlE,EAAL,CAAQS,KAAR,CAAc;AACtCM,mBAAK,EAAE,CACL,gBADK,EAEL,0DAAWJ,OAAX,CAAmB,CACjB,0DAAWC,QADM,EAEjB,0DAAWG,KAFM,EAGjB,0DAAWF,SAAX,CAAqB,CAArB,CAHiB,EAIjB,0DAAWC,SAAX,CAAqB,GAArB,CAJiB,CAAnB,CAFK;AAD+B,aAAd,CAA1B;AAWD;;;mCAEQ;AAAA;;AACP,iBAAKiD,UAAL,GAAkBF,WAAW,CAACG,YAA9B;AACA,gBAAMG,oBAAoB,GAAG,KAAKlE,WAAL,CAC1BmE,cAD0B,CACX,KAAK1C,CAAL,CAAOX,KAAP,CAAac,KADF,EAE1BK,IAF0B,CAErB,8DAFqB,EAG1BC,SAH0B,CAGhB,UAACZ,MAAD,EAAqB;AAC9B,oBAAI,CAACwC,UAAL,GAAkBxC,MAAM,GAAGsC,WAAW,CAACQ,OAAf,GAAyBR,WAAW,CAACS,QAA7D;AACD,aAL0B,CAA7B;AAMA,iBAAKnE,WAAL,CAAiBkC,IAAjB,CAAsB8B,oBAAtB;AACD;;;8BA3BO;AACN,mBAAO,KAAKD,kBAAL,CAAwB3B,QAA/B;AACD;;;;;;;yBAtBUuB,uB,EAAuB,2H,EAAA,mI;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA,iB;AAAA,gB;AAAA,0wD;AAAA;AAAA;ACjBpC;;AAEE;;AAIE;AAAA,qBAAY,IAAAtB,MAAA,EAAZ;AAAoB,aAApB;;AAOA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAIA;;AAUA;;AACE;;AAYA;;AAQA;;AAQA;;AAQA;;AAQF;;AAGA;;AACE;;AAKE;;AACF;;AACA;;AAKE;;AACF;;AAEA;;;;AAGF;;AAEA;;AACF;;AAGA;;AA8BF;;AAEA;;;;;;AAtII;;AAAA,0GAAgC,SAAhC,EAAgC,qIAAhC;;AAmBe;;AAAA;;AAkBX;;AAAA;;AAMA;;AAAA,8FAA8B,yBAA9B,EAA8B,gHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,gHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,gHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,gHAA9B;;AA0Ba;;AAAA;;AASJ;;AAAA;;;;;;;;;;wED1FJsB,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTrB,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;;;;;AEjBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,UAAM4B,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,6DAFb;AAGEC,gBAAQ,EAAE,CACR;AACEF,cAAI,EAAE,EADR;AAEEG,oBAAU,EAAE,OAFd;AAGEC,mBAAS,EAAE;AAHb,SADQ,EAMR;AACEJ,cAAI,EAAE,OADR;AAEEC,mBAAS,EAAE,qEAFb;AAGEI,cAAI,EAAE;AAAC7B,qBAAS,EAAE8B,MAAM,CAACC,QAAP,CAAgBC;AAA5B;AAHR,SANQ,EAWR;AACER,cAAI,EAAE,cADR;AAEEC,mBAAS,EAAE;AAFb,SAXQ,EAeR;AACED,cAAI,EAAE,iBADR;AAEEC,mBAAS,EAAE;AAFb,SAfQ,EAmBR;AACED,cAAI,EAAE,QADR;AAEEC,mBAAS,EAAE;AAFb,SAnBQ,EAuBR;AAACD,cAAI,EAAE,EAAP;AAAWG,oBAAU,EAAE,OAAvB;AAAgCC,mBAAS,EAAE;AAA3C,SAvBQ,EAwBR;AAACJ,cAAI,EAAE,IAAP;AAAaG,oBAAU,EAAE,OAAzB;AAAkCC,mBAAS,EAAE;AAA7C,SAxBQ;AAHZ,OADqB,CAAvB;;UAqCaK,iB;;;;;cAAAA;;;;2BAAAA,iB;AAAiB,S;AAAA,kBAHnB,CAAE,6DAAaC,QAAb,CAAsBX,MAAtB,CAAF,CAGmB,EAFjB,4DAEiB;;;;4HAAjBU,iB,EAAiB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEZA,iB,EAAiB;gBAJ7B,sDAI6B;iBAJpB;AACRnF,mBAAO,EAAE,CAAE,6DAAaoF,QAAb,CAAsBX,MAAtB,CAAF,CADD;AAERY,mBAAO,EAAE,CAAE,4DAAF;AAFD,W;AAIoB,U","file":"modules-auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { AuthComponent } from './auth.component';\r\nimport {TranslationModule} from '../i18n/translation.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    ForgotPasswordComponent,\r\n    LogoutComponent,\r\n    AuthComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TranslationModule,\r\n    AuthRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n  ]\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmPasswordValidator } from './confirm-password.validator';\r\nimport { UserModel } from '../_models/user.model';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n\tselector: 'app-registration',\r\n\ttemplateUrl: './registration.component.html',\r\n\tstyleUrls: ['./registration.component.scss'],\r\n})\r\nexport class RegistrationComponent implements OnInit, OnDestroy {\r\n\tregistrationForm: FormGroup;\r\n\thasError: boolean;\r\n\tisLoading$: Observable<boolean>;\r\n\r\n\t// private fields\r\n\tprivate unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n\tconstructor(\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate router: Router\r\n\t) {\r\n\t\tthis.isLoading$ = this.authService.isLoading$;\r\n\t\t// redirect to home if already logged in\r\n\t\tif (this.authService.currentUserValue) {\r\n\t\t\tthis.router.navigate(['/']);\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.initForm();\r\n\t}\r\n\r\n\t// convenience getter for easy access to form fields\r\n\tget f() {\r\n\t\treturn this.registrationForm.controls;\r\n\t}\r\n\r\n\tinitForm() {\r\n\t\tthis.registrationForm = this.fb.group(\r\n\t\t\t{\r\n\t\t\t\tfullname: [\r\n\t\t\t\t\t'',\r\n\t\t\t\t\tValidators.compose([\r\n\t\t\t\t\t\tValidators.required,\r\n\t\t\t\t\t\tValidators.minLength(3),\r\n\t\t\t\t\t\tValidators.maxLength(100),\r\n\t\t\t\t\t]),\r\n\t\t\t\t],\r\n\t\t\t\temail: [\r\n\t\t\t\t\t'qwe@qwe.qwe',\r\n\t\t\t\t\tValidators.compose([\r\n\t\t\t\t\t\tValidators.required,\r\n\t\t\t\t\t\tValidators.email,\r\n\t\t\t\t\t\tValidators.minLength(3),\r\n\t\t\t\t\t\tValidators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n\t\t\t\t\t]),\r\n\t\t\t\t],\r\n\t\t\t\tphone: [\r\n\t\t\t\t\tValidators.compose([Validators.required, Validators.minLength(10)]),\r\n\t\t\t\t],\r\n\t\t\t\tpassword: [\r\n\t\t\t\t\t'',\r\n\t\t\t\t\tValidators.compose([\r\n\t\t\t\t\t\tValidators.required,\r\n\t\t\t\t\t\tValidators.minLength(3),\r\n\t\t\t\t\t\tValidators.maxLength(100),\r\n\t\t\t\t\t]),\r\n\t\t\t\t],\r\n\t\t\t\tcPassword: [\r\n\t\t\t\t\t'',\r\n\t\t\t\t\tValidators.compose([\r\n\t\t\t\t\t\tValidators.required,\r\n\t\t\t\t\t\tValidators.minLength(3),\r\n\t\t\t\t\t\tValidators.maxLength(100),\r\n\t\t\t\t\t]),\r\n\t\t\t\t],\r\n\t\t\t\tagree: [false, Validators.compose([Validators.required])],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tvalidator: ConfirmPasswordValidator.MatchPassword,\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tthis.hasError = false;\r\n\t\tconst result = {};\r\n\t\tObject.keys(this.f).forEach((key) => {\r\n\t\t\tresult[key] = this.f[key].value;\r\n\t\t});\r\n\t\tconst newUser = new UserModel();\r\n\t\tnewUser.setUser(result);\r\n\t\tconst registrationSubscr = this.authService\r\n\t\t\t.registration(newUser)\r\n\t\t\t.pipe(first())\r\n\t\t\t.subscribe((user: UserModel) => {\r\n\t\t\t\tif (user) {\r\n\t\t\t\t\tthis.router.navigate(['/']);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.hasError = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.unsubscribe.push(registrationSubscr);\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n\t}\r\n}\r\n","<!--begin::Signup-->\r\n<div class=\"login-form login-signup\">\r\n\t<!--begin::Form-->\r\n\t<form\r\n\t\tclass=\"form\"\r\n\t\tnovalidate=\"novalidate\"\r\n\t\tid=\"kt_login_signup_form\"\r\n\t\t[formGroup]=\"registrationForm\"\r\n\t\t(ngSubmit)=\"submit()\"\r\n\t>\r\n\t\t<!--begin::Title-->\r\n\t\t<div class=\"pb-13 pt-lg-0 pt-5\">\r\n\t\t\t<h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\r\n\t\t\t\tSign Up\r\n\t\t\t</h3>\r\n\t\t\t<p class=\"text-muted font-weight-bold font-size-h4\">\r\n\t\t\t\tEnter your details to create your account\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<!--end::Title-->\r\n\r\n\t\t<!-- begin::Alert error-->\r\n\t\t<ng-container *ngIf=\"hasError\">\r\n\t\t\t<div\r\n\t\t\t\tclass=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\r\n\t\t\t>\r\n\t\t\t\t<div class=\"alert-text\">The registration details are incorrect</div>\r\n\t\t\t</div>\r\n\t\t</ng-container>\r\n\t\t<!-- end::Alert error-->\r\n\r\n\t\t<!--begin::Form group-->\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label class=\"font-size-h6 font-weight-bolder text-dark\">Fullname</label>\r\n\t\t\t<input\r\n\t\t\t\tclass=\"\r\n\t\t\t\t\tform-control form-control-solid\r\n\t\t\t\t\th-auto\r\n\t\t\t\t\tpy-7\r\n\t\t\t\t\tpx-6\r\n\t\t\t\t\trounded-lg\r\n\t\t\t\t\tfont-size-h6\r\n\t\t\t\t\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"fullname\"\r\n\t\t\t\tformControlName=\"fullname\"\r\n\t\t\t\tplaceholder=\"Fullname\"\r\n\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t[ngClass]=\"{\r\n\t\t\t\t\t'is-invalid': registrationForm.controls['fullname'].invalid\r\n\t\t\t\t}\"\r\n\t\t\t/>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'required',\r\n\t\t\t\t\tmessage: 'Fullname is required',\r\n\t\t\t\t\tcontrol: registrationForm.controls['fullname']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'minlength',\r\n\t\t\t\t\tmessage: 'Fullname should have at least 3 symbols',\r\n\t\t\t\t\tcontrol: registrationForm.controls['fullname']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'maxLength',\r\n\t\t\t\t\tmessage: 'Fullname should have maximum 100 symbols',\r\n\t\t\t\t\tcontrol: registrationForm.controls['fullname']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t</div>\r\n\t\t<!--end::Form group-->\r\n\r\n\t\t<!--begin::Form group-->\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label class=\"font-size-h6 font-weight-bolder text-dark\">Email</label>\r\n\t\t\t<input\r\n\t\t\t\tclass=\"\r\n\t\t\t\t\tform-control form-control-solid\r\n\t\t\t\t\th-auto\r\n\t\t\t\t\tpy-7\r\n\t\t\t\t\tpx-6\r\n\t\t\t\t\trounded-lg\r\n\t\t\t\t\tfont-size-h6\r\n\t\t\t\t\"\r\n\t\t\t\ttype=\"email\"\r\n\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\tname=\"email\"\r\n\t\t\t\tformControlName=\"email\"\r\n\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t[ngClass]=\"{ 'is-invalid': registrationForm.controls['email'].invalid }\"\r\n\t\t\t/>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'email',\r\n\t\t\t\t\tmessage: 'Email is invalid',\r\n\t\t\t\t\tcontrol: registrationForm.controls['email']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'minlength',\r\n\t\t\t\t\tmessage: 'Email should have at least 3 symbols',\r\n\t\t\t\t\tcontrol: registrationForm.controls['email']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'maxLength',\r\n\t\t\t\t\tmessage: 'Email should have maximum 360 symbols',\r\n\t\t\t\t\tcontrol: registrationForm.controls['email']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t</div>\r\n\t\t<!--end::Form group-->\r\n\r\n\t\t<!--begin::Form group-->\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label class=\"font-size-h6 font-weight-bolder text-dark\">Phone</label>\r\n\t\t\t<input\r\n\t\t\t\tclass=\"\r\n\t\t\t\t\tform-control form-control-solid\r\n\t\t\t\t\th-auto\r\n\t\t\t\t\tpy-7\r\n\t\t\t\t\tpx-6\r\n\t\t\t\t\trounded-lg\r\n\t\t\t\t\tfont-size-h6\r\n\t\t\t\t\"\r\n\t\t\t\ttype=\"tel\"\r\n\t\t\t\tplaceholder=\"Phone\"\r\n\t\t\t\tname=\"phone\"\r\n\t\t\t\tformControlName=\"phone\"\r\n\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t[ngClass]=\"{ 'is-invalid': registrationForm.controls['phone'].invalid }\"\r\n\t\t\t/>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'required',\r\n\t\t\t\t\tmessage: 'Phone is required',\r\n\t\t\t\t\tcontrol: registrationForm.controls['phone']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'tel',\r\n\t\t\t\t\tmessage: 'Phone is invalid',\r\n\t\t\t\t\tcontrol: registrationForm.controls['phone']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'minlength',\r\n\t\t\t\t\tmessage: 'Phone should have at least 10 symbols',\r\n\t\t\t\t\tcontrol: registrationForm.controls['phone']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t</div>\r\n\t\t<!--end::Form group-->\r\n\r\n\t\t<!--begin::Form group-->\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\r\n\t\t\t\t>Password</label\r\n\t\t\t>\r\n\t\t\t<input\r\n\t\t\t\tclass=\"\r\n\t\t\t\t\tform-control form-control-solid\r\n\t\t\t\t\th-auto\r\n\t\t\t\t\tpy-7\r\n\t\t\t\t\tpx-6\r\n\t\t\t\t\trounded-lg\r\n\t\t\t\t\tfont-size-h6\r\n\t\t\t\t\"\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\tname=\"password\"\r\n\t\t\t\tformControlName=\"password\"\r\n\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t[ngClass]=\"{\r\n\t\t\t\t\t'is-invalid': registrationForm.controls['password'].invalid\r\n\t\t\t\t}\"\r\n\t\t\t/>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'required',\r\n\t\t\t\t\tmessage: 'Password is required',\r\n\t\t\t\t\tcontrol: registrationForm.controls['password']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'minlength',\r\n\t\t\t\t\tmessage: 'Password should have at least 3 symbols',\r\n\t\t\t\t\tcontrol: registrationForm.controls['password']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'maxLength',\r\n\t\t\t\t\tmessage: 'Password should have maximum 100 symbols',\r\n\t\t\t\t\tcontrol: registrationForm.controls['password']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t</div>\r\n\t\t<!--end::Form group-->\r\n\r\n\t\t<!--begin::Form group-->\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\r\n\t\t\t\t>Confirm Password</label\r\n\t\t\t>\r\n\t\t\t<input\r\n\t\t\t\tclass=\"\r\n\t\t\t\t\tform-control form-control-solid\r\n\t\t\t\t\th-auto\r\n\t\t\t\t\tpy-7\r\n\t\t\t\t\tpx-6\r\n\t\t\t\t\trounded-lg\r\n\t\t\t\t\tfont-size-h6\r\n\t\t\t\t\"\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tplaceholder=\"Confirm password\"\r\n\t\t\t\tname=\"cPassword\"\r\n\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\tformControlName=\"cPassword\"\r\n\t\t\t\t[ngClass]=\"{\r\n\t\t\t\t\t'is-invalid': registrationForm.controls['cPassword'].invalid\r\n\t\t\t\t}\"\r\n\t\t\t/>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'required',\r\n\t\t\t\t\tmessage: 'Confirm Password is required',\r\n\t\t\t\t\tcontrol: registrationForm.controls['cPassword']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'minlength',\r\n\t\t\t\t\tmessage: 'Confirm Password should have at least 3 symbols',\r\n\t\t\t\t\tcontrol: registrationForm.controls['cPassword']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'maxLength',\r\n\t\t\t\t\tmessage: 'Confirm Password should have maximum 100 symbols',\r\n\t\t\t\t\tcontrol: registrationForm.controls['cPassword']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t\t<ng-container\r\n\t\t\t\t*ngIf=\"\r\n\t\t\t\t\tregistrationForm.controls['cPassword'].errors &&\r\n\t\t\t\t\tregistrationForm.controls['cPassword'].errors.ConfirmPassword\r\n\t\t\t\t\"\r\n\t\t\t>\r\n\t\t\t\t<div class=\"fv-plugins-message-container\">\r\n\t\t\t\t\t<div class=\"fv-help-block\">\r\n\t\t\t\t\t\t'Passsword' and 'Confirm Password' didn't match.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</ng-container>\r\n\t\t</div>\r\n\t\t<!--end::Form group-->\r\n\r\n\t\t<!--begin::Form group-->\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label class=\"checkbox mb-0\">\r\n\t\t\t\t<input type=\"checkbox\" formControlName=\"agree\" name=\"agree\" />&nbsp;I\r\n\t\t\t\tAgree the&nbsp;<a\r\n\t\t\t\t\thref=\"https://keenthemes.com/metronic/?page=faq\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t>terms and conditions</a\r\n\t\t\t\t>.&nbsp;\r\n\t\t\t\t<span></span>\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t\t<!--end::Form group-->\r\n\r\n\t\t<!--begin::Form group-->\r\n\t\t<div class=\"form-group d-flex flex-wrap pb-lg-0 pb-3\">\r\n\t\t\t<button\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tid=\"kt_login_signup_submit\"\r\n\t\t\t\t[disabled]=\"\r\n\t\t\t\t\tregistrationForm.invalid || !registrationForm.controls['agree'].value\r\n\t\t\t\t\"\r\n\t\t\t\tclass=\"\r\n\t\t\t\t\tbtn btn-primary\r\n\t\t\t\t\tfont-weight-bolder font-size-h6\r\n\t\t\t\t\tpx-8\r\n\t\t\t\t\tpy-4\r\n\t\t\t\t\tmy-3\r\n\t\t\t\t\tmr-4\r\n\t\t\t\t\"\r\n\t\t\t>\r\n\t\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\t\t<a\r\n\t\t\t\trouterLink=\"/auth/login\"\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tid=\"kt_login_signup_cancel\"\r\n\t\t\t\tclass=\"\r\n\t\t\t\t\tbtn btn-light-primary\r\n\t\t\t\t\tfont-weight-bolder font-size-h6\r\n\t\t\t\t\tpx-8\r\n\t\t\t\t\tpy-4\r\n\t\t\t\t\tmy-3\r\n\t\t\t\t\"\r\n\t\t\t>\r\n\t\t\t\tCancel\r\n\t\t\t</a>\r\n\r\n\t\t\t<ng-container *ngIf=\"isLoading$ | async\">\r\n\t\t\t\t<span class=\"spinner spinner-primary ml-5\"></span>\r\n\t\t\t</ng-container>\r\n\t\t</div>\r\n\t\t<!--end::Form group-->\r\n\t</form>\r\n\t<!--end::Form-->\r\n</div>\r\n<!--end::Signup-->\r\n\r\n<ng-template\r\n\t#formError\r\n\tlet-control=\"control\"\r\n\tlet-message=\"message\"\r\n\tlet-validation=\"validation\"\r\n>\r\n\t<ng-container\r\n\t\t*ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n\t>\r\n\t\t<div class=\"fv-plugins-message-container\">\r\n\t\t\t<div class=\"fv-help-block\">\r\n\t\t\t\t{{ message }}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</ng-container>\r\n</ng-template>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { UserModel } from '../_models/user.model';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-login',\r\n\ttemplateUrl: './login.component.html',\r\n\tstyleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\tdefaultAuth = {\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t};\r\n\tloginForm: FormGroup;\r\n\thasError: boolean;\r\n\treturnUrl: string;\r\n\tisLoading$: Observable<boolean>;\r\n\r\n\t// private fields\r\n\tprivate unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n\tconstructor(\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate router: Router\r\n\t) {\r\n\t\tthis.isLoading$ = this.authService.isLoading$;\r\n\t\t// redirect to home if already logged in\r\n\t\tif (this.authService.currentUserValue) {\r\n\t\t\tthis.router.navigate(['/']);\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.initForm();\r\n\t\t// get return url from route parameters or default to '/'\r\n\t\tthis.returnUrl =\r\n\t\t\tthis.route.snapshot.queryParams['returnUrl'.toString()] || '/';\r\n\t}\r\n\r\n\t// convenience getter for easy access to form fields\r\n\tget f() {\r\n\t\treturn this.loginForm.controls;\r\n\t}\r\n\r\n\tinitForm() {\r\n\t\tthis.loginForm = this.fb.group({\r\n\t\t\tusername: [\r\n\t\t\t\tthis.defaultAuth.username,\r\n\t\t\t\tValidators.compose([\r\n\t\t\t\t\tValidators.required,\r\n\t\t\t\t\tValidators.pattern(\r\n\t\t\t\t\t\t/^(\\+?\\d{10,13}|\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3}))$/\r\n\t\t\t\t\t),\r\n\t\t\t\t]),\r\n\t\t\t],\r\n\t\t\tpassword: [\r\n\t\t\t\tthis.defaultAuth.password,\r\n\t\t\t\tValidators.compose([\r\n\t\t\t\t\tValidators.required,\r\n\t\t\t\t\tValidators.minLength(3),\r\n\t\t\t\t\tValidators.maxLength(100),\r\n\t\t\t\t]),\r\n\t\t\t],\r\n\t\t});\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tthis.hasError = false;\r\n\t\tconst loginSubscr = this.authService\r\n\t\t\t.login(this.f.username.value, this.f.password.value)\r\n\t\t\t.pipe(first())\r\n\t\t\t.subscribe((user: UserModel) => {\r\n\t\t\t\tif (user) {\r\n\t\t\t\t\tthis.router.navigate([this.returnUrl]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.hasError = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis.unsubscribe.push(loginSubscr);\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n\t}\r\n}\r\n","<!--begin::Signin-->\r\n<div class=\"login-form login-signin\">\r\n\t<!--begin::Form-->\r\n\t<form\r\n\t\tclass=\"form\"\r\n\t\t[formGroup]=\"loginForm\"\r\n\t\tnovalidate=\"novalidate\"\r\n\t\tid=\"kt_login_signin_form\"\r\n\t\t(ngSubmit)=\"submit()\"\r\n\t>\r\n\t\t<!--begin::Title-->\r\n\t\t<div class=\"pb-13 pt-lg-0 pt-5\">\r\n\t\t\t<h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\r\n\t\t\t\tWelcome to Capri Traders!\r\n\t\t\t</h3>\r\n\t\t</div>\r\n\t\t<!--end::Title-->\r\n\r\n\t\t<!-- begin::Alert error-->\r\n\t\t<ng-container *ngIf=\"hasError\">\r\n\t\t\t<div\r\n\t\t\t\tclass=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\r\n\t\t\t>\r\n\t\t\t\t<div class=\"alert-text\">The login details are incorrect</div>\r\n\t\t\t</div>\r\n\t\t</ng-container>\r\n\t\t<!-- end::Alert error-->\r\n\r\n\t\t<!--begin::Form group-->\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label class=\"font-size-h6 font-weight-bolder text-dark\"\r\n\t\t\t\t>Email or Phone</label\r\n\t\t\t>\r\n\t\t\t<input\r\n\t\t\t\tclass=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"username\"\r\n\t\t\t\tformControlName=\"username\"\r\n\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t[ngClass]=\"{ 'is-invalid': loginForm.controls['username'].invalid }\"\r\n\t\t\t/>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'required',\r\n\t\t\t\t\tmessage: 'Email or Phone is required',\r\n\t\t\t\t\tcontrol: loginForm.controls['username']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t</div>\r\n\t\t<!--end::Form group-->\r\n\r\n\t\t<!--begin::Form group-->\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<div class=\"d-flex justify-content-between mt-n5\">\r\n\t\t\t\t<label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\r\n\t\t\t\t\t>Password</label\r\n\t\t\t\t>\r\n\t\t\t</div>\r\n\r\n\t\t\t<input\r\n\t\t\t\tclass=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg\"\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tname=\"password\"\r\n\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\tformControlName=\"password\"\r\n\t\t\t\t[ngClass]=\"{ 'is-invalid': loginForm.controls['password'].invalid }\"\r\n\t\t\t/>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'required',\r\n\t\t\t\t\tmessage: 'Password is required',\r\n\t\t\t\t\tcontrol: loginForm.controls['password']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'minlength',\r\n\t\t\t\t\tmessage: 'Password should have at least 3 symbols',\r\n\t\t\t\t\tcontrol: loginForm.controls['password']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t\t<ng-container\r\n\t\t\t\t[ngTemplateOutlet]=\"formError\"\r\n\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\tvalidation: 'maxLength',\r\n\t\t\t\t\tmessage: 'Password should have maximum 100 symbols',\r\n\t\t\t\t\tcontrol: loginForm.controls['password']\r\n\t\t\t\t}\"\r\n\t\t\t></ng-container>\r\n\t\t</div>\r\n\t\t<!--end::Form group-->\r\n\r\n\t\t<!--begin::Action-->\r\n\t\t<div class=\"pb-lg-0 pb-5\">\r\n\t\t\t<button\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tid=\"kt_login_signin_submit\"\r\n\t\t\t\tclass=\"\r\n\t\t\t\t\tbtn btn-primary\r\n\t\t\t\t\tfont-weight-bolder font-size-h6\r\n\t\t\t\t\tpx-8\r\n\t\t\t\t\tpy-4\r\n\t\t\t\t\tmy-3\r\n\t\t\t\t\tmr-3\r\n\t\t\t\t\"\r\n\t\t\t\t[disabled]=\"loginForm.invalid\"\r\n\t\t\t>\r\n\t\t\t\tSign In\r\n\t\t\t</button>\r\n\r\n\t\t\t<ng-container *ngIf=\"isLoading$ | async\">\r\n\t\t\t\t<span class=\"spinner spinner-primary ml-5\"></span>\r\n\t\t\t</ng-container>\r\n\t\t</div>\r\n\t\t<!--end::Action-->\r\n\t</form>\r\n\t<!--end::Form-->\r\n</div>\r\n<!--end::Signin-->\r\n\r\n<ng-template\r\n\t#formError\r\n\tlet-control=\"control\"\r\n\tlet-message=\"message\"\r\n\tlet-validation=\"validation\"\r\n>\r\n\t<ng-container\r\n\t\t*ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n\t>\r\n\t\t<div class=\"fv-plugins-message-container\">\r\n\t\t\t<div class=\"fv-help-block\">\r\n\t\t\t\t{{ message }}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</ng-container>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n\tselector: 'app-logout',\r\n\ttemplateUrl: './logout.component.html',\r\n\tstyleUrls: ['./logout.component.scss'],\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\tconstructor(private authService: AuthService) {\r\n\t\tthis.authService.logout();\r\n\t}\r\n\r\n\tngOnInit(): void {}\r\n}\r\n","<p>logout works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-auth',\r\n\ttemplateUrl: './auth.component.html',\r\n\tstyleUrls: ['./auth.component.scss'],\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\ttoday: Date = new Date();\r\n\r\n\tconstructor() {}\r\n\r\n\tngOnInit(): void {}\r\n}\r\n","<div class=\"d-flex flex-column flex-root h-100\" id=\"kt_login_wrapper\">\r\n\t<!--begin::Login-->\r\n\t<div\r\n\t\tclass=\"login login-1 login-signin-on d-flex flex-column flex-lg-row flex-column-fluid bg-white\"\r\n\t\tid=\"kt_login\"\r\n\t>\r\n\t\t<!--begin::Aside-->\r\n\t\t<div\r\n\t\t\tclass=\"login-aside d-flex flex-column flex-row-auto\"\r\n\t\t\tstyle=\"background-color: #eee5ff\"\r\n\t\t>\r\n\t\t\t<!--begin::Aside Top-->\r\n\t\t\t<div class=\"d-flex flex-column-auto flex-column pt-lg-40 pt-15\">\r\n\t\t\t\t<!--begin::Aside header-->\r\n\t\t\t\t<a href=\"#\" class=\"text-center mb-10\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc=\"./assets/media/logos/square.png\"\r\n\t\t\t\t\t\tclass=\"max-h-70px\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</a>\r\n\t\t\t\t<!--end::Aside header-->\r\n\r\n\t\t\t\t<!--begin::Aside title-->\r\n\t\t\t\t<h3\r\n\t\t\t\t\tclass=\"font-weight-bolder text-center font-size-h4 font-size-h1-lg\"\r\n\t\t\t\t\tstyle=\"color: #8950fc\"\r\n\t\t\t\t>\r\n\t\t\t\t\tGrocery at your door step!\r\n\t\t\t\t</h3>\r\n\t\t\t\t<!--end::Aside title-->\r\n\t\t\t</div>\r\n\t\t\t<!--end::Aside Top-->\r\n\r\n\t\t\t<!--begin::Aside Bottom-->\r\n\t\t\t<div\r\n\t\t\t\tclass=\"aside-img d-flex flex-row-fluid bgi-no-repeat bgi-position-y-bottom bgi-position-x-center\"\r\n\t\t\t\tstyle=\"\r\n\t\t\t\t\tbackground-image: url('./assets/media/svg/illustrations/login-visual-1.svg');\r\n\t\t\t\t\"\r\n\t\t\t></div>\r\n\t\t\t<!--end::Aside Bottom-->\r\n\t\t</div>\r\n\t\t<!--begin::Aside-->\r\n\r\n\t\t<!--begin::Content-->\r\n\t\t<div\r\n\t\t\tclass=\"login-content flex-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden p-7 mx-auto\"\r\n\t\t>\r\n\t\t\t<!--begin::Content body-->\r\n\t\t\t<div class=\"d-flex flex-column-fluid flex-center\">\r\n\t\t\t\t<router-outlet></router-outlet>\r\n\t\t\t</div>\r\n\t\t\t<!--end::Content body-->\r\n\r\n\t\t\t<!--begin::Content footer-->\r\n\t\t\t<div\r\n\t\t\t\tclass=\"d-flex justify-content-lg-start justify-content-center align-items-end py-7 py-lg-0\"\r\n\t\t\t>\r\n\t\t\t\t<a class=\"text-primary font-weight-bolder font-size-h5\"\r\n\t\t\t\t\t>© 2020 Dastak</a\r\n\t\t\t\t>\r\n\t\t\t</div>\r\n\t\t\t<!--end::Content footer-->\r\n\t\t</div>\r\n\t\t<!--end::Content-->\r\n\t</div>\r\n\t<!--end::Login-->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { first } from 'rxjs/operators';\r\n\r\nenum ErrorStates {\r\n  NotSubmitted,\r\n  HasError,\r\n  NoError,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgotPasswordForm: FormGroup;\r\n  errorState: ErrorStates = ErrorStates.NotSubmitted;\r\n  errorStates = ErrorStates;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.forgotPasswordForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.forgotPasswordForm = this.fb.group({\r\n      email: [\r\n        'admin@demo.com',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.errorState = ErrorStates.NotSubmitted;\r\n    const forgotPasswordSubscr = this.authService\r\n      .forgotPassword(this.f.email.value)\r\n      .pipe(first())\r\n      .subscribe((result: boolean) => {\r\n        this.errorState = result ? ErrorStates.NoError : ErrorStates.HasError;\r\n      });\r\n    this.unsubscribe.push(forgotPasswordSubscr);\r\n  }\r\n}\r\n","<div class=\"login-form login-forgot\">\r\n  <!--begin::Form-->\r\n  <form\r\n    class=\"form fv-plugins-bootstrap fv-plugins-framework\"\r\n    novalidate=\"novalidate\"\r\n    [formGroup]=\"forgotPasswordForm\"\r\n    (ngSubmit)=\"submit()\"\r\n    id=\"kt_login_forgot_form\"\r\n    [ngStyle]=\"{\r\n      display: errorState === errorStates.NoError ? 'none' : 'block'\r\n    }\"\r\n  >\r\n    <!--begin::Title-->\r\n    <div class=\"pb-13 pt-lg-0 pt-5\">\r\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\r\n        Forgotten Password ?\r\n      </h3>\r\n      <p class=\"text-muted font-weight-bold font-size-h4\">\r\n        Enter your email to reset your password\r\n      </p>\r\n    </div>\r\n    <!--end::Title-->\r\n\r\n    <!-- begin::Alert error-->\r\n    <ng-container *ngIf=\"errorState === errorStates.HasError\">\r\n      <div\r\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\r\n      >\r\n        <div class=\"alert-text\">The email detail is incorrect</div>\r\n      </div>\r\n    </ng-container>\r\n    <!-- end::Alert error-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group fv-plugins-icon-container has-danger\">\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\r\n        type=\"email\"\r\n        formControlName=\"email\"\r\n        placeholder=\"Email\"\r\n        name=\"email\"\r\n        autocomplete=\"off\"\r\n        [ngClass]=\"{\r\n          'is-invalid': forgotPasswordForm.controls['email'].invalid\r\n        }\"\r\n      />\r\n\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Email is required',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'email',\r\n          message: 'Email is invalid',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minLength',\r\n          message: 'Email should have at least 3 symbols',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Email should have maximum 360 symbols',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group d-flex flex-wrap pb-lg-0\">\r\n      <button\r\n        type=\"submit\"\r\n        id=\"kt_login_forgot_submit\"\r\n        class=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-4\"\r\n      >\r\n        Submit\r\n      </button>\r\n      <a\r\n        routerLink=\"/auth/login\"\r\n        id=\"kt_login_forgot_cancel\"\r\n        class=\"btn btn-light-primary font-weight-bolder font-size-h6 px-8 py-4 my-3\"\r\n      >\r\n        Cancel\r\n      </a>\r\n\r\n      <ng-container *ngIf=\"isLoading$ | async\">\r\n        <span class=\"spinner spinner-primary ml-5\"></span>\r\n      </ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n    <div></div>\r\n  </form>\r\n  <!--end::Form-->\r\n\r\n  <ng-container *ngIf=\"errorState === errorStates.NoError\">\r\n    <div\r\n      class=\"card card-custom bgi-no-repeat gutter-b\"\r\n      style=\"\r\n        height: 175px;\r\n        background-color: #4ab58e;\r\n        background-position: calc(100% + 1rem) bottom;\r\n        background-size: 25% auto;\r\n        background-image: url(assets/media/svg/humans/custom-1.svg);\r\n      \"\r\n    >\r\n      <!--begin::Body-->\r\n      <div class=\"card-body d-flex align-items-center\">\r\n        <div class=\"py-2\">\r\n          <h3 class=\"text-white font-weight-bolder mb-3\">Email is correct!</h3>\r\n          <p class=\"text-white font-size-lg\">\r\n            Message with 'recovery' instruction<br />\r\n            has been sent<br />\r\n          </p>\r\n          <a\r\n            routerLink=\"/auth/login\"\r\n            class=\"swal2-confirm btn font-weight-bold btn-light-primary\"\r\n          >\r\n            Ok, got it!\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!--end::Body-->\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n<ng-template\r\n  #formError\r\n  let-control=\"control\"\r\n  let-message=\"message\"\r\n  let-validation=\"validation\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n  >\r\n    <div class=\"fv-plugins-message-container\">\r\n      <div class=\"fv-help-block\">\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {AuthComponent} from './auth.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegistrationComponent} from './registration/registration.component';\r\nimport {ForgotPasswordComponent} from './forgot-password/forgot-password.component';\r\nimport {LogoutComponent} from './logout/logout.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'login',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        data: {returnUrl: window.location.pathname}\r\n      },\r\n      {\r\n        path: 'registration',\r\n        component: RegistrationComponent\r\n      },\r\n      {\r\n        path: 'forgot-password',\r\n        component: ForgotPasswordComponent\r\n      },\r\n      {\r\n        path: 'logout',\r\n        component: LogoutComponent\r\n      },\r\n      {path: '', redirectTo: 'login', pathMatch: 'full'},\r\n      {path: '**', redirectTo: 'login', pathMatch: 'full'},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AuthRoutingModule {}\r\n"]}
{"version":3,"sources":["webpack:///src/app/pages/banners/add/add.component.ts","webpack:///src/app/pages/banners/add/add.component.html","webpack:///src/app/services/banners.service.ts","webpack:///src/app/pages/banners/banners.module.ts","webpack:///src/app/pages/banners/banners.component.ts","webpack:///src/app/pages/banners/banners.component.html"],"names":["AddComponent","dialogRef","data","banner","imageChangedEvent","croppedImage","title","mode","event","image","base64","image_url","close","isEdit","onSubmit","fileChangeEvent","selector","templateUrl","styleUrls","BannersService","httpClient","get","apiUrl","post","patch","id","providedIn","BannersModule","forChild","path","component","declarations","imports","entryComponents","BannersComponent","bannersService","commonService","cdr","dialog","displayedColumns","banners","loaded","getBanners","subscribe","response","renderBanners","detectChanges","open","width","disableClose","afterClosed","res","addBanner","push","openSnackBar","message","error","dataSource","paginator","Banner","updateBanner","index","confirm","deleteBanner","splice"],"mappings":"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","file":"banners-banners-module-es5.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\r\n\r\n@Component({\r\n\tselector: 'app-add',\r\n\ttemplateUrl: './add.component.html',\r\n\tstyleUrls: ['./add.component.scss'],\r\n})\r\nexport class AddComponent implements OnInit {\r\n\ttitle: string;\r\n\tmode: string;\r\n\tbanner: any = {};\r\n\r\n\timageChangedEvent: any = '';\r\n\tcroppedImage: any = '';\r\n\tconstructor(\r\n\t\tpublic dialogRef: MatDialogRef<AddComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tif (this.data && this.data.banner) {\r\n\t\t\tthis.banner = this.data.banner;\r\n\t\t\tthis.title = 'Update banner';\r\n\t\t\tthis.mode = 'Update';\r\n\t\t} else {\r\n\t\t\tthis.title = 'Add banner';\r\n\t\t\tthis.mode = 'Add';\r\n\t\t}\r\n\t}\r\n\r\n\tfileChangeEvent(event: any): void {\r\n\t\tthis.imageChangedEvent = event;\r\n\t\tthis.banner.image = '';\r\n\t}\r\n\timageCropped(event: ImageCroppedEvent) {\r\n\t\tthis.banner.image = event.base64;\r\n\t\tthis.banner.image_url = event.base64;\r\n\t}\r\n\r\n\timageChanged() {\r\n\t\tthis.banner.image = '';\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tthis.dialogRef.close({ banner: this.banner, isEdit: false });\r\n\t}\r\n}\r\n","<form (ngSubmit)=\"onSubmit()\" #f=\"ngForm\">\r\n\t<div class=\"card card-custom\">\r\n\t\t<div class=\"card-header\">\r\n\t\t\t<div class=\"card-title\">{{ title }}</div>\r\n\t\t</div>\r\n\t\t<div class=\"card-body\">\r\n\t\t\t<div class=\"form-group row\">\r\n\t\t\t\t<div class=\"col-lg-4 kt-margin-bottom-20-mobile\">\r\n\t\t\t\t\t<input type=\"file\" (change)=\"fileChangeEvent($event)\" name=\"image\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\r\n\t\t\t<div\r\n\t\t\t\tclass=\"row images\"\r\n\t\t\t\t*ngIf=\"banner.image || banner.image_url || imageChangedEvent\"\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"col-lg-6 kt-margin-bottom-20-mobile\"\r\n\t\t\t\t\t*ngIf=\"imageChangedEvent\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<h3 *ngIf=\"imageChangedEvent\">Selected Image:</h3>\r\n\t\t\t\t\t<image-cropper\r\n\t\t\t\t\t\t[imageChangedEvent]=\"imageChangedEvent\"\r\n\t\t\t\t\t\t[maintainAspectRatio]=\"true\"\r\n\t\t\t\t\t\t[aspectRatio]=\"4 / 2\"\r\n\t\t\t\t\t\t[cropperMinWidth]=\"200\"\r\n\t\t\t\t\t\tformat=\"png\"\r\n\t\t\t\t\t\t(imageCropped)=\"imageCropped($event)\"\r\n\t\t\t\t\t></image-cropper>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-6 kt-margin-bottom-20-mobile\">\r\n\t\t\t\t\t<h3>{{ imageChangedEvent ? 'Cropped Image:' : 'banner' }}</h3>\r\n\t\t\t\t\t<div class=\"imagePreview\" *ngIf=\"banner.image\">\r\n\t\t\t\t\t\t<img [src]=\"banner.image\" class=\"img-fluid\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"imagePreview\" *ngIf=\"banner.image_url && !banner.image\">\r\n\t\t\t\t\t\t<img [src]=\"banner.image_url\" class=\"img-fluid\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"card-footer\">\r\n\t\t\t<button type=\"button\" mat-raised-button mat-dialog-close cdkFocusInitial>\r\n\t\t\t\tCancel</button\r\n\t\t\t>&nbsp;\r\n\t\t\t<button\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tmat-raised-button\r\n\t\t\t\tclass=\"mr-2\"\r\n\t\t\t\t[disabled]=\"f.invalid || (f.pristine && !banner.image)\"\r\n\t\t\t>\r\n\t\t\t\t{{ mode }}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n</form>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class BannersService {\r\n\tconstructor(private httpClient: HttpClient) {}\r\n\r\n\tgetBanners() {\r\n\t\treturn this.httpClient.get(`${environment.apiUrl}banners`);\r\n\t}\r\n\r\n\taddBanner(banner) {\r\n\t\treturn this.httpClient.post(`${environment.apiUrl}banners`, banner);\r\n\t}\r\n\r\n\tupdateBanner(banner) {\r\n\t\treturn this.httpClient.patch(\r\n\t\t\t`${environment.apiUrl}banners/` + banner.id,\r\n\t\t\tbanner\r\n\t\t);\r\n\t}\r\n\r\n\tdeleteBanner(id) {\r\n\t\treturn this.httpClient.delete(`${environment.apiUrl}banners/` + id);\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BannersComponent } from './banners.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ImageCropperModule } from 'ngx-image-cropper';\r\n\r\nimport { GeneralModule } from 'src/app/_metronic/partials/content/general/general.module';\r\nimport { AddComponent } from './add/add.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ConfirmationDialogComponent } from '../_sharedComponents/confirmation-dialog/confirmation-dialog.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [BannersComponent, AddComponent],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tGeneralModule,\r\n\t\tMatButtonModule,\r\n\t\tMatTableModule,\r\n\t\tMatPaginatorModule,\r\n\t\tMatIconModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tFormsModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatDialogModule,\r\n\t\tImageCropperModule,\r\n\t\tRouterModule.forChild([\r\n\t\t\t{\r\n\t\t\t\tpath: '',\r\n\t\t\t\tcomponent: BannersComponent,\r\n\t\t\t},\r\n\t\t]),\r\n\t],\r\n\tentryComponents: [AddComponent, ConfirmationDialogComponent],\r\n})\r\nexport class BannersModule {}\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AddComponent } from './add/add.component';\r\nimport { BannersService } from 'src/app/services/banners.service';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { ConfirmationDialogComponent } from '../_sharedComponents/confirmation-dialog/confirmation-dialog.component';\r\n\r\n@Component({\r\n\tselector: 'app-banners',\r\n\ttemplateUrl: './banners.component.html',\r\n\tstyleUrls: ['./banners.component.scss'],\r\n})\r\nexport class BannersComponent implements OnInit {\r\n\t@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n\tdataSource: any;\r\n\tdisplayedColumns = ['image', 'actions'];\r\n\tbanners: any[] = [];\r\n\tloaded = false;\r\n\r\n\tconstructor(\r\n\t\tprivate bannersService: BannersService,\r\n\t\tprivate commonService: CommonService,\r\n\t\tprivate cdr: ChangeDetectorRef,\r\n\t\tpublic dialog: MatDialog\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.bannersService.getBanners().subscribe((response: any) => {\r\n\t\t\tthis.banners = response.banners;\r\n\t\t\tthis.renderBanners();\r\n\t\t\tthis.loaded = true;\r\n\t\t\tthis.cdr.detectChanges();\r\n\t\t});\r\n\t}\r\n\r\n\taddBanner() {\r\n\t\tconst dialogRef = this.dialog.open(AddComponent, {\r\n\t\t\twidth: '440px',\r\n\t\t\tdisableClose: true,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((res) => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.bannersService.addBanner(res.banner).subscribe(\r\n\t\t\t\t(response: any) => {\r\n\t\t\t\t\tthis.banners.push(response.banner);\r\n\t\t\t\t\tthis.commonService.openSnackBar(response.message);\r\n\t\t\t\t\tthis.renderBanners();\r\n\t\t\t\t},\r\n\t\t\t\t({ error }) => {\r\n\t\t\t\t\tthis.commonService.openSnackBar(error.message, 4000);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\trenderBanners() {\r\n\t\tthis.dataSource = new MatTableDataSource(this.banners);\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t}\r\n\r\n\teditBanner(Banner: any) {\r\n\t\tconst dialogRef = this.dialog.open(AddComponent, {\r\n\t\t\tdata: { banner: Banner },\r\n\t\t\twidth: '440px',\r\n\t\t\tdisableClose: true,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((res) => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.bannersService.updateBanner(res.banner).subscribe(\r\n\t\t\t\t(response: any) => {\r\n\t\t\t\t\tBanner = res.banner;\r\n\t\t\t\t\tthis.commonService.openSnackBar(response.message);\r\n\t\t\t\t\tthis.renderBanners();\r\n\t\t\t\t},\r\n\t\t\t\t({ error }) => {\r\n\t\t\t\t\tthis.commonService.openSnackBar(error.message, 4000);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteBanner(id, index) {\r\n\t\tconst dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n\t\t\tdata: { title: 'Delete banner', message: 'Are you sure?' },\r\n\t\t\twidth: '440px',\r\n\t\t\tdisableClose: true,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((res) => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (res.confirm) {\r\n\t\t\t\tthis.bannersService.deleteBanner(id).subscribe(\r\n\t\t\t\t\t(response: any) => {\r\n\t\t\t\t\t\tthis.banners.splice(index, 1);\r\n\t\t\t\t\t\tthis.renderBanners();\r\n\t\t\t\t\t\tthis.commonService.openSnackBar(response.message);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t({ error }) => {\r\n\t\t\t\t\t\tthis.commonService.openSnackBar(error.message, 4000);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","<div class=\"card card-custom\">\r\n\t<div class=\"card-header\">\r\n\t\t<div class=\"card-title\">\r\n\t\t\t<h3>Banners</h3>\r\n\t\t</div>\r\n\t\t<div class=\"card-toolbar\">\r\n\t\t\t<button class=\"btn btn-primary\" (click)=\"addBanner()\">Add Banners</button>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"card-body\">\r\n\t\t<div class=\"mat-table-wrapper\">\r\n\t\t\t<mat-table #table [dataSource]=\"dataSource\">\r\n\t\t\t\t<!--- Note that these columns can be defined in any order.\r\n\t\t\t\tThe actual rendered columns are set as a property on the row definition\" -->\r\n\t\t\t\t<!-- Image Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"image\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Image </mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let banner\">\r\n\t\t\t\t\t\t<img [src]=\"banner.image_url\" class=\"img-fluid w-25\" />\r\n\t\t\t\t\t</mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<!-- Weight Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"actions\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let banner; let index = index\"\r\n\t\t\t\t\t\t><button\r\n\t\t\t\t\t\t\tmat-icon-button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Edit user\"\r\n\t\t\t\t\t\t\t(click)=\"editBanner(banner)\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<mat-icon>create</mat-icon></button\r\n\t\t\t\t\t\t>&nbsp;\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tmat-icon-button\r\n\t\t\t\t\t\t\tcolor=\"warn\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Delete user\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t(click)=\"deleteBanner(banner.id, index)\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<!-- Symbol Column -->\r\n\t\t\t\t<mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n\t\t\t\t<mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n\t\t\t</mat-table>\r\n\r\n\t\t\t<!-- Message for empty data  -->\r\n\t\t\t<div class=\"mat-table-message\" *ngIf=\"loaded && banners.length == 0\">\r\n\t\t\t\tNo records found\r\n\t\t\t</div>\r\n\t\t\t<div class=\"mat-table-message\" *ngIf=\"!loaded\">Please wait....</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- start: BOTTOM -->\r\n\t\t<div class=\"mat-table-bottom\">\r\n\t\t\t<!-- MATERIAL SPINNER | Url: 'https://material.angular.io/components/progress-spinner/overview' -->\r\n\t\t\t<mat-spinner [diameter]=\"20\" *ngIf=\"!loaded\"></mat-spinner>\r\n\t\t\t<!-- MATERIAL PAGINATOR | Binded to dasources -->\r\n\t\t\t<!-- See off.documentations 'https://material.angular.io/components/paginator/overview' -->\r\n\t\t\t<mat-paginator\r\n\t\t\t\t[pageSize]=\"10\"\r\n\t\t\t\t[pageSizeOptions]=\"[5, 10, 20]\"\r\n\t\t\t\t[showFirstLastButtons]=\"true\"\r\n\t\t\t></mat-paginator>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n"]}